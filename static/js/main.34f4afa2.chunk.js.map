{"version":3,"sources":["redux/actions/types.js","redux/actions/authenticationActions.js","images/logo.png","components/AuthenticateLogo.js","redux/actions/trainingActions.js","components/Login.js","components/Register.js","components/LoginContainer.js","components/Navbar.js","components/Navbar2.js","components/MyStopwatch.js","components/Training.js","components/modaldisplaytraining/ModalDisplayTrainingItem.js","components/ModalDisplayTraining.js","components/Schedule.js","components/homepagecomponents/HomepageTrainingItem.js","components/homepagecomponents/HomepageMeasurementItem.js","components/homepagecomponents/HomepageGoalItem.js","components/Homepage.js","components/AddGoals.js","components/DisplayMeasurementsItem.js","components/DisplayMeasurements.js","components/Logo.js","components/AddMeasurementsSummary.js","components/AddMeasurements.js","components/CreateTraining.js","components/DefaultContainer.js","reportWebVitals.js","redux/reducers/trainingReducer.js","redux/reducers/authenticationReducer.js","redux/reducers/index.js","store.js","index.js"],"names":["POST_LOGIN","POST_REGISTER","POST_LOGOUT","POST_LOGOUT_AUTH","GET_MEASUREMENTS","POST_TRAINING","GET_TRAININGS","GET_TRAININGS_SUCCESS","GET_GOALS","GET_GOALS_SUCCESS","GET_MEASUREMENTS_SUCCESS","POST_MEASUREMENT","LOGIN_ERROR","REGISTER_ERROR","GET_EXERCISES","GET_EXERCISES_SUCCESS","AUTH_ERROR","USER_LOADED","USER_LOADING","GET_OWN_EXERCISES_SUCCESS","END_TRAINING_SUCCESS","POST_TIME","postLogin","data","dispatch","axios","defaults","headers","common","post","then","res","window","localStorage","setItem","token","getItem","name","console","log","type","payload","catch","AuthenticateLogo","className","src","logo","alt","getMeasurements","getState","authentication","get","getExercises","postTraining","a","alert","err","response","getTrainings","getGoals","useStyles","makeStyles","theme","root","width","fontWeight","connect","state","error","tokenloaded","loadUser","props","history","push","useState","login","setLogin","password","setPassword","classes","handleLogin","e","preventDefault","onClick","goBack","icon","faArrowLeft","faArrowRight","noValidate","autoComplete","TextField","defaultValue","onChange","target","value","id","label","style","color","error_register","postRegister","username","setUsername","email","setEmail","password2","setPassword2","emailerror","setEmailError","validateEmail","test","String","toLowerCase","handleRegister","undefined","LoginContainer","useEffect","document","title","path","component","Login","Register","flexGrow","menuButton","marginRight","spacing","textAlign","bar","background","secondtitle","trainings","training","loadedtrainings","measurements","goals","postLogout","removeItem","useHistory","handleLogout","AppBar","position","Toolbar","IconButton","edge","aria-label","Typography","variant","faDumbbell","Button","Navbar2","Toggle","Nav","defaultSelected","eventKey","faHome","faClipboardList","faGavel","faWeight","faClock","MyStopwatch","forwardRef","ref","useStopwatch","autoStart","seconds","minutes","hours","start","pause","reset","useImperativeHandle","getAlert","handleStop","posttrain","string","time","send","fontSize","refminutes","refseconds","backgroundColor","borderRadius","height","boxShadow","backgroundImage","outline","outlineOffset","checkedIcon","display","content","endTraining","pk","location","series","setSeries","singleSeries","setSingleSeries","endtraining","setEndTraining","setInput","inputRef","useRef","buttonRef","endbuttonRef","childRef","handleEndTraining","current","visibility","exercise","ownexercise","reps","map","item","index","Checkbox","checked","disabled","length","concentric_phase","pause_after_concentric_phase","eccentric_phase","pause_after_eccentric_phase","weight","placeholder","min","max","parseInt","Number","isInteger","exercises","point","rest","MODAL_STYLES","top","left","transform","padding","zIndex","OVERLAY_STYLES","right","bottom","loadedmeasurements","loadedgoals","loadedexercises","deleteTraining","x","delete","updateDateTraining","y","newday","setNewDay","Date","selectDate","setSelectDate","training_date","handleDeleteTraining","alldata","back","handleAddtoDate","splitdate","input","split","fullday","date","ReactDOM","createPortal","faTimes","description","allprops","pathname","locale","dateFormat","selected","getElementById","require","allViews","Object","keys","Views","k","Schedule","modalopen","handleSelectEvent","setState","all","handleBacktoSchedule","this","events","moment","parse","toDate","localizer","momentLocalizer","culture","views","selectable","onSelectEvent","open","React","Component","HomepageTrainingItem","HomepageMeasurementItem","addNewMeasurement","measurement","right_biceps","left_biceps","right_forearm","left_forearm","right_leg","growth","deleteGoals","handleDelete","goal","currentTime","dd","getDate","mm","getMonth","fromNow","key","postGoals","startDate","setStartDate","actualDate","setActualDate","inputdescription","handleSendGoals","placeholderText","day","getDay","month","year","getFullYear","handleDate","deleteMeasurement","handleDeleteMeasurement","left_leg","setMeasurements","meas","slice","reverse","Logo","olddata","newdata","postMeasurement","setWeight","setGrowth","leftbiceps","setLeftBiceps","rightbiceps","setRightBiceps","leftforearm","setLeftForearm","rightforearm","setRightForearm","leftleg","setLeftLeg","rightleg","setRightLeg","bodyfat","summary","setSummary","setData","inputdate","setOldData","registerLocale","pl","isNaN","fetchData","ownexercises","postOwnExercise","dictdata","ownexerciseActive","setOwnExerciseActive","activediv","setActivediv","setOwnExercise","setExercise","assumedreps","setAssumedReps","setRest","concentricphase","setConcentricPhase","pauseconcentricphase","setPauseConcentricPhase","eccentricphase","setEccentricPhase","pauseeccentricphase","setPauseEccentricPhase","itemsplaceholders","setItemsPlaceHolders","items","setItems","seriesitems","setSeriesItems","name_of_training","training_description","inputOwnExercise","handlemovetoschedulepage","handleNewOwnExercise","handleClickExercise","element","prevItems","i","oldArray","array","allobjects","temparray","objects","secondtemparray","temp","shift","handleChangeinTrainingItems","postLogoutAuth","exact","Homepage","Training","AddMeasurements","DisplayMeasurements","CreateTraining","AddMeasurementsSummary","AddGoals","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","defaultexercises","loadingtrainings","loadingmeasurements","loadinggoals","loadingexercises","loadedtime","isAuthenticated","error_register_name","combineReducers","action","second","minute","hour","isLoading","isLoaded","middleware","thunk","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","render","DefaultContainer"],"mappings":"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","file":"static/js/main.34f4afa2.chunk.js","sourcesContent":["export const FETCH_POSTS = 'FETCH_POSTS';\r\nexport const NEW_POST = 'NEW_POST';\r\nexport const POST_LOGIN = 'POST_LOGIN';\r\nexport const POST_LOGIN_SUCCESS = 'POST_LOGIN_SUCCESS';\r\nexport const POST_REGISTER = 'POST_REGISTER';\r\nexport const POST_LOGOUT = 'POST_LOGOUT';\r\nexport const POST_LOGOUT_AUTH = 'POST_LOGOUT_AUTH';\r\nexport const GET_MEASUREMENTS = 'GET_MEASUREMENTS';\r\nexport const POST_TRAINING = 'POST_TRAINING';\r\nexport const GET_TRAININGS = 'GET_TRAININGS';\r\nexport const GET_TRAININGS_FAILURE = 'GET_TRAININGS_FAILURE';\r\nexport const GET_TRAININGS_SUCCESS = 'GET_TRAININGS_SUCCESS';\r\nexport const GET_GOALS = 'GET_GOALS';\r\nexport const GET_GOALS_SUCCESS = 'GET_GOALS_SUCCESS';\r\nexport const GET_MEASUREMENTS_SUCCESS = 'GET_MEASUREMENTS__SUCCESS';\r\nexport const POST_MEASUREMENT = 'POST_MEASUREMENT';\r\nexport const POST_MEASUREMENT_SUCCESS = 'POST_MEASUREMENT_SUCCESS';\r\nexport const LOGIN_ERROR = 'LOGIN_ERROR';\r\nexport const REGISTER_ERROR = 'REGISTER_ERROR';\r\nexport const GET_EXERCISES = 'GET_EXERCISES';\r\nexport const GET_EXERCISES_SUCCESS = 'GET_EXERCISES_SUCCESS';\r\nexport const AUTH_ERROR = \"AUTH_ERROR\";\r\nexport const USER_LOADED = \"USER_LOADED\";\r\nexport const USER_LOADING = \"USER_LOADING\";\r\nexport const GET_TIME = \"GET_TIME\";\r\nexport const GET_TIME_SUCCESS = \"GET_TIME_SUCCESS\";\r\nexport const GET_TIME_RESET = \"GET_TIME_RESET\";\r\nexport const GET_OWN_EXERCISES_SUCCESS = \"GET_OWN_EXERCISES_SUCCESS\";\r\nexport const DELETE_MEASUREMENT_SUCCESS = \"DELETE_MEASUREMENT_SUCCESS\";\r\nexport const END_TRAINING_SUCCESS = \"END_TRAINING_SUCCESS\";\r\nexport const POST_TIME = \"POST_TIME\";\r\n\r\n\r\n","import {POST_LOGIN,POST_LOGOUT,POST_LOGOUT_AUTH,LOGIN_ERROR, POST_REGISTER,REGISTER_ERROR,USER_LOADING,USER_LOADED,AUTH_ERROR} from './types';\r\nimport axios from 'axios';\r\n\r\nexport const postLogin =(data)=>dispatch => {\r\n        delete axios.defaults.headers.common[\"Authorization\"];\r\n        axios.post('https://true-effects.herokuapp.com/api/login/',data)\r\n        .then(res=>{\r\n            window.localStorage.setItem('token',res.data.token)\r\n            window.localStorage.getItem('name',res.data.name)\r\n            console.log(localStorage.getItem('token'))\r\n            \r\n        })\r\n        .then(res=>dispatch({\r\n            type: POST_LOGIN,\r\n            payload:res,\r\n            \r\n        }))\r\n        .catch(res=> dispatch({\r\n            type: LOGIN_ERROR,\r\n            payload: \"Dane logowania są niepoprawne\",\r\n        }))\r\n    \r\n}\r\nexport const postRegister = (data) => dispatch =>{\r\n    delete axios.defaults.headers.common[\"Authorization\"];\r\n    axios.post('https://true-effects.herokuapp.com/api/register/',data)\r\n    .then(res=>dispatch({\r\n        type: POST_REGISTER,\r\n        payload: res.data\r\n    }))\r\n    .catch(err=> dispatch(\r\n        {\r\n        type: REGISTER_ERROR,\r\n        payload: err.response.data,\r\n    }))}\r\nexport const postLogoutAuth = () => dispatch =>{\r\n    dispatch({\r\n        type: POST_LOGOUT_AUTH\r\n    })\r\n}\r\nexport const loadUser = (data) => (dispatch,getState) => {\r\n    dispatch({type: USER_LOADING});\r\n    delete axios.defaults.headers.common[\"Authorization\"];\r\n    axios.post('https://true-effects.herokuapp.com/api/login/',data)\r\n    .then(res=>{\r\n        dispatch({\r\n            type: USER_LOADED,\r\n            payload: res.data\r\n        })\r\n    }).catch(err=>{\r\n        dispatch({\r\n            type: LOGIN_ERROR,\r\n            payload : \"Błąd logowania popraw dane\"\r\n        })\r\n    })\r\n}\r\nexport const postLogout = ()=> (dispatch,getState) =>{\r\n    let token = getState().authentication.token\r\n    axios.defaults.headers.common['Authorization'] = `Token ${token}`\r\n    axios.get('https://true-effects.herokuapp.com/api/logout/')\r\n    .then(res=>dispatch({\r\n        type: AUTH_ERROR\r\n    }))\r\n    .then(res=>dispatch({\r\n        type: POST_LOGOUT,\r\n    }))\r\n    .then(res=>{\r\n        window.localStorage.removeItem('token')\r\n        window.localStorage.removeItem('name')\r\n    })\r\n}\r\n","export default __webpack_public_path__ + \"static/media/logo.5ab95c0c.png\";","import React from 'react';\r\nimport '../sass/authenticatelogo.scss';\r\nimport logo from '../images/logo.png';\r\nconst AuthenticateLogo = () => {\r\n    return (\r\n        <div className=\"authenticatelogo\">\r\n            <div className=\"authenticatelogo__block\">\r\n                <div className=\"authenticatelogo__block__circle1\">\r\n                    <div className=\"authenticatelogo__block__circle2\"></div>\r\n                    <div className=\"authenticatelogo__block__circle3\"></div>\r\n                    <div className=\"authenticatelogo__block__circle4\">\r\n                        <div className=\"authenticatelogo__block__circle4-logo\">\r\n                            <img src={logo} alt=\"logo\" />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default AuthenticateLogo;","import {GET_TIME,GET_TIME_SUCCESS,GET_MEASUREMENTS_SUCCESS,GET_MEASUREMENTS,GET_TRAININGS,\r\n     GET_TRAININGS_SUCCESS,GET_GOALS,GET_GOALS_SUCCESS,POST_MEASUREMENT,\r\n     POST_MEASUREMENT_SUCCESS, GET_EXERCISES,DELETE_MEASUREMENT_SUCCESS,\r\n     GET_EXERCISES_SUCCESS,GET_OWN_EXERCISES_SUCCESS,END_TRAINING_SUCCESS,POST_TIME} from './types';\r\nimport axios from 'axios';\r\n\r\nexport const getTime = (time)=>(dispatch) =>{\r\n    dispatch({type: GET_TIME})\r\n    dispatch({\r\n        type: GET_TIME_SUCCESS,\r\n        payload: time\r\n    })\r\n}\r\nexport const getMeasurements =()=>(dispatch,getState) => {\r\n    dispatch({type: GET_MEASUREMENTS})\r\n    let token = getState().authentication.token\r\n    axios.defaults.headers.common['Authorization'] = `Token ${token}`\r\n    return axios.get('https://true-effects.herokuapp.com/api/display_personal_dimensions/')\r\n    .then(res=> dispatch({\r\n        type: GET_MEASUREMENTS_SUCCESS,\r\n        payload: res,\r\n    }));\r\n}\r\nexport const getExercises = () =>(dispatch,getState)=>{\r\n    let token = getState().authentication.token\r\n    dispatch({type: GET_EXERCISES})\r\n    axios.defaults.headers.common['Authorization'] = `Token ${token}`\r\n    axios.get('https://true-effects.herokuapp.com/api/display_own_exercise/')\r\n    .then(res=>dispatch({\r\n        type: GET_OWN_EXERCISES_SUCCESS,\r\n        payload: res.data\r\n    }))\r\n    .then(\r\n    axios.get('https://true-effects.herokuapp.com/api/display_exercises/')\r\n    .then(res=> dispatch({\r\n        type: GET_EXERCISES_SUCCESS,\r\n        payload: res,\r\n    })));\r\n}\r\nexport const postTraining = (data) => async(dispatch,getState) => {\r\n    let token = window.localStorage.getItem('token')\r\n    if (token === null){\r\n        token = getState().authentication.token\r\n    }\r\n    axios.defaults.headers.common['Authorization'] = `Token ${token}`\r\n    return await axios.post('https://true-effects.herokuapp.com/api/create_training/',data)\r\n    .then(res=>{\r\n        alert(\"Trening został dodany\")\r\n    })\r\n    .catch(err=>{\r\n        console.log(err.response)\r\n        alert(\"Nieudało się dodać treningu popraw błędy\")\r\n    })\r\n}\r\nexport const getTrainings = () => (dispatch,getState) =>{\r\n    dispatch({type: GET_TRAININGS})\r\n    let token = getState().authentication.token\r\n    axios.defaults.headers.common['Authorization'] = `Token ${token}`\r\n    return axios.get('https://true-effects.herokuapp.com/api/display_training/')\r\n    .then(res => dispatch({\r\n        type: GET_TRAININGS_SUCCESS,\r\n        payload: res,\r\n    }));\r\n}\r\nexport const getGoals = () => (dispatch,getState) =>{\r\n    dispatch({type: GET_GOALS})\r\n    let token = getState().authentication.token\r\n    axios.defaults.headers.common['Authorization'] = `Token ${token}`\r\n    return axios.get('https://true-effects.herokuapp.com/api/display_description_goals/')\r\n    .then(res => dispatch({\r\n        type: GET_GOALS_SUCCESS,\r\n        payload: res,\r\n    }));\r\n}\r\nexport const postGoals = (data) => (dispatch,getState) => {\r\n    let token = getState().authentication.token\r\n    axios.defaults.headers.common['Authorization'] = `Token ${token}`\r\n    return axios.post('https://true-effects.herokuapp.com/api/create_description_goals/',data)\r\n    .then(res=>{\r\n        alert(\"Dodano cel\")\r\n    })\r\n    .catch(err=>{\r\n        console.log(err.response)\r\n    })\r\n    \r\n}\r\nexport const postMeasurement = (data) => (dispatch,getState) =>{\r\n    dispatch({type: POST_MEASUREMENT})\r\n    let token = getState().authentication.token\r\n    axios.defaults.headers.common['Authorization'] = `Token ${token}`\r\n    return axios.post('https://true-effects.herokuapp.com/api/create_personal_dimensions/',data)\r\n    .then(res=>dispatch({\r\n        type: POST_MEASUREMENT_SUCCESS,\r\n    }))\r\n    .catch(err=>{\r\n        console.log(err.response)\r\n    })\r\n\r\n}\r\n\r\nexport const postOwnExercise = (data) => (dispatch,getState) =>{\r\n    let token = getState().authentication.token\r\n    let dictdata = {\"name\": data}\r\n    axios.defaults.headers.common['Authorization'] = `Token ${token}`\r\n    return axios.post('https://true-effects.herokuapp.com/api/create_own_exercise/',dictdata)\r\n    .catch(err=>{\r\n        alert(\"Wystąpił błąd\")\r\n    })\r\n}\r\nexport const deleteTraining = pk =>(dispatch,getState)=>{\r\n    let token = getState().authentication.token\r\n    axios.defaults.headers.common['Authorization'] = `Token ${token}`\r\n    return axios.delete(`https://true-effects.herokuapp.com/api/delete_training/${pk}`)\r\n    .then(res => {\r\n        alert(\"Trening został usunięty\")\r\n    })\r\n    .catch(\"Wystąpił problem z usunięciem treningu\")\r\n\r\n}\r\nexport const deleteMeasurement = pk =>(dispatch,getState)=>{\r\n    let token = getState().authentication.token\r\n    axios.defaults.headers.common['Authorization'] = `Token ${token}`\r\n    return axios.delete(`https://true-effects.herokuapp.com/api/delete_measurement/${pk}`)\r\n    .then(res=>dispatch({\r\n        type: DELETE_MEASUREMENT_SUCCESS,\r\n    }))\r\n    .then(res=>{\r\n        alert(\"Trening został usunięty\")\r\n    })\r\n    .catch(\"Wystąpił problem z usunięciem treningu\")\r\n}\r\n\r\nexport const deleteGoals = pk =>(dispatch,getState)=>{\r\n    let token = getState().authentication.token\r\n    axios.defaults.headers.common['Authorization'] = `Token ${token}`\r\n    return axios.delete(`https://true-effects.herokuapp.com/api/delete_goals/${pk}`)\r\n    .then(res => {\r\n        alert(\"Trening został usunięty\")\r\n    })\r\n}\r\nexport const updateDateTraining = (pk,data) =>(dispatch,getState) =>{\r\n    let token = getState().authentication.token\r\n    axios.defaults.headers.common['Authorization'] = `Token ${token}`\r\n    console.log(data)\r\n    return axios.post(`https://true-effects.herokuapp.com/api/update_training_date/${pk}`,data)\r\n    .then(res => {\r\n        alert(\"Data treningu została zaktualizowana\")\r\n    })\r\n    .catch(err => {\r\n        alert(\"Wystąpił błąd. Spróbuj później\")\r\n    })\r\n}\r\nexport const endTraining = (pk,data)=>(dispatch,getState) =>{\r\n    let token = getState().authentication.token\r\n    axios.defaults.headers.common['Authorization'] = `Token ${token}`\r\n    return axios.post(`https://true-effects.herokuapp.com/api/update_training_after_end/${pk}`,data)\r\n    .then(res=>dispatch({\r\n        type: END_TRAINING_SUCCESS,\r\n    }))\r\n    .then(res => {\r\n        alert(\"Trenining został zakończony\")\r\n    })\r\n}\r\n\r\nexport const postTime = (sec,min,hour) => (dispatch) => {\r\n    dispatch({\r\n        type: POST_TIME,\r\n        second: sec,\r\n        minute: min,\r\n        hour: hour\r\n    })\r\n}","import React, { useState } from 'react';\r\nimport '../sass/login.scss';\r\nimport { connect } from 'react-redux';\r\nimport { postLogin, loadUser } from '../redux/actions/authenticationActions';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faArrowLeft, faArrowRight } from '@fortawesome/fontawesome-free-solid';\r\nimport AuthenticateLogo from './AuthenticateLogo';\r\nimport { getMeasurements, postTraining, getTrainings, getGoals, getExercises } from '../redux/actions/trainingActions';\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        '& .MuiTextField-root': {\r\n            width: '60ch',\r\n            '& .MuiInputBase-input': {\r\n                fontWeight: '700'\r\n            }\r\n        },\r\n    },\r\n}));\r\n\r\nconst Login = (props) => {\r\n    if (props.token !== null) {\r\n        props.history.push('/')\r\n    }\r\n    const handleMoveToRegister = () => {\r\n        props.history.push('/register')\r\n    }\r\n    const handleMovetoBack = () => {\r\n        props.history.goBack()\r\n    }\r\n    const [login, setLogin] = useState(\"test\")\r\n    const [password, setPassword] = useState(\"test\")\r\n    const classes = useStyles();\r\n    const handleLogin = async (e) => {\r\n        e.preventDefault();\r\n        let data = {\r\n            \"username\": login,\r\n            \"password\": password\r\n        }\r\n        await props.loadUser(data)\r\n    }\r\n    return (\r\n\r\n        <div className=\"login\">\r\n            <AuthenticateLogo />\r\n            <div className=\"login__secondcontainer\">\r\n                <div className=\"login__secondcontainer__top\">\r\n                    <div className=\"login__secondcontainer__top__back\" onClick={handleMovetoBack}>\r\n                        <div className=\"login__secondcontainer__top__back-icon\"><FontAwesomeIcon icon={faArrowLeft} /></div>\r\n                        <div className=\"login__secondcontainer__top__back-title\">Cofnij</div>\r\n                    </div>\r\n                    <div className=\"login__secondcontainer__top__forward\" onClick={handleMoveToRegister}>\r\n                        <div className=\"login__secondcontainer__top__forward-title\">Zarejestruj się</div>\r\n                        <div className=\"login__secondcontainer__top__forward-icon\"><FontAwesomeIcon icon={faArrowRight} /></div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"login__secondcontainer__form\">\r\n                    <form className={classes.root} noValidate autoComplete=\"off\">\r\n                        <div className=\"login__secondcontainer__form__title\">Zaloguj się</div>\r\n                        <div className=\"login__secondcontainer__form__secondtitle\">Zaloguj się aby kontynuować</div>\r\n                        <div className=\"login__secondcontainer__form__username-input\">\r\n                            <TextField defaultValue=\"test\" onChange={(e) => setLogin(e.target.value)} id=\"standard-password-input\" label=\"Nazwa użytkownika\" type=\"text\" autoComplete=\"current-password\" />\r\n                        </div>\r\n                        <div className=\"login__secondcontainer__form__username-password\">\r\n                            <TextField defaultValue=\"test\" onChange={(e) => setPassword(e.target.value)} id=\"standard-password-input\" label=\"Hasło\" type=\"password\" autoComplete=\"current-password\" />\r\n                        </div>\r\n                        {props.error !== '' && <p style={{ color: 'red' }}>{props.error}</p>}\r\n                        <div className=\"login__secondcontainer__form__button\">\r\n                            <button className=\"login__secondcontainer__form__button-login\" onClick={handleLogin}>Zaloguj się</button>\r\n                            <p className=\"login__secondcontainer__form__button-forget\">Zapomniałem hasła</p>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n};\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        error: state.authentication.error,\r\n        token: state.authentication.token,\r\n        tokenloaded: state.authentication.tokenloaded\r\n    }\r\n}\r\nexport default connect(mapStateToProps, { postLogin, getMeasurements, postTraining, getTrainings, getGoals, getExercises, loadUser })(Login);\r\n","import React, { useState } from 'react';\r\nimport '../sass/register.scss';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faArrowLeft, faArrowRight } from '@fortawesome/fontawesome-free-solid';\r\nimport AuthenticateLogo from './AuthenticateLogo';\r\nimport { postRegister } from '../redux/actions/authenticationActions';\r\nimport { connect } from 'react-redux';\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        '& .MuiTextField-root': {\r\n            width: '60ch',\r\n            '& .MuiInputBase-input': {\r\n                fontWeight: '700'\r\n            }\r\n        },\r\n    },\r\n}));\r\nconst Register = (props) => {\r\n    if (props.token !== null) {\r\n        props.history.push('/')\r\n    }\r\n    const [username, setUsername] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [password2, setPassword2] = useState('')\r\n    const [emailerror, setEmailError] = useState(false)\r\n    function validateEmail(email) {\r\n        const re = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n        return re.test(String(email).toLowerCase());\r\n    }\r\n\r\n    const handleMoveToLogin = () => {\r\n        props.history.push('/login')\r\n    }\r\n    const handleMovetoBack = () => {\r\n        props.history.goBack()\r\n    }\r\n    const handleRegister = async (e) => {\r\n        e.preventDefault()\r\n        if (validateEmail(email) !== false) {\r\n            let data = {\r\n                \"username\": username,\r\n                \"email\": email,\r\n                \"password\": password,\r\n                \"password2\": password2\r\n            }\r\n            await props.postRegister(data)\r\n        } else {\r\n            setEmailError(true)\r\n        }\r\n\r\n    }\r\n    const classes = useStyles();\r\n    return (\r\n        <div className=\"register\">\r\n            <AuthenticateLogo />\r\n            <div className=\"register__secondcontainer\">\r\n                <div className=\"register__secondcontainer__top\">\r\n                    <div className=\"register__secondcontainer__top__back\" onClick={handleMovetoBack}>\r\n                        <div className=\"register__secondcontainer__top__back-icon\"><FontAwesomeIcon icon={faArrowLeft} /></div>\r\n                        <div className=\"register__secondcontainer__top__back-title\">Cofnij</div>\r\n                    </div>\r\n                    <div className=\"register__secondcontainer__top__forward\" onClick={handleMoveToLogin}>\r\n                        <div className=\"register__secondcontainer__top__forward-title\">Zaloguj się</div>\r\n                        <div className=\"register__secondcontainer__top__forward-icon\"><FontAwesomeIcon icon={faArrowRight} /></div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"register__secondcontainer__form\">\r\n                    <form className={classes.root} noValidate autoComplete=\"off\">\r\n                        <div className=\"register__secondcontainer__form__title\">Zarejestruj się</div>\r\n                        <div className=\"register__secondcontainer__form__secondtitle\">Zarejestruj się aby kontynuować</div>\r\n                        <div className=\"register__secondcontainer__form__allinputs\">\r\n                            <div className=\"register__secondcontainer__form__username-input\">\r\n                                <TextField id=\"standard-password-input\" onChange={(e) => setUsername(e.target.value)} label=\"Nazwa użytkownika\" type=\"text\" autoComplete=\"current-password\" />\r\n                            </div>\r\n                            {props.error_register.username !== undefined && <p style={{ color: 'red' }}>{props.error_register.username}</p>}\r\n                            <div className=\"register__secondcontainer__form__username-email\">\r\n                                <TextField id=\"standard-password-input\" onChange={(e) => setEmail(e.target.value)} label=\"Email\" type=\"email\" autoComplete=\"current-password\" />\r\n                            </div>\r\n                            {emailerror && <p style={{ color: 'red' }}>Nieprawidłowy email</p>}\r\n                            <div className=\"register__secondcontainer__form__username-password\">\r\n                                <TextField id=\"standard-password-input\" onChange={(e) => setPassword(e.target.value)} label=\"Hasło\" type=\"password\" autoComplete=\"current-password\" />\r\n                            </div>\r\n                            {props.error_register.password !== undefined && <p style={{ color: 'red' }}>{props.error_register.password}</p>}\r\n                            <div className=\"register__secondcontainer__form__username-password\">\r\n                                <TextField id=\"standard-password-input\" onChange={(e) => setPassword2(e.target.value)} label=\"Powtórz hasło\" type=\"password\" autoComplete=\"current-password\" />\r\n                            </div>\r\n                            {props.error_register.password2 !== undefined && <p style={{ color: 'red' }}>{props.error_register.password2}</p>}\r\n\r\n                        </div>\r\n                        <div className=\"register__secondcontainer__form__button\">\r\n                            <button className=\"register__secondcontainer__form__button-register\" onClick={handleRegister}>Zarejestruj się</button>\r\n                            {/* <p className=\"register__secondcontainer__form__button-forget\">Zapomniałem hasła</p> */}\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        error_register: state.authentication.error_register,\r\n        token: state.authentication.token\r\n    }\r\n}\r\nexport default connect(mapStateToProps, { postRegister })(Register);\r\n","import { Route } from 'react-router-dom';\r\nimport React, { useEffect } from 'react';\r\nimport Login from './Login';\r\nimport Register from './Register';\r\nimport '../sass/defaultcontainer.scss';\r\n\r\nconst LoginContainer = () => {\r\n  useEffect(() => {\r\n    document.title = \"TrueEffects\"\r\n  }, [])\r\n  return (\r\n    <div className=\"containerlogin\">\r\n      <Route path=\"/login\" component={Login} />\r\n      <Route path=\"/register\" component={Register} />\r\n    </div>\r\n  )\r\n}\r\nexport default LoginContainer","import React from 'react';\r\nimport '../sass/navbar.scss';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faDumbbell } from '@fortawesome/fontawesome-free-solid';\r\nimport { connect } from 'react-redux';\r\nimport { postLogout } from '../redux/actions/authenticationActions';\r\nimport { useHistory } from \"react-router-dom\";\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n    textAlign: 'center',\r\n  },\r\n  bar: {\r\n    background: '#db3d44',\r\n  },\r\n  secondtitle: {\r\n    textAlign: 'center',\r\n  }\r\n}));\r\nconst Navbar = (props) => {\r\n  const history = useHistory()\r\n  const handleLogout = async () => {\r\n    await props.postLogout()\r\n  }\r\n  const classes = useStyles();\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar className={classes.bar} position=\"static\">\r\n        <Toolbar>\r\n          <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\">\r\n          </IconButton>\r\n          <Typography variant=\"h6\" className={classes.title}>\r\n            <FontAwesomeIcon icon={faDumbbell} />TrueEffects\r\n                </Typography >\r\n          {props.token !== null ? <> <p className={classes.secondtitle} id=\"navbaruser\">Witaj {props.name}<Button onClick={handleLogout} color=\"inherit\">Wyloguj się</Button></p></> : <><Button color=\"inherit\">Zaloguj się</Button></>}\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n};\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    trainings: state.training.trainings.data,\r\n    loadedtrainings: state.training.loadedtrainings,\r\n    measurements: state.training.measurements.data,\r\n    goals: state.training.goals.data,\r\n    name: state.authentication.name,\r\n    token: state.authentication.token\r\n  }\r\n}\r\nexport default connect(mapStateToProps, { postLogout })(Navbar);\r\n","import React from 'react';\r\nimport '../sass/navbar.scss';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport SideNav, {NavItem, NavIcon, NavText } from '@trendmicro/react-sidenav';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faHome,faClipboardList,faWeight,faGavel,faClock } from '@fortawesome/fontawesome-free-solid';\r\n// import { makeStyles } from '@material-ui/core/styles';\r\nconst Navbar2 = (props) => {\r\n    const history = useHistory()\r\n    const handleMovetoHome = () =>{\r\n        history.push(\"/\");\r\n    }\r\n    const handleMovetoScheduler = () =>{\r\n        history.push(\"/schedule\");\r\n    }\r\n    const handleMovetoCreator = () =>{\r\n        history.push(\"/createtraining\");\r\n    }\r\n    const handleMovetoMeasurements = () =>{\r\n        history.push(\"/addmeasurements\");\r\n    }\r\n    const handleMovetoAllMeasurements = () =>{\r\n        history.push(\"/displaymeasurements\");\r\n    }\r\n    const handleMovetoAddGoals = () =>{\r\n        history.push(\"/addgoals\");\r\n    }\r\n    return (\r\n        <SideNav>\r\n                <SideNav.Toggle />\r\n                <SideNav.Nav defaultSelected=\"home\">\r\n                    <NavItem onClick={handleMovetoHome} eventKey=\"home\">\r\n                        <NavIcon >\r\n                          <FontAwesomeIcon icon={faHome} />\r\n                        </NavIcon>\r\n                        <NavText>\r\n                            Strona Domowa\r\n                        </NavText>\r\n                    </NavItem>\r\n                    <NavItem onClick={handleMovetoScheduler} eventKey=\"clipboard\">\r\n                        <NavIcon >\r\n                          <FontAwesomeIcon icon={faClipboardList} />\r\n                        </NavIcon>\r\n                        <NavText>\r\n                            Kalendarz treningów\r\n                        </NavText>\r\n                    </NavItem>\r\n                    <NavItem onClick={handleMovetoCreator} eventKey=\"gavel\">\r\n                        <NavIcon>\r\n                          <FontAwesomeIcon icon={faGavel} />\r\n                        </NavIcon>\r\n                        <NavText>\r\n                            Kreator trening\r\n                        </NavText>\r\n                    </NavItem>\r\n                    <NavItem  onClick={handleMovetoMeasurements} eventKey=\"weight\">\r\n                        <NavIcon>\r\n                         <FontAwesomeIcon icon={faWeight} />\r\n                        </NavIcon>\r\n                        <NavText>\r\n                            Dodaj pomiary\r\n                        </NavText>\r\n                    </NavItem>\r\n                    <NavItem onClick={handleMovetoAllMeasurements} eventKey=\"weightall\">\r\n                        <NavIcon>\r\n                          <FontAwesomeIcon icon={faWeight} />\r\n                        </NavIcon>\r\n                        <NavText>\r\n                            Wyświetl wszystkie pomiary\r\n                        </NavText>\r\n                    </NavItem>\r\n                    <NavItem onClick={handleMovetoAddGoals} eventKey=\"goal\">\r\n                        <NavIcon>\r\n                          <FontAwesomeIcon icon={faClock} />\r\n                        </NavIcon>\r\n                        <NavText>\r\n                            Dodaj Cel do zrealizowania\r\n                        </NavText>\r\n                    </NavItem>\r\n                </SideNav.Nav>\r\n            </SideNav>\r\n    );\r\n};\r\n\r\nexport default Navbar2;","import React, { forwardRef, useImperativeHandle } from 'react';\r\nimport { useStopwatch } from 'react-timer-hook';\r\nconst MyStopwatch = forwardRef((props, ref) => {\r\n  const {\r\n    seconds,\r\n    minutes,\r\n    hours,\r\n    start,\r\n    pause,\r\n    reset,\r\n  } = useStopwatch({ autoStart: false });\r\n  const handleStart = () => {\r\n    start()\r\n  }\r\n  useImperativeHandle(ref, () => ({\r\n    getAlert() {\r\n      alert(`Zakonczono trenining w czasie ${hours < 10 ? 0 : \"\"}${hours}:${minutes < 10 ? 0 : \"\"}${minutes}:${seconds < 10 ? 0 : \"\"}${seconds}`);\r\n    },\r\n    handleStop() {\r\n      pause()\r\n    },\r\n    async posttrain() {\r\n      let string = \"\"\r\n      if (hours < 10) {\r\n        string += \"0\" + hours\r\n        string += \":\"\r\n      }\r\n      else {\r\n        string += hours\r\n        string += \":\"\r\n      }\r\n      if (minutes < 10) {\r\n        string += \"0\" + minutes\r\n        string += \":\"\r\n      }\r\n      else {\r\n        string += minutes\r\n        string += \":\"\r\n      }\r\n      if (seconds < 10) {\r\n        string += \"0\" + seconds\r\n\r\n      }\r\n      else {\r\n        string += seconds\r\n\r\n      }\r\n      props.training.time = string\r\n      await props.send(props.id, props.training)\r\n      await props.get()\r\n    }\r\n\r\n  }));\r\n\r\n\r\n\r\n  return (\r\n    <div style={{ textAlign: 'center' }}>\r\n      <div className=\"stopwatch__timer\" style={{ fontSize: '100px' }}>\r\n        <span >{hours < 10 && 0}{hours}</span>:<span ref={props.refminutes}>{minutes < 10 && 0}{minutes}</span>:<span ref={props.refseconds}>{seconds < 10 && 0}{seconds}</span>\r\n      </div>\r\n      <div className=\"stopwatchbuttons\">\r\n        <button ref={ref} id=\"start\" onClick={handleStart}>Start</button>\r\n        <button id=\"pause\" onClick={pause}>Pause</button>\r\n        <button id=\"reset\" onClick={reset}>Reset</button>\r\n      </div>\r\n    </div>\r\n  );\r\n})\r\nexport default MyStopwatch;\r\n","import React, { useState, useRef } from 'react';\r\nimport MyStopwatch from './MyStopwatch';\r\nimport '../sass/training.scss';\r\nimport logo from '../images/logo.png';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faArrowLeft, faArrowRight } from '@fortawesome/fontawesome-free-solid';\r\nimport { endTraining, getTrainings } from '../redux/actions/trainingActions';\r\nimport { connect } from 'react-redux';\r\nimport { useHistory } from \"react-router-dom\";\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    '&:hover': {\r\n      backgroundColor: 'transparent',\r\n    },\r\n  },\r\n  icon: {\r\n    borderRadius: 3,\r\n    width: 16,\r\n    height: 16,\r\n    boxShadow: 'inset 0 0 0 1px rgba(16,22,26,.2), inset 0 -1px 0 rgba(16,22,26,.1)',\r\n    backgroundColor: '#f5f8fa',\r\n    backgroundImage: 'linear-gradient(180deg,hsla(0,0%,100%,.8),hsla(0,0%,100%,0))',\r\n    '$root.Mui-focusVisible &': {\r\n      outline: '2px auto rgba(19,124,189,.6)',\r\n      outlineOffset: 2,\r\n    },\r\n    'input:hover ~ &': {\r\n      backgroundColor: '#ebf1f5',\r\n    },\r\n    'input:disabled ~ &': {\r\n      boxShadow: 'none',\r\n      background: 'rgba(206,217,224,.5)',\r\n    },\r\n  },\r\n  checkedIcon: {\r\n    backgroundColor: '#137cbd',\r\n    backgroundImage: 'linear-gradient(180deg,hsla(0,0%,100%,.1),hsla(0,0%,100%,0))',\r\n    '&:before': {\r\n      display: 'block',\r\n      width: 16,\r\n      height: 16,\r\n      backgroundImage:\r\n        \"url(\\\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 16 16'%3E%3Cpath\" +\r\n        \" fill-rule='evenodd' clip-rule='evenodd' d='M12 5c-.28 0-.53.11-.71.29L7 9.59l-2.29-2.3a1.003 \" +\r\n        \"1.003 0 00-1.42 1.42l3 3c.18.18.43.29.71.29s.53-.11.71-.29l5-5A1.003 1.003 0 0012 5z' fill='%23fff'/%3E%3C/svg%3E\\\")\",\r\n      content: '\"\"',\r\n    },\r\n    'input:hover ~ &': {\r\n      backgroundColor: '#106ba3',\r\n    },\r\n  },\r\n});\r\nconst Training = (props) => {\r\n  const history = useHistory()\r\n  const { training } = props.location\r\n  const [series, setSeries] = useState(0);\r\n  const [singleSeries, setSingleSeries] = useState(0)\r\n  const [endtraining, setEndTraining] = useState(false)\r\n  const [input, setInput] = useState('')\r\n  const inputRef = useRef();\r\n  const buttonRef = useRef();\r\n  const endbuttonRef = useRef();\r\n  const childRef = useRef();\r\n  const goNext = () => {\r\n    if (inputRef.current.value !== \"\") {\r\n      training.training[`${series}`].reps[`${singleSeries}`] = parseInt(inputRef.current.value)\r\n    }\r\n    let value = parseInt(inputRef.current.value)\r\n    let placeholder = parseInt(inputRef.current.placeholder)\r\n    if (Number.isInteger(value)) {\r\n      inputRef.current.value = ''\r\n      if (singleSeries + 1 < training.training[series].reps.length) {\r\n        setSingleSeries(singleSeries + 1)\r\n      } else {\r\n        if (series + 1 >= training.training.length) {\r\n          setEndTraining(true)\r\n        }\r\n        else {\r\n          setSeries(series + 1)\r\n          setSingleSeries(0)\r\n        }\r\n      }\r\n    }\r\n    else if (Number.isInteger(placeholder)) {\r\n      inputRef.current.value = ''\r\n      if (singleSeries + 1 < training.training[series].reps.length) {\r\n        setSingleSeries(singleSeries + 1)\r\n      } else {\r\n        if (series + 1 >= training.training.length) {\r\n          setEndTraining(true)\r\n        } else {\r\n          setSeries(series + 1)\r\n          setSingleSeries(0)\r\n        }\r\n      }\r\n    }\r\n    else {\r\n      alert(\"Niepoprawne dane\");\r\n    }\r\n  }\r\n  const handlemovetoschedulepage = () => {\r\n    history.push('/schedule/')\r\n  }\r\n  const handleInput = () => {\r\n    setInput(inputRef.current.value)\r\n  }\r\n\r\n  const handleEndTraining = async () => {\r\n    await childRef.current.handleStop()\r\n    await childRef.current.getAlert()\r\n    await childRef.current.posttrain()\r\n    await handlemovetoschedulepage()\r\n  }\r\n  return (\r\n    <div className=\"training\">\r\n      <div className=\"training__top\">\r\n        <div className=\"training__top__previousexercise\">\r\n          <div style={{ visibility: typeof training.training[series - 1] !== \"undefined\" ? 'visible' : 'hidden' }} className=\"training__top__previousexercise-title\"><FontAwesomeIcon icon={faArrowLeft} /> Poprzednie ćwiczenie</div>\r\n          <div style={{ visibility: typeof training.training[series - 1] !== \"undefined\" ? 'visible' : 'hidden' }} className=\"training__top__previousexercise-name\">{typeof training.training[series - 1] !== \"undefined\" && training.training[series - 1].exercise.name}</div>\r\n        </div>\r\n        {typeof training.training[series + 1] !== \"undefined\" && <div className=\"training__top__nextexercise\">\r\n          <div style={{ visibility: typeof training.training[series + 1] !== \"undefined\" ? 'visible' : 'hidden' }} className=\"training__top__nextexercise-title\">Następne ćwiczenie <FontAwesomeIcon icon={faArrowRight} /></div>\r\n          <div style={{ visibility: typeof training.training[series + 1] !== \"undefined\" ? 'visible' : 'hidden' }} className=\"training__top__nextexercise-name\">{typeof training.training[series + 1] !== \"undefined\" && training.training[series + 1].exercise !== null ? training.training[series + 1].exercise.name !== null : training.training[series + 1].ownexercise.name}</div>\r\n        </div>}\r\n      </div>\r\n      <div className=\"training__middle\">\r\n        <div className=\"training__middle-title\">Aktualne Ćwiczenie</div>\r\n        <div className=\"training__middle-exercise\">{training.training[series].exercise !== null ? training.training[series].exercise.name : training.training[series].ownexercise.name}</div>\r\n        <div className=\"training__middle__logotime\">\r\n          <div className=\"training__middle__logotime-logo\">\r\n            <img src={logo} alt=\"logo\" />\r\n          </div>\r\n          <div className=\"training__middle__logotime-time\" >\r\n            <MyStopwatch ref={childRef} send={props.endTraining} get={props.getTrainings} id={props.location.training.id} training={props.location.training} />\r\n          </div>\r\n        </div>\r\n        <div className=\"training__middle__series\">\r\n          <div className=\"training__middle__series__checkboxes\" style={{ visibility: endtraining ? 'hidden' : 'visible' }}>\r\n            {training.training[`${series}`].reps.map(function (item, index) {\r\n              if (index < singleSeries + 1) {\r\n                return (\r\n                  <Checkbox checked={true} />\r\n                )\r\n              } else {\r\n                return (\r\n                  <Checkbox disabled checked={false} />\r\n                )\r\n              }\r\n            }\r\n            )}\r\n          </div>\r\n          <div className=\"training__middle__series-title\" style={{ visibility: endtraining ? 'hidden' : 'visible' }}>Seria {singleSeries + 1}/{training.training[`${series}`].reps.length}</div>\r\n        </div>\r\n      </div>\r\n      <div className=\"training__bottom\">\r\n        <div className=\"training__bottom__leftbutton\">\r\n          <button id=\"endtraining\" ref={endbuttonRef} onClick={handleEndTraining}>Zakończ trening X</button>\r\n        </div>\r\n        <div className=\"training__bottom__phase\" style={{ visibility: endtraining ? 'hidden' : 'visible' }}>\r\n          <div className=\"training__bottom__phase-title\">Fazy</div>\r\n          <div className=\"training__bottom__phase__allphases\">\r\n            <div className=\"training__bottom__phase__allphases-phase\">{training.training[`${series}`].concentric_phase}</div>\r\n            <div className=\"training__bottom__phase__allphases-/\">/</div>\r\n            <div className=\"training__bottom__phase__allphases-phase\">{training.training[`${series}`].pause_after_concentric_phase}</div>\r\n            <div className=\"training__bottom__phase__allphases-/\">/</div>\r\n            <div className=\"training__bottom__phase__allphases-phase\">{training.training[`${series}`].eccentric_phase}</div>\r\n            <div className=\"training__bottom__phase__allphases-/\">/</div>\r\n            <div className=\"training__bottom__phase__allphases-phase\">{training.training[`${series}`].pause_after_eccentric_phase}</div>\r\n          </div>\r\n          <div className=\"training__bottom__weight-title\">Ciężar dodatkowy</div>\r\n          <div className=\"training__bottom__weight-title2\">\r\n            {training.training[`${series}`].weight}kg\r\n                    </div>\r\n          <div className=\"training__bottom__phase-title2\">Ile powtórzeń wykonałeś w serii</div>\r\n          <div className=\"training__bottom__phase__reps\">\r\n            <div className=\"training__bottom__phase__reps-actualreps\"><input ref={inputRef} placeholder={training.training[`${series}`].reps[`${singleSeries}`]} onChange={handleInput} id=\"actualreps\" min=\"0\" max=\"10000\" /></div>\r\n            <div className=\"training__bottom__phase__reps-/\">/</div>\r\n            <div className=\"training__bottom__phase__reps-assumedreps\">{training.training[`${series}`].reps[`${singleSeries}`]}</div>\r\n          </div>\r\n        </div>\r\n        <div className=\"training__bottom__rightbutton\">\r\n          <button ref={buttonRef} style={{ visibility: endtraining ? 'hidden' : 'visible' }} onClick={goNext} id=\"nextexercise\">Przejdź dalej</button>\r\n        </div>\r\n      </div>\r\n\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default connect(null, { getTrainings, endTraining })(Training);\r\n","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nconst ModalDisplayTrainingItem = (props) => {\r\n    return (\r\n        <>\r\n            <tr>\r\n                <td>{props.training.exercise !== null ? props.training.exercise.name : props.training.ownexercise.name }</td>\r\n                <td>{props.training.reps.length}</td>\r\n                <td>\r\n                {props.training.reps.map((point, index) => {\r\n                    if (index === props.training.reps.length-1) {\r\n                    return (\r\n                    <span>{point}</span>\r\n                    )}else{\r\n                        console.log(index)\r\n                        console.log(props.training.reps.length)\r\n                    return (<span>{point}/</span>)\r\n      }\r\n    }\r\n   )}\r\n                </td>\r\n                <td>{props.training.rest}</td>\r\n                <td>{props.training.weight} kg</td>\r\n                <td>{props.training.concentric_phase}/{props.training.pause_after_concentric_phase}/{props.training.eccentric_phase}/{props.training.pause_after_eccentric_phase}</td>\r\n            </tr>\r\n        </>\r\n    );\r\n};\r\nconst mapStateToProps = (state) => {\r\n    return{\r\n        trainings: state.training.trainings.data,\r\n        loadedtrainings: state.training.loadedtrainings,\r\n        measurements: state.training.measurements.data,\r\n        goals: state.training.goals.data,\r\n        exercises: state.training.exercises.data\r\n    }\r\n}\r\nexport default connect(mapStateToProps)(ModalDisplayTrainingItem); \r\n","import React, { useState, useRef } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faTimes } from '@fortawesome/fontawesome-free-solid';\r\nimport ModalDisplayTrainingItem from './modaldisplaytraining/ModalDisplayTrainingItem';\r\nimport { connect } from 'react-redux';\r\nimport '../sass/modaldisplaytraining.css';\r\nimport DatePicker from \"react-datepicker\";\r\nimport { deleteTraining, getTrainings, updateDateTraining } from '../redux/actions/trainingActions';\r\nconst MODAL_STYLES = {\r\n    position: 'fixed',\r\n    top: '50%',\r\n    left: '50%',\r\n    transform: 'translate(-50%,-50%)',\r\n    backgroundColor: '#457B9D',\r\n    padding: '50px',\r\n    zIndex: 1010\r\n}\r\nconst OVERLAY_STYLES = {\r\n    position: 'fixed',\r\n    top: 0,\r\n    left: 0,\r\n    right: 0,\r\n    bottom: 0,\r\n    backgroundColor: 'rgba(0,0,0,.7)',\r\n    zIndex: 10,\r\n    color: 'rgba(0,0,0)',\r\n}\r\n\r\nconst ModalDisplayTraining = props => {\r\n    const [newday, setNewDay] = useState(false)\r\n    const [selectDate, setSelectDate] = useState(new Date())\r\n    const training_date = useRef(null);\r\n    const handleMovetoTraining = () => {\r\n        props.allprops.history.push({ pathname: '/training', training: props.alldata });\r\n    }\r\n\r\n    const handleDeleteTraining = async () => {\r\n        await props.deleteTraining(props.alldata.id)\r\n        await props.getTrainings()\r\n        await props.back()\r\n    }\r\n    const handleAddtoDate = async () => {\r\n        let splitdate = training_date.current.input.value.split(\"/\")\r\n        let fullday = splitdate[2] + \"-\" + splitdate[1] + \"-\" + splitdate[0]\r\n        let date = { 'date': fullday }\r\n        await props.updateDateTraining(props.alldata.id, date)\r\n        await props.getTrainings()\r\n    }\r\n\r\n    return ReactDOM.createPortal(\r\n        <div className=\"modaldisplaytraining\" style={OVERLAY_STYLES}>\r\n            <div className=\"modaldisplaytraining__data\" style={MODAL_STYLES}>\r\n                <div className=\"modaldisplaytraining__data-close\" ><span><FontAwesomeIcon onClick={() => props.back()} icon={faTimes} /></span></div>\r\n                <div className=\"modaldisplaytraining__data-title\">{props.title}</div>\r\n                <div className=\"modaldisplaytraining__data__datetime\">\r\n                    <div className=\"modaldisplaytraining__data__datetime-time\">Czas trwania treningu : {props.time}</div>\r\n                    <div className=\"modaldisplaytraining__data__datetime-date\">{props.date}</div>\r\n                </div>\r\n                <div className=\"modaldisplaytraining__data-completed\"></div>\r\n                <div className=\"modaldisplaytraining__data-description\">{props.description}</div>\r\n\r\n                <div className=\"modaldisplaytraining__data__buttons\">\r\n                    {/* <div className=\"modaldisplaytraining__data__buttons-button\">\r\n                <button onClick={handleSummaryTraining}>Podsumowanie treningu</button>\r\n            </div> */}\r\n\r\n                    <div className=\"modaldisplaytraining__data__buttons-button\">\r\n                        <button onClick={handleDeleteTraining}>Usuń trening</button>\r\n                    </div>\r\n                    <div className=\"modaldisplaytraining__data__buttons-button\">\r\n                        <button onClick={handleMovetoTraining}>Powtórz trening</button>\r\n                    </div>\r\n                    <div className=\"modaldisplaytraining__data__buttons-button\" onClick={() => setNewDay(!newday)} >\r\n                        <button>{newday ? \"Schowaj formularz \" : \"Dodaj trening do innego dnia\"}</button>\r\n                    </div>\r\n                </div>\r\n                <div className=\"modaldisplaytraining__data__input\" style={{ display: newday ? 'flex' : 'none' }}>\r\n                    <span>\r\n                        <DatePicker ref={training_date} locale='pl' dateFormat='dd/MM/yyyy' selected={selectDate} onChange={date => setSelectDate(date)} />\r\n                    </span>\r\n                    <div className=\"modaldisplaytraining__data__input-button\">\r\n                        <button onClick={handleAddtoDate}>Dodaj trening do podanego dnia</button>\r\n                    </div>\r\n                </div>\r\n                <div className=\"modaldisplaytraining__data__elements\">\r\n                    <table id=\"training\">\r\n                        <tr>\r\n                            <th>Nazwa Ćwiczenia</th>\r\n                            <th>Liczba Serii</th>\r\n                            <th>Liczba Powtórzeń</th>\r\n                            <th>Przerwa między seriami</th>\r\n                            <th>Ciężar</th>\r\n                            <th>Fazy</th>\r\n                        </tr>\r\n                        {props.training.map((training) => <ModalDisplayTrainingItem training={training} />)}\r\n                    </table>\r\n                </div>\r\n            </div>\r\n        </div>,\r\n        document.getElementById('root')\r\n    );\r\n};\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        token: state.authentication.token,\r\n        loadedtrainings: state.training.loadedtrainings,\r\n        loadedmeasurements: state.training.loadedmeasurements,\r\n        loadedgoals: state.training.loadedgoals,\r\n        loadedexercises: state.training.loadedexercises\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = () => dispatch => {\r\n    return {\r\n        deleteTraining: (x) => dispatch(deleteTraining(x)),\r\n        getTrainings: () => dispatch(getTrainings()),\r\n        updateDateTraining: (x, y) => dispatch(updateDateTraining(x, y))\r\n    };\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ModalDisplayTraining);\r\n","import React from 'react';\r\nimport { Calendar, momentLocalizer, Views } from 'react-big-calendar'\r\nimport 'react-big-calendar/lib/css/react-big-calendar.css';\r\nimport moment from 'moment';\r\nimport { connect } from 'react-redux';\r\nimport { getMeasurements, getTrainings, getGoals } from '../redux/actions/trainingActions';\r\nimport ModalDisplayTraining from './ModalDisplayTraining';\r\nimport 'moment/locale/pl';\r\nrequire('moment/locale/pl.js')\r\nlet allViews = Object.keys(Views).map(k => Views[k])\r\nexport class Schedule extends React.Component {\r\n  state = {\r\n    modalopen: false,\r\n    training: null,\r\n    test: false,\r\n    date: null,\r\n    time: null,\r\n    description: '',\r\n    title: ''\r\n  }\r\n  handleSelectEvent = (e) => {\r\n    console.log(e)\r\n    this.setState({\r\n      modalopen: true,\r\n      training: e.data,\r\n      test: !this.state.test,\r\n      date: e.date,\r\n      time: e.time,\r\n      description: e.description,\r\n      title: e.title,\r\n      alldata: e.all\r\n    })\r\n  }\r\n  handleBacktoSchedule = () => {\r\n    this.setState({\r\n      modalopen: false\r\n    })\r\n  }\r\n\r\n  render() {\r\n    const { modalopen } = this.state\r\n    let events = []\r\n    this.props.trainings.map((e) => {\r\n      events.push({\r\n        'title': e.name,\r\n        'start': moment(Date.parse(e.date)).toDate(),\r\n        'end': moment(Date.parse(e.date)).toDate(),\r\n        'data': e.training,\r\n        'date': e.date,\r\n        'time': e.time,\r\n        'description': e.description,\r\n        'all': e\r\n      })\r\n      return events\r\n    })\r\n    const localizer = momentLocalizer(moment)\r\n    return (\r\n      <>\r\n        <div className=\"schedule\">\r\n          <Calendar culture='pl-PL' views={allViews} selectable={true}\r\n            events={events}\r\n            onSelectEvent={this.handleSelectEvent}\r\n            localizer={localizer} style={{ height: 900, width: '95%' }} />\r\n          {modalopen && <ModalDisplayTraining back={this.handleBacktoSchedule} allprops={this.props} open={this.state.modalopen} training={this.state.training} date={this.state.date} time={this.state.time} description={this.state.description} title={this.state.title} alldata={this.state.alldata} />}\r\n\r\n        </div>\r\n\r\n      </>\r\n    )\r\n  }\r\n}\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n\r\n    trainings: state.training.trainings.data,\r\n    loadedtrainings: state.training.loadedtrainings,\r\n  }\r\n}\r\nexport default connect(mapStateToProps, { getMeasurements, getTrainings, getGoals })(Schedule);\r\n","import React from 'react';\r\nconst HomepageTrainingItem = (props) => {\r\n    const movetoTraining = (training) => {\r\n        props.allprops.history.push({ pathname: '/training', training: training });\r\n    }\r\n    return (\r\n        <div className=\"homepage__lasttrainingscontainer__container__element\">\r\n            <div className=\"homepage__lasttrainingscontainer__container__element__top\">\r\n                <div className=\"homepage__lasttrainingscontainer__container__element__top-title\">{props.training.name}</div>\r\n                <div className=\"homepage__lasttrainingscontainer__container__element__top-databutton\">\r\n                    <div className=\"homepage__lasttrainingscontainer__container__element__top-data\">{props.training.date}</div>\r\n                    <div className=\"homepage__lasttrainingscontainer__container__element__top-button\"><button onClick={() => movetoTraining(props.training)}>Powtórz trening</button></div>\r\n                </div>\r\n            </div>\r\n            <div className=\"homepage__lasttrainingscontainer__container__element__bottom\">\r\n                {props.training.name}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\nexport default HomepageTrainingItem;","import React from 'react';\r\nimport { useHistory } from \"react-router-dom\";\r\nconst HomepageMeasurementItem = (props) => {\r\n    const history = useHistory()\r\n\r\n    const addNewMeasurement = () => {\r\n        history.push('./addmeasurements')\r\n\r\n    }\r\n    return (\r\n        <>      {props.measurement.length > 0 ? <>\r\n            <div className=\"homepage__measurementcontainer-data\">Pomiary na dzień {props.measurement[props.measurement.length - 1].date}</div>\r\n            <div className=\"homepage__measurementcontainer-add\"><button onClick={addNewMeasurement}>+ Dodaj nowe pomiary</button></div>\r\n            <div className=\"homepage__measurementcontainer__container\">\r\n                <div className=\"homepage__measurementcontainer__container__element\">\r\n                    <div className=\"homepage__measurementcontainer__container__element-name\">Prawy biceps</div>\r\n                    <div className=\"homepage__measurementcontainer__container__element-result\">{props.measurement[props.measurement.length - 1].right_biceps}  cm</div>\r\n                </div>\r\n                <div className=\"homepage__measurementcontainer__container__element\">\r\n                    <div className=\"homepage__measurementcontainer__container__element-name\">Lewy biceps</div>\r\n                    <div className=\"homepage__measurementcontainer__container__element-result\">{props.measurement[props.measurement.length - 1].left_biceps} cm</div>\r\n                </div>\r\n                <div className=\"homepage__measurementcontainer__container__element\">\r\n                    <div className=\"homepage__measurementcontainer__container__element-name\">Prawe przedramię</div>\r\n                    <div className=\"homepage__measurementcontainer__container__element-result\">{props.measurement[props.measurement.length - 1].right_forearm} cm</div>\r\n                </div>\r\n                <div className=\"homepage__measurementcontainer__container__element\">\r\n                    <div className=\"homepage__measurementcontainer__container__element-name\">Lewe przedramię</div>\r\n                    <div className=\"homepage__measurementcontainer__container__element-result\">{props.measurement[props.measurement.length - 1].left_forearm}  cm</div>\r\n                </div>\r\n                <div className=\"homepage__measurementcontainer__container__element\">\r\n                    <div className=\"homepage__measurementcontainer__container__element-name\">Udo prawej nogi</div>\r\n                    <div className=\"homepage__measurementcontainer__container__element-result\">{props.measurement[props.measurement.length - 1].right_leg} cm</div>\r\n                </div>\r\n                <div className=\"homepage__measurementcontainer__container__element\">\r\n                    <div className=\"homepage__measurementcontainer__container__element-name\">Udo lewej nogi</div>\r\n                    <div className=\"homepage__measurementcontainer__container__element-result\">{props.measurement[props.measurement.length - 1].right_leg} cm</div>\r\n                </div>\r\n                <div className=\"homepage__measurementcontainer__container__element\">\r\n                    <div className=\"homepage__measurementcontainer__container__element-name\">Waga</div>\r\n                    <div className=\"homepage__measurementcontainer__container__element-result\">{props.measurement[props.measurement.length - 1].weight}kg</div>\r\n                </div>\r\n                <div className=\"homepage__measurementcontainer__container__element\">\r\n                    <div className=\"homepage__measurementcontainer__container__element-name\">Wzrost</div>\r\n                    <div className=\"homepage__measurementcontainer__container__element-result\">{props.measurement[props.measurement.length - 1].growth} cm</div>\r\n                </div>\r\n                {/* <div className=\"homepage__measurementcontainer__container__element\">\r\n                        <div className=\"homepage__measurementcontainer__container__element-name\">Tkanka Tłuszczowa</div>\r\n                        <div className=\"homepage__measurementcontainer__container__element-result\">{props.measurement[props.measurement.length-1].bodyfat} %</div>\r\n                \r\n                </div> */}\r\n            </div> </> : <div className=\"homepage__measurementcontainer__title\">\r\n            <div className=\"homepage__measurementcontainer-title\">Twoje ostatnie pomiary</div>\r\n            <div className=\"homepage__measurementcontainer-add\"><button onClick={addNewMeasurement}>+ Dodaj nowe pomiary</button></div>\r\n            <p>Nie masz aktualnie żadnych pomiarów.</p>\r\n        </div>\r\n        }\r\n        </>\r\n    );\r\n};\r\n\r\nexport default HomepageMeasurementItem;","import React from 'react';\r\nimport Moment from 'react-moment';\r\nimport 'moment/locale/pl';\r\nimport moment from 'moment';\r\nimport { connect } from 'react-redux';\r\nimport { deleteGoals, getGoals } from '../../redux/actions/trainingActions'\r\nmoment().locale('pl')\r\nconst HomepageGoalItem = (props) => {\r\n    const handleDelete = async () => {\r\n        await props.deleteGoals(props.goal.id)\r\n        await props.getGoals()\r\n    }\r\n    let currentTime = new Date();\r\n    let dd = currentTime.getDate();\r\n    let mm = currentTime.getMonth() + 1;\r\n    // let yyyy = currentTime.getFullYear();\r\n\r\n    if (dd < 10) {\r\n        dd = `0${dd}`;\r\n    }\r\n    if (mm < 10) {\r\n        mm = `0${mm}`;\r\n    }\r\n    return (\r\n        <div className=\"homepage__goalscontainer__elements__element\">\r\n            <div className=\"homepage__goalscontainer__elements__element-name\">{props.goal.description}<button onClick={handleDelete}>Usuń cel</button></div>\r\n            <div className=\"homepage__goalscontainer__elements__element__time\">\r\n                <div className=\"homepage__goalscontainer__elements__element__time-description\">Pozostały czas upłynie</div>\r\n                <div className=\"homepage__goalscontainer__elements__element__time-number\">\r\n                    <Moment locale='pl' fromNow>{props.goal.date}</Moment>\r\n                </div>\r\n                <div className=\"homepage__goalscontainer__elements__element__time-data\">{props.goal.date}</div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\nconst mapDispatchToProps = () => dispatch => {\r\n    return {\r\n        deleteGoals: (x) => dispatch(deleteGoals(x)),\r\n        getGoals: () => dispatch(getGoals())\r\n    };\r\n};\r\nexport default connect(null, mapDispatchToProps)(HomepageGoalItem);","import React from 'react';\r\nimport '../sass/homepage.css';\r\nimport { connect } from 'react-redux';\r\nimport { postLogin } from '../redux/actions/authenticationActions';\r\nimport { getMeasurements, getTrainings, getGoals } from '../redux/actions/trainingActions';\r\nimport HomepageTrainingItem from './homepagecomponents/HomepageTrainingItem';\r\nimport HomepageMeasurementItem from './homepagecomponents/HomepageMeasurementItem';\r\nimport HomepageGoalItem from './homepagecomponents/HomepageGoalItem';\r\nimport { useHistory } from \"react-router-dom\";\r\nconst Homepage = (props) => {\r\n    const history = useHistory()\r\n    const addNewGoals = () => {\r\n        history.push('./addgoals')\r\n    }\r\n\r\n    const addNewTraining = () => {\r\n        history.push('./createtraining')\r\n    }\r\n\r\n    return (\r\n        <div className=\"homepage\">\r\n            <div className=\"homepage__title\">\r\n                Strona Domowa\r\n            </div>\r\n            <div className=\"homepage__container\">\r\n                <div className=\"homepage__firstcontainer\">\r\n                    <div className=\"homepage__goalscontainer\">\r\n                        <div className=\"homepage__goalscontainer-title\">Twoje cele do zrealizowania</div>\r\n                        <div className=\"homepage__goalscontainer-add\"><button onClick={addNewGoals}>+ Dodaj nowe cele</button></div>\r\n                        <div className=\"homepage__goalscontainer__elements\">\r\n                            {props.goals.length > 0 ? props.goals.map((goal,key) => <HomepageGoalItem key={key} goal={goal} />) : <p>Nie masz aktualnie żadnych celów do zrealizowania</p>}\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"homepage__measurementcontainer\">\r\n                        <HomepageMeasurementItem measurement={props.measurements} />\r\n                    </div>\r\n                </div>\r\n                <div className=\"homepage__lasttrainingscontainer\">\r\n                    <div className=\"homepage__lasttrainingscontainer-title\">Twoje treningi</div>\r\n                    <div className=\"homepage__lasttrainingscontainer-add\"><button onClick={addNewTraining}>+ Dodaj nowy trening</button></div>\r\n                    <div className=\"homepage__lasttrainingscontainer__container\">\r\n                        {props.trainings.length > 0 ? props.trainings.map((training,key) => <HomepageTrainingItem key={key} allprops={props} training={training} />) : <p>Nie wykonałeś jeszcze żadnych treningów</p>}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        trainings: state.training.trainings.data,\r\n        loadedtrainings: state.training.loadedtrainings,\r\n        measurements: state.training.measurements.data,\r\n        goals: state.training.goals.data\r\n    }\r\n}\r\nexport default connect(mapStateToProps, { postLogin, getMeasurements, getTrainings, getGoals })(Homepage);","import React, { useState, useRef } from 'react';\r\nimport DatePicker from \"react-datepicker\";\r\nimport { postGoals, getGoals } from '../redux/actions/trainingActions';\r\nimport { connect } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport '../sass/addgoals.css';\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nconst AddGoals = (props) => {\r\n    const history = useHistory()\r\n    const [startDate, setStartDate] = useState(\"\");\r\n    const [actualDate, setActualDate] = useState(\"\");\r\n    const inputdescription = useRef(\"\");\r\n    const handleDate = (date) => {\r\n        let day = date.getDay()\r\n        let month = date.getMonth()\r\n        let year = date.getFullYear()\r\n        let fulldate = year + \"-\" + month + \"-\" + day\r\n        setActualDate(fulldate)\r\n        setStartDate(date)\r\n    }\r\n    const handleSendGoals = async () => {\r\n        let data = {\r\n            \"date\": actualDate,\r\n            \"description\": inputdescription.current.value\r\n        }\r\n        await props.postGoals(data)\r\n        await props.getGoals()\r\n        history.push(\"/\")\r\n\r\n    }\r\n    return (\r\n        <div className=\"addgoals\">\r\n            <div className=\"addgoals-title\">Dodaj Cel do zrealizowania</div>\r\n            <div className=\"addgoals__container\">\r\n                <div className=\"addgoals__container__data-input\">\r\n                    <DatePicker locale='pl' placeholderText={\"Wybierz date\"} dateFormat='dd/MM/yyyy' selected={startDate} onChange={date => handleDate(date)} />\r\n                </div>\r\n                <div className=\"addgoals__container__description\">\r\n                    <input id=\"description\" ref={inputdescription} placeholder=\"Podaj cel do zrealizowania\" />\r\n                </div>\r\n                <div className=\"addgoals__container__button\">\r\n                    <button onClick={handleSendGoals}>Zaakceptuj nowy cel</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default connect(null, { postGoals, getGoals })(AddGoals);","import React from 'react';\r\nimport { connect } from 'react-redux'\r\nimport { deleteMeasurement, getMeasurements } from '../redux/actions/trainingActions';\r\nconst DisplayMeasurementsItem = (props) => {\r\n\r\n    const handleDeleteMeasurement = async () => {\r\n        await props.deleteMeasurement(props.measurement.id)\r\n        await props.getMeasurements()\r\n    }\r\n    return (\r\n        <div className=\"displaymeasurements__containers__container\">\r\n            <div className=\"displaymeasurements__containers__container__elements\">\r\n                <div className=\"displaymeasurements__containers__container__elements-date\">Data : {props.measurement.date}</div>\r\n                <div className=\"displaymeasurements__containers__container__elements__element-delete\"><button onClick={handleDeleteMeasurement}>Usuń pomiar</button></div>\r\n                <div className=\"displaymeasurements__containers__container__elements__element\">\r\n\r\n                    <div className=\"displaymeasurements__containers__container__elements__element-name\">Waga</div>\r\n                    <div className=\"displaymeasurements__containers__container__elements__element-result\">{props.measurement.weight} kg</div>\r\n                </div>\r\n                <div className=\"displaymeasurements__containers__container__elements__element\">\r\n                    <div className=\"displaymeasurements__containers__container__elements__element-name\">Wzrost</div>\r\n                    <div className=\"displaymeasurements__containers__container__elements__element-result\">{props.measurement.growth} cm</div>\r\n                </div>\r\n                <div className=\"displaymeasurements__containers__container__elements__element\">\r\n                    <div className=\"displaymeasurements__containers__container__elements__element-name\">Prawy biceps</div>\r\n                    <div className=\"displaymeasurements__containers__container__elements__element-result\">{props.measurement.right_biceps} cm</div>\r\n                </div>\r\n                <div className=\"displaymeasurements__containers__container__elements__element\">\r\n                    <div className=\"displaymeasurements__containers__container__elements__element-name\">Lewy biceps</div>\r\n                    <div className=\"displaymeasurements__containers__container__elements__element-result\">{props.measurement.left_biceps} cm</div>\r\n                </div>\r\n                <div className=\"displaymeasurements__containers__container__elements__element\">\r\n                    <div className=\"displaymeasurements__containers__container__elements__element-name\">Prawe przedramię</div>\r\n                    <div className=\"displaymeasurements__containers__container__elements__element-result\">{props.measurement.right_forearm} cm</div>\r\n                </div>\r\n                <div className=\"displaymeasurements__containers__container__elements__element\">\r\n                    <div className=\"displaymeasurements__containers__container__elements__element-name\">Lewe przedramię</div>\r\n                    <div className=\"displaymeasurements__containers__container__elements__element-result\">{props.measurement.left_forearm} cm</div>\r\n                </div>\r\n                <div className=\"displaymeasurements__containers__container__elements__element\">\r\n                    <div className=\"displaymeasurements__containers__container__elements__element-name\">Prawe udo</div>\r\n                    <div className=\"displaymeasurements__containers__container__elements__element-result\">{props.measurement.right_leg} cm</div>\r\n                </div>\r\n                <div className=\"displaymeasurements__containers__container__elements__element\">\r\n                    <div className=\"displaymeasurements__containers__container__elements__element-name\">Lewe udo</div>\r\n                    <div className=\"displaymeasurements__containers__container__elements__element-result\">{props.measurement.left_leg} cm</div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\nconst mapDispatchToProps = () => dispatch => {\r\n    return {\r\n        deleteMeasurement: (x) => dispatch(deleteMeasurement(x)),\r\n        getMeasurements: () => dispatch(getMeasurements()),\r\n    };\r\n};\r\nexport default connect(null, mapDispatchToProps)(DisplayMeasurementsItem);","import React, { useState, useEffect } from 'react';\r\nimport '../sass/displaymeasurements.css';\r\nimport { connect } from 'react-redux';\r\nimport DisplayMeasurementsItem from './DisplayMeasurementsItem';\r\nconst DisplayMeasurements = (props) => {\r\n    const [measurements, setMeasurements] = useState(props.measurements)\r\n    useEffect(() => {\r\n        setMeasurements(() => {\r\n            let meas\r\n            if (props.measurements.length > 8) {\r\n                meas = props.measurements.slice(8)\r\n                meas.slice(0).reverse()\r\n                return meas\r\n            } else {\r\n                meas = props.measurements.slice(0).reverse()\r\n            }\r\n            return meas\r\n        })\r\n    }, [])\r\n    useEffect(() => {\r\n        setMeasurements(() => {\r\n            let meas\r\n            if (props.measurements.length > 8) {\r\n                meas = props.measurements.slice(8)\r\n                meas.slice(0).reverse()\r\n                return meas\r\n            } else {\r\n                meas = props.measurements.slice(0).reverse()\r\n            }\r\n            return meas\r\n        })\r\n    }, [props.measurements])\r\n    return (\r\n        <div className=\"displaymeasurements\">\r\n            <div className=\"displaymeasurements-title\">Twoje ostatnie 9 pomiarów</div>\r\n            <div className=\"displaymeasurements__containers\">\r\n                {measurements.map((measurement) => <DisplayMeasurementsItem measurement={measurement} />)}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        trainings: state.training.trainings.data,\r\n        loadedtrainings: state.training.loadedtrainings,\r\n        measurements: state.training.measurements.data,\r\n        goals: state.training.goals.data\r\n    }\r\n}\r\nexport default connect(mapStateToProps)(DisplayMeasurements);\r\n","import React from 'react';\r\nimport logo from '../images/logo.png' ;\r\nconst Logo = () => {\r\n    return (\r\n        <div className=\"logo\">\r\n            <div className=\"logo__block\">\r\n                <div className=\"logo__block__circle1\">\r\n                    <div className=\"logo__block__circle2\"></div>\r\n                    <div className=\"logo__block__circle3\"></div>\r\n                    <div className=\"logo__block__circle4\">\r\n                        <div className=\"logo__block__circle4-logo\">\r\n                            <img src={logo} alt=\"logo\"  />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Logo;","import React from 'react';\r\nimport Logo from './Logo';\r\nimport '../sass/addmeasurementssummary.scss';\r\nimport { connect } from 'react-redux';\r\nimport { getMeasurements } from '../redux/actions/trainingActions';\r\nimport { useHistory } from \"react-router-dom\";\r\nconst AddMeasurementsSummary = (props) => {\r\n    const history = useHistory()\r\n    const handlemovetohomepage = () => {\r\n        history.push('/')\r\n    }\r\n    return (\r\n        <div className=\"addmeasurementssummary\">\r\n            <Logo />\r\n            <div className=\"addmeasurementssummary-title\">Właśnie zaaktualizowałeś swoje pomiary</div>\r\n            <div className=\"addmeasurementssummary-secondtitle\">Zmiany:</div>\r\n            {props.olddata !== undefined ?\r\n                <div className=\"addmeasurementssummary__elements\">\r\n                    <div className=\"addmeasurementssummary__elements__element\" style={{ color: props.olddata.weight >= props.newdata.weight ? 'red' : 'green' }}>Waga <span>{props.olddata.weight}{'=>'}{props.newdata.weight}</span></div>\r\n                    <div className=\"addmeasurementssummary__elements__element\" style={{ color: props.olddata.growth >= props.newdata.growth ? 'red' : 'green' }}>Wzrost <span>{props.olddata.growth}{'=>'}{props.newdata.growth}</span></div>\r\n                    <div className=\"addmeasurementssummary__elements__element\" style={{ color: props.olddata.left_biceps >= props.newdata.left_biceps ? 'red' : 'green' }}>Lewy biceps <span>{props.olddata.left_biceps}{'=>'}{props.newdata.left_biceps}</span></div>\r\n                    <div className=\"addmeasurementssummary__elements__element\" style={{ color: props.olddata.right_biceps >= props.newdata.right_biceps ? 'red' : 'green' }}>Prawy biceps <span>{props.olddata.right_biceps}{'=>'}{props.newdata.right_biceps}</span></div>\r\n                    <div className=\"addmeasurementssummary__elements__element\" style={{ color: props.olddata.left_forearm >= props.newdata.left_forearm ? 'red' : 'green' }}>Lewe przedramię <span>{props.olddata.left_forearm}{'=>'}{props.newdata.left_forearm}</span></div>\r\n                    <div className=\"addmeasurementssummary__elements__element\" style={{ color: props.olddata.right_forearm >= props.newdata.right_forearm ? 'red' : 'green' }}>Prawe przedramię <span>{props.olddata.right_forearm}{'=>'}{props.newdata.right_forearm}</span></div>\r\n                    <div className=\"addmeasurementssummary__elements__element\" style={{ color: props.olddata.left_leg >= props.newdata.left_leg ? 'red' : 'green' }}>Lewa noga <span>{props.olddata.left_leg}{'=>'}{props.newdata.left_leg}</span></div>\r\n                    <div className=\"addmeasurementssummary__elements__element\" style={{ color: props.olddata.right_leg >= props.newdata.right_leg ? 'red' : 'green' }}>Prawa noga <span>{props.olddata.right_leg}{'=>'}{props.newdata.right_leg}</span></div>\r\n                    <div className=\"addmeasurementssummary__elements__element\"></div>\r\n                </div>\r\n                : <div className=\"addmeasurementssummary__elements\">\r\n                    <div className=\"addmeasurementssummary__elements__element\" >Waga <span>{props.newdata.weight}</span></div>\r\n                    <div className=\"addmeasurementssummary__elements__element\" >Wzrost <span>{props.newdata.growth}</span></div>\r\n                    <div className=\"addmeasurementssummary__elements__element\" >Lewy biceps <span>{props.newdata.left_biceps}</span></div>\r\n                    <div className=\"addmeasurementssummary__elements__element\" >Prawy biceps <span>{props.newdata.right_biceps}</span></div>\r\n                    <div className=\"addmeasurementssummary__elements__element\" >Lewe przedramię <span>{props.newdata.left_forearm}</span></div>\r\n                    <div className=\"addmeasurementssummary__elements__element\" >Prawe przedramię <span>{props.newdata.right_forearm}</span></div>\r\n                    <div className=\"addmeasurementssummary__elements__element\" >Lewa noga <span>{props.newdata.left_leg}</span></div>\r\n                    <div className=\"addmeasurementssummary__elements__element\" >Prawa noga <span>{props.newdata.right_leg}</span></div>\r\n                    <div className=\"addmeasurementssummary__elements__element\"></div>\r\n                </div>}\r\n            <div className=\"addmeasurementssummary__button\">\r\n                <button onClick={handlemovetohomepage}>Dalej</button>\r\n            </div>\r\n\r\n\r\n        </div>\r\n    );\r\n};\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n\r\n        measurements: state.training.measurements.data,\r\n\r\n    }\r\n}\r\nexport default connect(mapStateToProps, { getMeasurements })(AddMeasurementsSummary);","import React, { useState, useRef } from 'react';\r\nimport '../sass/addmeasurements.css';\r\nimport DatePicker, { registerLocale } from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport pl from \"date-fns/locale/pl\";\r\nimport { connect } from 'react-redux';\r\nimport { postMeasurement, getMeasurements } from '../redux/actions/trainingActions';\r\nimport AddMeasurementsSummary from './AddMeasurementsSummary';\r\nconst AddMeasurements = (props) => {\r\n    const [weight, setWeight] = useState(0)\r\n    const [growth, setGrowth] = useState(0)\r\n    const [leftbiceps, setLeftBiceps] = useState(0)\r\n    const [rightbiceps, setRightBiceps] = useState(0)\r\n    const [leftforearm, setLeftForearm] = useState(0)\r\n    const [rightforearm, setRightForearm] = useState(0)\r\n    const [leftleg, setLeftLeg] = useState(0)\r\n    const [rightleg, setRightLeg] = useState(0)\r\n    const [bodyfat, setBodyFat] = useState(0)\r\n    const [summary, setSummary] = useState(false)\r\n    const [data, setData] = useState()\r\n    const inputdate = useRef(null)\r\n    const handleFloats = () => {\r\n        if (isNaN(weight) === false && isNaN(growth) ===false && isNaN(leftbiceps) === false && isNaN(rightbiceps) === false\r\n            && isNaN(leftforearm) === false && isNaN(rightforearm) === false && isNaN(leftleg) === false\r\n            && isNaN(rightleg) === false && weight >= 0 && growth >= 0 && leftbiceps >= 0 && rightbiceps >= 0\r\n            && leftforearm >= 0 && rightforearm >= 0 && leftleg >= 0 && rightleg >= 0) {\r\n            return true\r\n        } else {\r\n            return false\r\n        }\r\n    }\r\n    const [olddata, setOldData] = useState(() => {\r\n        if (props.measurements[props.measurements.length - 1] !== undefined) {\r\n            return props.measurements[props.measurements.length - 1]\r\n        } else {\r\n            return undefined\r\n        }\r\n    })\r\n    const [actualDate, setActualDate] = useState(new Date())\r\n    const handlePostMeasurement = () => {\r\n        if (handleFloats()) {\r\n            async function fetchData() {\r\n                await props.postMeasurement(data)\r\n                await props.getMeasurements()\r\n            }\r\n            let splitdate = inputdate.current.input.value.split(\"/\")\r\n            let fullday = splitdate[2] + \"-\" + splitdate[1] + \"-\" + splitdate[0]\r\n            let data =\r\n            {\r\n                \"date\": fullday,\r\n                \"weight\": weight,\r\n                \"growth\": growth,\r\n                \"left_biceps\": leftbiceps,\r\n                \"right_biceps\": rightbiceps,\r\n                \"right_forearm\": rightforearm,\r\n                \"left_forearm\": leftforearm,\r\n                \"left_leg\": leftleg,\r\n                \"right_leg\": rightleg,\r\n                \"bodyfat\": bodyfat,\r\n\r\n            }\r\n            setOldData(props.measurements[props.measurements.length - 1])\r\n            fetchData()\r\n            setData(data)\r\n            setSummary(true)\r\n        }else{\r\n            alert(\"Wartości są nieprawidłowe. Powinny być liczbami większymi lub równymi 0\")\r\n        }\r\n    }\r\n    registerLocale('pl', pl)\r\n    return (\r\n        <div className=\"addmeasurements\">\r\n            {summary ? <AddMeasurementsSummary newdata={data} olddata={olddata} /> :\r\n                <>\r\n                    <div className=\"addmeasurements-title\">Dodaj pomiary</div>\r\n                    <div className=\"addmeasurements__container\">\r\n                        {olddata !== undefined && <div className=\"addmeasurements__container__oldmeasurementscontainer\">\r\n                            <div className=\"addmeasurements__container__oldmeasurementscontainer-title\">Ostatni pomiar</div>\r\n\r\n                            <div className=\"addmeasurements__container__oldmeasurementscontainer__data\">\r\n                                <div className=\"addmeasurements__container__oldmeasurementscontainer__data-input\">\r\n                                    {olddata.date}\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"addmeasurements__container__oldmeasurementscontainer__elements\">\r\n                                <div className=\"addmeasurements__container__oldmeasurementscontainer__elements__element\">\r\n                                    <div className=\"addmeasurements__container__oldmeasurementscontainer__elements__element-name\">Waga</div>\r\n                                    <div className=\"addmeasurements__container__oldmeasurementscontainer__elements__element-result\">{olddata.weight} kg</div>\r\n                                </div>\r\n                                <div className=\"addmeasurements__container__oldmeasurementscontainer__elements__element\">\r\n                                    <div className=\"addmeasurements__container__oldmeasurementscontainer__elements__element-name\">Wzrost</div>\r\n                                    <div className=\"addmeasurements__container__oldmeasurementscontainer__elements__element-result\">{olddata.growth} cm</div>\r\n                                </div>\r\n                                <div className=\"addmeasurements__container__oldmeasurementscontainer__elements__element\">\r\n                                    <div className=\"addmeasurements__container__oldmeasurementscontainer__elements__element-name\">Prawy biceps</div>\r\n                                    <div className=\"addmeasurements__container__oldmeasurementscontainer__elements__element-result\">{olddata.right_biceps}cm</div>\r\n                                </div>\r\n                                <div className=\"addmeasurements__container__oldmeasurementscontainer__elements__element\">\r\n                                    <div className=\"addmeasurements__container__oldmeasurementscontainer__elements__element-name\">Lewy biceps</div>\r\n                                    <div className=\"addmeasurements__container__oldmeasurementscontainer__elements__element-result\">{olddata.left_biceps} cm</div>\r\n                                </div>\r\n                                <div className=\"addmeasurements__container__oldmeasurementscontainer__elements__element\">\r\n                                    <div className=\"addmeasurements__container__oldmeasurementscontainer__elements__element-name\">Prawe przedramię</div>\r\n                                    <div className=\"addmeasurements__container__oldmeasurementscontainer__elements__element-result\">{olddata.right_forearm} cm</div>\r\n                                </div>\r\n                                <div className=\"addmeasurements__container__oldmeasurementscontainer__elements__element\">\r\n                                    <div className=\"addmeasurements__container__oldmeasurementscontainer__elements__element-name\">Lewe przedramię</div>\r\n                                    <div className=\"addmeasurements__container__oldmeasurementscontainer__elements__element-result\">{olddata.left_forearm} cm</div>\r\n                                </div>\r\n                                <div className=\"addmeasurements__container__oldmeasurementscontainer__elements__element\">\r\n                                    <div className=\"addmeasurements__container__oldmeasurementscontainer__elements__element-name\">Prawe udo</div>\r\n                                    <div className=\"addmeasurements__container__oldmeasurementscontainer__elements__element-result\">{olddata.right_leg} cm</div>\r\n                                </div>\r\n                                <div className=\"addmeasurements__container__oldmeasurementscontainer__elements__element\">\r\n                                    <div className=\"addmeasurements__container__oldmeasurementscontainer__elements__element-name\">Lewe udo</div>\r\n                                    <div className=\"addmeasurements__container__oldmeasurementscontainer__elements__element-result\">{olddata.left_leg} cm</div>\r\n                                </div>\r\n                            </div>\r\n                        </div>}\r\n                        <div className=\"addmeasurements__container__newmeasurementscontainer\">\r\n                            <div className=\"addmeasurements__container__newmeasurementscontainer-title\">Aktualny pomiar</div>\r\n                            <div className=\"addmeasurements__container__newmeasurementscontainer__data\">\r\n                                <div className=\"addmeasurements__container__newmeasurementscontainer__data-input\">\r\n                                    <DatePicker ref={inputdate} locale='pl' dateFormat='dd/MM/yyyy' selected={actualDate} onChange={date => setActualDate(date)} /></div>\r\n                            </div>\r\n                            <div className=\"addmeasurements__container__newmeasurementscontainer__elements\">\r\n                                <div className=\"addmeasurements__container__newmeasurementscontainer__elements__element\">\r\n                                    <div className=\"addmeasurements__container__newmeasurementscontainer__elements__element-name\">Waga</div>\r\n                                    <div className=\"addmeasurements__container__newmeasurementscontainer__elements__element-result\"><input onChange={(e) => { setWeight(parseInt(e.target.value)) }} type=\"number\" min=\"0\" max=\"100\" placeholder=\"Dodaj wagę\" /></div>\r\n                                </div>\r\n                                <div className=\"addmeasurements__container__newmeasurementscontainer__elements__element\">\r\n                                    <div className=\"addmeasurements__container__newmeasurementscontainer__elements__element-name\">Wzrost</div>\r\n                                    <div className=\"addmeasurements__container__newmeasurementscontainer__elements__element-result\"><input onChange={(e) => { setGrowth(parseInt(e.target.value)) }} type=\"number\" min=\"0\" max=\"300\" placeholder=\"Dodaj wzrost\" /></div>\r\n                                </div>\r\n                                <div className=\"addmeasurements__container__newmeasurementscontainer__elements__element\">\r\n                                    <div className=\"addmeasurements__container__newmeasurementscontainer__elements__element-name\">Prawy biceps</div>\r\n                                    <div className=\"addmeasurements__container__newmeasurementscontainer__elements__element-result\"><input onChange={(e) => { setRightBiceps(parseInt(e.target.value)) }} type=\"number\" min=\"0\" max=\"100\" placeholder=\"Prawy biceps\" /></div>\r\n                                </div>\r\n                                <div className=\"addmeasurements__container__newmeasurementscontainer__elements__element\">\r\n                                    <div className=\"addmeasurements__container__newmeasurementscontainer__elements__element-name\">Lewy biceps</div>\r\n                                    <div className=\"addmeasurements__container__newmeasurementscontainer__elements__element-result\"><input onChange={(e) => { setLeftBiceps(parseInt(e.target.value)) }} type=\"number\" min=\"0\" max=\"100\" placeholder=\"Lewy biceps\" /></div>\r\n                                </div>\r\n                                <div className=\"addmeasurements__container__newmeasurementscontainer__elements__element\">\r\n                                    <div className=\"addmeasurements__container__newmeasurementscontainer__elements__element-name\">Prawe przedramię</div>\r\n                                    <div className=\"addmeasurements__container__newmeasurementscontainer__elements__element-result\"><input onChange={(e) => { setRightForearm(parseInt(e.target.value)) }} type=\"number\" min=\"0\" max=\"100\" placeholder=\"Prawe przedramię\" /></div>\r\n                                </div>\r\n                                <div className=\"addmeasurements__container__newmeasurementscontainer__elements__element\">\r\n                                    <div className=\"addmeasurements__container__newmeasurementscontainer__elements__element-name\">Lewe przedramię</div>\r\n                                    <div className=\"addmeasurements__container__newmeasurementscontainer__elements__element-result\"><input onChange={(e) => { setLeftForearm(parseInt(e.target.value)) }} type=\"number\" min=\"0\" max=\"100\" placeholder=\"Lewe przedramię\" /></div>\r\n                                </div>\r\n                                <div className=\"addmeasurements__container__newmeasurementscontainer__elements__element\">\r\n                                    <div className=\"addmeasurements__container__newmeasurementscontainer__elements__element-name\">Prawe udo</div>\r\n                                    <div className=\"addmeasurements__container__newmeasurementscontainer__elements__element-result\"><input onChange={(e) => { setRightLeg(parseInt(e.target.value)) }} type=\"number\" min=\"0\" max=\"100\" placeholder=\"Prawe udo\" /></div>\r\n                                </div>\r\n                                <div className=\"addmeasurements__container__newmeasurementscontainer__elements__element\">\r\n                                    <div className=\"addmeasurements__container__newmeasurementscontainer__elements__element-name\">Lewe udo</div>\r\n                                    <div className=\"addmeasurements__container__newmeasurementscontainer__elements__element-result\"><input onChange={(e) => { setLeftLeg(parseInt(e.target.value)) }} type=\"number\" min=\"0\" max=\"100\" placeholder=\"Lewe udo\" /></div>\r\n                                </div>\r\n                                <div className=\"addmeasurements__container__newmeasurementscontainer__elements__element\">\r\n                                    <div className=\"addmeasurements__container__newmeasurementscontainer__elements__element-button\"><button onClick={handlePostMeasurement}>Zaakceptuj zmiany</button></div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div></>}\r\n        </div>\r\n    );\r\n};\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        measurements: state.training.measurements.data\r\n    }\r\n}\r\nexport default connect(mapStateToProps, { postMeasurement, getMeasurements })(AddMeasurements);\r\n","import React, { useState, useRef } from 'react';\r\nimport '../sass/createtraining.css';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faArrowRight } from '@fortawesome/fontawesome-free-solid';\r\nimport DatePicker, { registerLocale } from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport { connect } from 'react-redux';\r\nimport pl from \"date-fns/locale/pl\";\r\nimport { postTraining, postOwnExercise, getTrainings, getExercises } from '../redux/actions/trainingActions';\r\nimport { useHistory } from \"react-router-dom\";\r\nconst CreateTraining = (props) => {\r\n    const history = useHistory()\r\n    registerLocale('pl', pl)\r\n    const [startDate, setStartDate] = useState(new Date())\r\n    const [ownexerciseActive, setOwnExerciseActive] = useState(false)\r\n    const [activediv, setActivediv] = useState(null)\r\n    const [ownexercise, setOwnExercise] = useState({ id: '', name: '' })\r\n    const [exercise, setExercise] = useState({ id: '', name: '' })\r\n    const [series, setSeries] = useState(3)\r\n    const [assumedreps, setAssumedReps] = useState(1)\r\n    const [rest, setRest] = useState(60)\r\n    const [weight, setWeight] = useState(0)\r\n    const [concentricphase, setConcentricPhase] = useState(0)\r\n    const [pauseconcentricphase, setPauseConcentricPhase] = useState(0)\r\n    const [eccentricphase, setEccentricPhase] = useState(0)\r\n    const [pauseeccentricphase, setPauseEccentricPhase] = useState(0)\r\n    const [itemsplaceholders, setItemsPlaceHolders] = useState([])\r\n    const [items, setItems] = useState([])\r\n    const [seriesitems, setSeriesItems] = useState([])\r\n    const name_of_training = useRef(null);\r\n    const training_description = useRef(null);\r\n    const training_date = useRef(null);\r\n    const inputOwnExercise = useRef(null);\r\n    const handlemovetoschedulepage = () => {\r\n        history.push('/schedule/')\r\n    }\r\n    const addElementtoItems = () => {\r\n        setItems(prevItems => [...prevItems, {\r\n            exercise: { exercise },\r\n            ownexercise: { ownexercise },\r\n            series: { series },\r\n            assumedreps: { assumedreps },\r\n            rest: { rest },\r\n            weight: { weight },\r\n            concentricphase: { concentricphase },\r\n            pauseconcentricphase: { pauseconcentricphase },\r\n            eccentricphase: { eccentricphase },\r\n            pauseeccentricphase: { pauseeccentricphase }\r\n        }]);\r\n    }\r\n    const addElementstoMainItems = () => {\r\n        setSeriesItems(prevItems => [...prevItems, {\r\n            exercise: { exercise },\r\n            ownexercise: { ownexercise },\r\n            series: { series },\r\n            assumedreps: { assumedreps },\r\n            rest: { rest },\r\n            weight: { weight },\r\n            concentricphase: { concentricphase },\r\n            pauseconcentricphase: { pauseconcentricphase },\r\n            eccentricphase: { eccentricphase },\r\n            pauseeccentricphase: { pauseeccentricphase }\r\n        }]);\r\n    }\r\n    const clearState = () => {\r\n        // Domyślne dane\r\n        setSeries(3)\r\n        // setAssumedReps(1)\r\n        // setRest(60)\r\n        // setWeight(0)\r\n        // setConcentricPhase(0)\r\n        // setPauseConcentricPhase(0)\r\n        // setEccentricPhase(0)\r\n        // setPauseEccentricPhase(0)\r\n    }\r\n\r\n    const handleNewOwnExercise = async () => {\r\n        await props.postOwnExercise(inputOwnExercise.current.value)\r\n        await props.getExercises()\r\n\r\n    }\r\n    const handleClickExercise = (e, element) => {\r\n        if (activediv !== null) {\r\n            activediv.style.background = \"#457B9D\"\r\n        }\r\n        setActivediv(e.target)\r\n        if (ownexerciseActive === false) {\r\n            setExercise({ id: element.id })\r\n            setExercise({ name: element.name })\r\n            e.target.style.background = '#db3d44'\r\n        }\r\n        else {\r\n            setOwnExercise({ id: element.id })\r\n            setOwnExercise({ name: element.name })\r\n            e.target.style.background = '#db3d44'\r\n        }\r\n    }\r\n    const checkIntegers = () => {\r\n        if(Number.isInteger(series) && series >= 0 && Number.isInteger(assumedreps) && assumedreps >= 0 && Number.isInteger(rest) && rest >= 0 && Number.isInteger(concentricphase) && concentricphase >= 0 && Number.isInteger(pauseconcentricphase) && pauseconcentricphase >= 0 && Number.isInteger(eccentricphase) && eccentricphase >= 0 && Number.isInteger(pauseeccentricphase) && pauseeccentricphase >= 0 && weight >=0){\r\n            return true\r\n        }else{\r\n            alert(\"Wartości powinny być całkowite dodatnie. Waga może być wartością niecałkowitą dodatnią\")\r\n            return false\r\n        }\r\n    }\r\n    const handleClickSelect = (e) => {\r\n        if (activediv !== null && checkIntegers()) {\r\n            addElementstoMainItems()\r\n            for (let i = 0; i < series; i++) {\r\n                setItemsPlaceHolders(oldArray => [...oldArray, assumedreps])\r\n                addElementtoItems()\r\n            }\r\n            activediv.style.background = \"#457B9D\"\r\n            setActivediv(null)\r\n            clearState()\r\n        } else {\r\n            alert(\"Aby kontynuować musisz wybrać ćwiczenie\")\r\n        }\r\n    }\r\n    const changeOwnexercisetoExercise = () => {\r\n        setExercise({ id: '', name: '' })\r\n        setOwnExercise({ id: '', name: '' })\r\n        setOwnExerciseActive(false)\r\n    }\r\n    const changeExercisetoOwnexercise = () => {\r\n        setExercise({ id: '', name: '' })\r\n        setOwnExercise({ id: '', name: '' })\r\n        setOwnExerciseActive(true)\r\n    }\r\n    const handleChangeinTrainingItems = (e, element) => {\r\n        let temp = [...itemsplaceholders];\r\n        temp[element.id] = e.target.value\r\n        setItemsPlaceHolders(temp)\r\n    }\r\n    const handleAcceptTraining = () => {\r\n        async function fetchData(data) {\r\n            await props.postTraining(data)\r\n            await props.getTrainings()\r\n            await handlemovetoschedulepage()\r\n        }\r\n        if (name_of_training.current.value === \"\") {\r\n            alert(\"Wprowadź nazwę treningu\")\r\n        } else {\r\n            if (training_description.current.value === \"\") {\r\n                training_description.current.value = name_of_training.current.value\r\n            }\r\n            let splitdate = training_date.current.input.value.split(\"/\")\r\n            let fullday = splitdate[2] + \"-\" + splitdate[1] + \"-\" + splitdate[0]\r\n            let array = {\r\n                name: name_of_training.current.value,\r\n                description: training_description.current.value,\r\n                date: fullday,\r\n                training: []\r\n            }\r\n            let allobjects = []\r\n            let temparray = [...itemsplaceholders]\r\n            for (let i = 0; i < seriesitems.length; i++) {\r\n                let objects = { reps: [] }\r\n                if (seriesitems[i].exercise.exercise.name !== \"\") {\r\n                    objects[\"exercise\"] = { \"name\": seriesitems[i].exercise.exercise.name }\r\n                } else {\r\n                    objects[\"ownexercise\"] = { \"name\": seriesitems[i].ownexercise.ownexercise.name, \"user\": 1 }\r\n                }\r\n                objects[\"pause_after_concentric_phase\"] = seriesitems[i].pauseconcentricphase.pauseconcentricphase\r\n                objects[\"pause_after_eccentric_phase\"] = seriesitems[i].pauseeccentricphase.pauseeccentricphase\r\n                objects[\"weight\"] = seriesitems[i].weight.weight\r\n                objects[\"series\"] = seriesitems[i].series.series\r\n                objects[\"rest\"] = seriesitems[i].rest.rest\r\n                let secondtemparray = []\r\n                for (let k = 0; k < seriesitems[i].series.series; k++) {\r\n                    let temp = temparray.shift();\r\n                    secondtemparray.push(temp)\r\n                    objects['reps'] = secondtemparray\r\n                }\r\n                array[\"training\"].push(objects)\r\n                allobjects.push(objects)\r\n            }\r\n            fetchData(array)\r\n        }\r\n    }\r\n    return (\r\n        <div className=\"createtraining\">\r\n            <div className=\"createtraining-title\">Kreator treningu</div>\r\n            <div className=\"createtraining__containers\">\r\n                <div className=\"createtraining__containers__first\">\r\n                    <div className=\"createtraining__containers__first__selectors\">\r\n                        <div className=\"createtraining__containers__first__selectors-globalexercise\" style={{ color: ownexerciseActive ? 'white' : '#db3d44' }} onClick={changeOwnexercisetoExercise}>Ćwiczenia</div>\r\n                        <div className=\"createtraining__containers__first__selectors-myexercise\" style={{ color: ownexerciseActive ? '#db3d44' : 'white' }} onClick={changeExercisetoOwnexercise}>Moje Ćwiczenia</div>\r\n                    </div>\r\n                    <div className=\"createtraining__containers__first__newexercise\" style={{ display: ownexerciseActive ? 'flex' : 'none' }}>\r\n                        <div className=\"createtraining__containers__first__newexercise-title\">Wprowadź nazwę ćwiczenia lub wyszukaj</div>\r\n                        <span>\r\n                            <input ref={inputOwnExercise} placeholder=\"Wprowadź swoje ćwiczenie\" />\r\n                        </span>\r\n                        <div className=\"createtraining__containers__first__newexercise-button\">\r\n                            <button onClick={handleNewOwnExercise}>Dodaj</button>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className='createtraining__containers__first-input'>Wyszukaj ćwiczenie</div>\r\n                    <div className=\"createtraining__containers__first__exercises\">\r\n                        {ownexerciseActive ? props.ownexercises.map((element,key) => <div className=\"createtraining__containers__first__exercises__element \" onClick={(e) => handleClickExercise(e, element)}>{element.name}</div>) : props.exercises.map((element) => <div className=\"createtraining__containers__first__exercises__element \" onClick={(e) => handleClickExercise(e, element)}>{element.name}</div>)}\r\n                    </div>\r\n                    <div className=\"createtraining__containers__first__trainingdata\">\r\n                        <div className=\"createtraining__containers__first__trainingdata__series\">Podaj liczbę serii danego ćwiczenia *<span><input placeholder={series}  onChange={(e) => setSeries(parseInt(e.target.value))} /></span></div>\r\n                        <div className=\"createtraining__containers__first__trainingdata__singleseries\">Podaj liczbę powtórzeń danego ćwiczenia *<span><input placeholder={assumedreps} onChange={(e) => setAssumedReps(parseInt(e.target.value))} /></span></div>\r\n                        <div className=\"createtraining__containers__first__trainingdata__rest\">Podaj czas odpoczynku w (s) *<span><input placeholder={rest} onChange={(e) => setRest(parseInt(e.target.value))} /></span></div>\r\n                        <div className=\"createtraining__containers__first__trainingdata__weight\">Podaj ciężar w kg(domyślnie 0) <span><input placeholder={weight} onChange={(e) => setWeight(parseInt(e.target.value))} /></span></div>\r\n                        <div className=\"createtraining__containers__first__trainingdata__concentricphase\">Czas fazy koncentrycznej <span><input placeholder={concentricphase} onChange={(e) => setConcentricPhase(parseInt(e.target.value))} /></span></div>\r\n                        <div className=\"createtraining__containers__first__trainingdata__pauseafterconcentricphase\">Czas pauzy po fazie koncentrycznej <span><input placeholder={pauseconcentricphase} onChange={(e) => setPauseConcentricPhase(parseInt(e.target.value))} /></span></div>\r\n                        <div className=\"createtraining__containers__first__trainingdata__eccentricphase\">Czas fazy ekscentrycznej <span><input placeholder={eccentricphase} onChange={(e) => setEccentricPhase(parseInt(e.target.value))} /></span></div>\r\n                        <div className=\"createtraining__containers__first__trainingdata__pauseaftereccentricphase\">Czas pauzy po fazie ekscentrycznej <span><input placeholder={pauseeccentricphase} onChange={(e) => setPauseEccentricPhase(parseInt(e.target.value))} /></span></div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"createtraining__containers__second\">\r\n                    <div className=\"createtraining__containers__second-select\" onClick={handleClickSelect}>Wybierz <span> <FontAwesomeIcon icon={faArrowRight} /></span></div>\r\n                    <div className=\"createtraining__containers__second-accepttraining\" onClick={handleAcceptTraining}>Zaakceptuj trening</div>\r\n\r\n                </div>\r\n                <div className=\"createtraining__containers__third\">\r\n                    <div className=\"createtraining__containers__third-title\"><span><input ref={name_of_training} placeholder=\"Nazwa treningu\" /></span></div>\r\n                    <div className=\"createtraining__containers__third-date\"><span>\r\n                        <DatePicker ref={training_date} locale='pl' dateFormat='dd/MM/yyyy' selected={startDate} onChange={date => setStartDate(date)} />\r\n                    </span></div>\r\n                    <div className=\"createtraining__containers__third-description\"><span><input ref={training_description} placeholder=\"Opis\" /></span></div>\r\n                    <div className=\"createtraining__containers__third__elements\">\r\n                        <div className=\"createtraining__containers__third__elements-title\">\r\n                            Ćwiczenia\r\n                        </div>\r\n                        <div className=\"createtraining__containers__third__elements__element\">\r\n                            <table id=\"exercisetable\">\r\n                                <tr>\r\n                                    <th>Ćwiczenie</th>\r\n                                    <th>Powtórzenia</th>\r\n\r\n                                </tr>\r\n                                {items.length > 0 ? items.map((item, id) => {\r\n                                    return (\r\n                                        <tr>\r\n                                            {item.exercise.exercise.name === \"\" ? <td>{item.ownexercise.ownexercise.name}</td> : <td>{item.exercise.exercise.name}</td>}\r\n                                            <td ><span><input placeholder={itemsplaceholders[id]} onChange={(e) => handleChangeinTrainingItems(e, { id })} /></span></td>\r\n                                        </tr>)\r\n                                })\r\n                                    : <tr>\r\n                                    </tr>}\r\n                            </table>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        trainings: state.training.trainings.data,\r\n        loadedtrainings: state.training.loadedtrainings,\r\n        measurements: state.training.measurements.data,\r\n        goals: state.training.goals.data,\r\n        exercises: state.training.exercises.data,\r\n        ownexercises: state.training.ownexercises\r\n    }\r\n}\r\nexport default connect(mapStateToProps, { postTraining, postOwnExercise, getTrainings, getExercises })(CreateTraining);","import { Route } from 'react-router-dom';\r\nimport React, { useEffect } from 'react';\r\nimport Navbar from './Navbar';\r\nimport Navbar2 from './Navbar2';\r\nimport Training from './Training';\r\nimport Schedule from './Schedule';\r\nimport Homepage from './Homepage';\r\nimport AddGoals from './AddGoals';\r\nimport LoginContainer from './LoginContainer';\r\nimport { connect } from 'react-redux';\r\nimport { getMeasurements, getTrainings, getGoals, getExercises } from '../redux/actions/trainingActions';\r\nimport { postLogoutAuth } from '../redux/actions/authenticationActions';\r\nimport DisplayMeasurements from './DisplayMeasurements'\r\nimport AddMeasurements from './AddMeasurements';\r\nimport CreateTraining from './CreateTraining';\r\nimport Register from './Register';\r\nimport '../sass/defaultcontainer.scss';\r\nimport { BoxLoading } from 'react-loadingg';\r\nimport AddMeasurementsSummary from './AddMeasurementsSummary';\r\nconst DefaultContainer = (props) => {\r\n  useEffect(() => {\r\n    document.title = \"TrueEffects\"\r\n    if (props.token === \"undefined\") {\r\n      props.postLogoutAuth()\r\n    } else if (props.token) {\r\n      props.getMeasurements();\r\n      props.getTrainings();\r\n      props.getGoals();\r\n      props.getExercises();\r\n    } else {\r\n      props.history.push('/login')\r\n    }\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    if (props.token === null) {\r\n      props.history.push('/login')\r\n    }\r\n  }, [props.token])\r\n  return (\r\n    <div className=\"containerdefault\">\r\n      {props.loadedtrainings && props.loadedgoals && props.loadedmeasurements && props.loadedexercises ? <>\r\n        <Navbar />\r\n        <Navbar2 />\r\n        <Route exact path=\"/\" component={Homepage} />\r\n        <Route path=\"/training\" component={Training} />\r\n        <Route path=\"/schedule\" component={Schedule} />\r\n        <Route path=\"/addmeasurements\" component={AddMeasurements} />\r\n        <Route path=\"/displaymeasurements\" component={DisplayMeasurements} />\r\n        <Route path=\"/createtraining\" component={CreateTraining} />\r\n        <Route path=\"/measurementsummary\" component={AddMeasurementsSummary} />\r\n        <Route path=\"/addgoals\" component={AddGoals} />\r\n        <Route exact path=\"/login\" component={LoginContainer} />\r\n        <Route exact path=\"/register\" component={Register} />\r\n      </>\r\n        : <BoxLoading />}\r\n    </div>\r\n  )\r\n}\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    token: state.authentication.token,\r\n    loadedtrainings: state.training.loadedtrainings,\r\n    loadedmeasurements: state.training.loadedmeasurements,\r\n    loadedgoals: state.training.loadedgoals,\r\n    loadedexercises: state.training.loadedexercises\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, { getMeasurements, getTrainings, getGoals, getExercises, postLogoutAuth })(DefaultContainer);","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import {POST_LOGOUT,GET_MEASUREMENTS,GET_MEASUREMENTS_SUCCESS,POST_TRAINING,GET_TRAININGS,GET_TRAININGS_SUCCESS,\r\n    GET_GOALS,GET_GOALS_SUCCESS,POST_MEASUREMENT,GET_EXERCISES,GET_EXERCISES_SUCCESS,GET_OWN_EXERCISES_SUCCESS,END_TRAINING_SUCCESS,POST_TIME} from '../actions/types';\r\n\r\nconst initialState = {\r\n    measurements: [],\r\n    trainings: [],\r\n    goals:[],\r\n    defaultexercises:[],\r\n    loadingtrainings: false,\r\n    loadedtrainings: false,\r\n    loadingmeasurements: false,\r\n    loadedmeasurements: false,\r\n    loadinggoals: false,\r\n    loadedgoals:false,\r\n    loadingexercises: false,\r\n    loadedexercises:false,\r\n    loadedtime :false,\r\n    ownexercises:[],\r\n    seconds: '',\r\n    minutes: '',\r\n    hours: ''\r\n    \r\n};\r\nexport default function trainreducer(state=initialState,action){\r\n    switch(action.type){\r\n        case GET_MEASUREMENTS:\r\n            return{\r\n                ...state,\r\n                loadingmeasurements:true,\r\n            }\r\n        case GET_MEASUREMENTS_SUCCESS:\r\n            return{\r\n                ...state,\r\n                measurements:action.payload,\r\n                loadingmeasurements:false,\r\n                loadedmeasurements:true\r\n            }\r\n        case GET_EXERCISES:\r\n            return{\r\n                ...state,\r\n                loadingexercises:true,\r\n            }\r\n            case GET_EXERCISES_SUCCESS:\r\n                return{\r\n                    ...state,\r\n                    exercises: action.payload,\r\n                    loadedexercises: true,\r\n                }\r\n        case GET_TRAININGS:\r\n            return{\r\n                ...state,\r\n                loadingtrainings:true,\r\n            \r\n            }\r\n        case GET_TRAININGS_SUCCESS:\r\n            return{\r\n                ...state,\r\n                trainings:action.payload,\r\n                loadingtrainings:false,\r\n                loadedtrainings:true\r\n            }\r\n        case GET_GOALS:\r\n            return{\r\n                ...state,\r\n                loadinggoals:true\r\n            }\r\n        case GET_GOALS_SUCCESS:\r\n            return{\r\n                ...state,\r\n                goals:action.payload,\r\n                loadinggoals:false,\r\n                loadedgoals:true\r\n\r\n            }\r\n        case POST_TRAINING:\r\n            return{\r\n                ...state\r\n            }\r\n        case POST_MEASUREMENT:\r\n            return{\r\n                ...state\r\n            }\r\n        case POST_LOGOUT:\r\n            return{\r\n                ...state,\r\n                measurements: [],\r\n                trainings: [],\r\n                goals:[],\r\n                loadedtrainings: false,\r\n                loadedgoals: false,\r\n                loadedmeasurements: false\r\n            }\r\n        case GET_OWN_EXERCISES_SUCCESS:\r\n            return{\r\n                ...state,\r\n                ownexercises:action.payload\r\n            }\r\n        case END_TRAINING_SUCCESS:\r\n            return{\r\n                ...state,\r\n                \r\n            }\r\n        case POST_TIME:\r\n            return{\r\n                ...state,\r\n                seconds: action.second,\r\n                minutes: action.minute,\r\n                hours: action.hour,\r\n            }\r\n        \r\n        default: \r\n            return state;\r\n    }\r\n}","import {POST_LOGIN,USER_LOADED,AUTH_ERROR,LOGIN_ERROR,POST_REGISTER, REGISTER_ERROR,POST_LOGOUT_AUTH, USER_LOADING} from '../actions/types';\r\nconst initialState = {\r\n    token: null,\r\n    name: null,\r\n    isAuthenticated: null,\r\n    error: '',\r\n    error_register: [],\r\n    tokenloaded: false,\r\n    error_register_name: '',\r\n    seconds: '',\r\n    minutes: '',\r\n    hours: ''\r\n};\r\nexport default function authreducer(state=initialState,action){\r\n    switch(action.type){\r\n        case POST_LOGIN:\r\n            return{\r\n                ...state,\r\n                token:action.payload,\r\n                tokenloaded: true,\r\n                error: ''\r\n            }\r\n        case LOGIN_ERROR:\r\n            return{\r\n                ...state,\r\n                error:action.payload\r\n            }\r\n        case POST_REGISTER:\r\n            return{\r\n                ...state,\r\n                token:action.payload.token,\r\n                name:action.payload.username,\r\n                tokenloaded: true,\r\n                error_register: ''\r\n            }\r\n        case REGISTER_ERROR:\r\n            return{\r\n                ...state,\r\n                error_register:action.payload\r\n            }\r\n        case POST_LOGOUT_AUTH:\r\n            return{\r\n                ...state,\r\n                token: '',\r\n                tokenloaded: false\r\n            }\r\n        case USER_LOADING:\r\n            return{\r\n                ...state,\r\n                isLoading: true\r\n            }\r\n        case USER_LOADED:\r\n            return{\r\n                ...state,\r\n                isLoaded: true,\r\n                isAuthenticated: true,  \r\n                token: action.payload.token,\r\n                name: action.payload.username,\r\n                error: ''\r\n            }\r\n        case AUTH_ERROR:\r\n            localStorage.removeItem('token')\r\n            localStorage.removeItem('name')\r\n            return{\r\n                ...state,\r\n                token:null,\r\n                name: null,\r\n                isAuthenticated:false,\r\n                isLoading: false\r\n            }\r\n        \r\n\r\n        default: \r\n            return state;\r\n    }\r\n}","import {combineReducers} from 'redux';\r\nimport trainingReducer from './trainingReducer';\r\nimport authenticationReducer from './authenticationReducer';\r\nexport default combineReducers({\r\n    training:trainingReducer,\r\n    authentication:authenticationReducer,\r\n    \r\n})","import {createStore,applyMiddleware} from 'redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from './redux/reducers';\r\n\r\nconst initialState = {};\r\nconst middleware = [thunk];\r\nconst store = createStore(rootReducer,initialState,composeWithDevTools(applyMiddleware(...middleware),));\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport LoginContainer from './components/LoginContainer';\nimport DefaultContainer from './components/DefaultContainer';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter, Route,Switch } from 'react-router-dom';\nimport {Provider} from 'react-redux'\nimport store from './store';\nimport '@trendmicro/react-sidenav/dist/react-sidenav.css';\nimport './sass/index.scss';\nReactDOM.render(\n  \n  <Provider store={store}>\n  <BrowserRouter>\n  <Switch>\n    <Route exact path=\"/(login)\" component={LoginContainer}/>\n    <Route exact path=\"/(register)\" component={LoginContainer}/>\n    <Route component={DefaultContainer} />\n  </Switch>\n</BrowserRouter>\n</Provider>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}