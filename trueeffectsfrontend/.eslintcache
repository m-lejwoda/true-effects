[{"/home/saxatachi/TrueEffects/trueeffectsbackend/trueeffectsfrontend/src/index.js":"1","/home/saxatachi/TrueEffects/trueeffectsbackend/trueeffectsfrontend/src/reportWebVitals.js":"2","/home/saxatachi/TrueEffects/trueeffectsbackend/trueeffectsfrontend/src/store.js":"3","/home/saxatachi/TrueEffects/trueeffectsbackend/trueeffectsfrontend/src/components/LoginContainer.js":"4","/home/saxatachi/TrueEffects/trueeffectsbackend/trueeffectsfrontend/src/components/DefaultContainer.js":"5","/home/saxatachi/TrueEffects/trueeffectsbackend/trueeffectsfrontend/src/components/Login.js":"6","/home/saxatachi/TrueEffects/trueeffectsbackend/trueeffectsfrontend/src/components/Navbar.js":"7","/home/saxatachi/TrueEffects/trueeffectsbackend/trueeffectsfrontend/src/components/Training.js":"8","/home/saxatachi/TrueEffects/trueeffectsbackend/trueeffectsfrontend/src/components/Register.js":"9","/home/saxatachi/TrueEffects/trueeffectsbackend/trueeffectsfrontend/src/components/Navbar2.js":"10","/home/saxatachi/TrueEffects/trueeffectsbackend/trueeffectsfrontend/src/components/Schedule.js":"11","/home/saxatachi/TrueEffects/trueeffectsbackend/trueeffectsfrontend/src/components/Homepage.js":"12","/home/saxatachi/TrueEffects/trueeffectsbackend/trueeffectsfrontend/src/components/AddGoals.js":"13","/home/saxatachi/TrueEffects/trueeffectsbackend/trueeffectsfrontend/src/components/AddMeasurementsSummary.js":"14","/home/saxatachi/TrueEffects/trueeffectsbackend/trueeffectsfrontend/src/components/AddMeasurements.js":"15","/home/saxatachi/TrueEffects/trueeffectsbackend/trueeffectsfrontend/src/components/DisplayMeasurements.js":"16","/home/saxatachi/TrueEffects/trueeffectsbackend/trueeffectsfrontend/src/components/CreateTraining.js":"17","/home/saxatachi/TrueEffects/trueeffectsbackend/trueeffectsfrontend/src/redux/actions/authenticationActions.js":"18","/home/saxatachi/TrueEffects/trueeffectsbackend/trueeffectsfrontend/src/redux/actions/trainingActions.js":"19","/home/saxatachi/TrueEffects/trueeffectsbackend/trueeffectsfrontend/src/redux/reducers/index.js":"20","/home/saxatachi/TrueEffects/trueeffectsbackend/trueeffectsfrontend/src/components/AuthenticateLogo.js":"21","/home/saxatachi/TrueEffects/trueeffectsbackend/trueeffectsfrontend/src/components/MyStopwatch.js":"22","/home/saxatachi/TrueEffects/trueeffectsbackend/trueeffectsfrontend/src/components/ModalDisplayTraining.js":"23","/home/saxatachi/TrueEffects/trueeffectsbackend/trueeffectsfrontend/src/components/homepagecomponents/HomepageGoalItem.js":"24","/home/saxatachi/TrueEffects/trueeffectsbackend/trueeffectsfrontend/src/components/homepagecomponents/HomepageTrainingItem.js":"25","/home/saxatachi/TrueEffects/trueeffectsbackend/trueeffectsfrontend/src/components/homepagecomponents/HomepageMeasurementItem.js":"26","/home/saxatachi/TrueEffects/trueeffectsbackend/trueeffectsfrontend/src/redux/actions/types.js":"27","/home/saxatachi/TrueEffects/trueeffectsbackend/trueeffectsfrontend/src/components/DisplayMeasurementsItem.js":"28","/home/saxatachi/TrueEffects/trueeffectsbackend/trueeffectsfrontend/src/components/Logo.js":"29","/home/saxatachi/TrueEffects/trueeffectsbackend/trueeffectsfrontend/src/redux/reducers/authenticationReducer.js":"30","/home/saxatachi/TrueEffects/trueeffectsbackend/trueeffectsfrontend/src/redux/reducers/trainingReducer.js":"31","/home/saxatachi/TrueEffects/trueeffectsbackend/trueeffectsfrontend/src/components/modaldisplaytraining/ModalDisplayTrainingItem.js":"32"},{"size":792,"mtime":1618767978994,"results":"33","hashOfConfig":"34"},{"size":375,"mtime":1618767978998,"results":"35","hashOfConfig":"34"},{"size":381,"mtime":1618767979002,"results":"36","hashOfConfig":"34"},{"size":592,"mtime":1618767978982,"results":"37","hashOfConfig":"34"},{"size":2714,"mtime":1618767978978,"results":"38","hashOfConfig":"34"},{"size":4164,"mtime":1618767978982,"results":"39","hashOfConfig":"34"},{"size":2258,"mtime":1618767978982,"results":"40","hashOfConfig":"34"},{"size":10210,"mtime":1618767978986,"results":"41","hashOfConfig":"34"},{"size":5922,"mtime":1618767978982,"results":"42","hashOfConfig":"34"},{"size":3433,"mtime":1618767978982,"results":"43","hashOfConfig":"34"},{"size":2616,"mtime":1618767978986,"results":"44","hashOfConfig":"34"},{"size":2849,"mtime":1618767978982,"results":"45","hashOfConfig":"34"},{"size":2029,"mtime":1618767978978,"results":"46","hashOfConfig":"34"},{"size":4571,"mtime":1618767978978,"results":"47","hashOfConfig":"34"},{"size":12275,"mtime":1618767978978,"results":"48","hashOfConfig":"34"},{"size":1798,"mtime":1618767978982,"results":"49","hashOfConfig":"34"},{"size":14530,"mtime":1618767978978,"results":"50","hashOfConfig":"34"},{"size":2336,"mtime":1618827270433,"results":"51","hashOfConfig":"34"},{"size":6517,"mtime":1618827269649,"results":"52","hashOfConfig":"34"},{"size":268,"mtime":1618767978998,"results":"53","hashOfConfig":"34"},{"size":874,"mtime":1618767978978,"results":"54","hashOfConfig":"34"},{"size":1866,"mtime":1618767978982,"results":"55","hashOfConfig":"34"},{"size":5462,"mtime":1618767978982,"results":"56","hashOfConfig":"34"},{"size":1774,"mtime":1618767978986,"results":"57","hashOfConfig":"34"},{"size":1195,"mtime":1618767978986,"results":"58","hashOfConfig":"34"},{"size":4885,"mtime":1618767978986,"results":"59","hashOfConfig":"34"},{"size":1598,"mtime":1618767978998,"results":"60","hashOfConfig":"34"},{"size":4596,"mtime":1618767978982,"results":"61","hashOfConfig":"34"},{"size":711,"mtime":1618767978982,"results":"62","hashOfConfig":"34"},{"size":2179,"mtime":1618767978998,"results":"63","hashOfConfig":"34"},{"size":3262,"mtime":1618767978998,"results":"64","hashOfConfig":"34"},{"size":1516,"mtime":1618767978986,"results":"65","hashOfConfig":"34"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},"1xel5e1",{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"68"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"68"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"68"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"68"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"68"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"68"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"68"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"68"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"68"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"68"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"68"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"114","messages":"115","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"68"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"68"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"68"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"68"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/saxatachi/TrueEffects/trueeffectsbackend/trueeffectsfrontend/src/index.js",[],["146","147"],"/home/saxatachi/TrueEffects/trueeffectsbackend/trueeffectsfrontend/src/reportWebVitals.js",[],"/home/saxatachi/TrueEffects/trueeffectsbackend/trueeffectsfrontend/src/store.js",[],"/home/saxatachi/TrueEffects/trueeffectsbackend/trueeffectsfrontend/src/components/LoginContainer.js",["148","149"],"import { BrowserRouter, Route,Redirect } from 'react-router-dom';\r\nimport React, {useEffect } from 'react';\r\nimport Login from './Login';\r\nimport Register from './Register';\r\nimport '../sass/defaultcontainer.scss';\r\n\r\nconst LoginContainer = () => {\r\n  useEffect(()=>{\r\n    document.title = \"TrueEffects\"\r\n  },[])\r\n  return(\r\n    <div className=\"containerlogin\">\r\n      {/* <Route exact path=\"/\" render={() => <Redirect to=\"/login\" />} /> */}\r\n      <Route path=\"/login\" component={Login} />\r\n      <Route path=\"/register\" component={Register} />\r\n    </div>\r\n)}\r\nexport default LoginContainer","/home/saxatachi/TrueEffects/trueeffectsbackend/trueeffectsfrontend/src/components/DefaultContainer.js",["150","151"],"import {Route} from 'react-router-dom';\r\nimport React, {useEffect} from 'react';\r\nimport Navbar from './Navbar';\r\nimport Navbar2 from './Navbar2';\r\nimport Training from './Training';\r\nimport Schedule from './Schedule';\r\nimport Homepage from './Homepage';\r\nimport AddGoals from './AddGoals';\r\nimport LoginContainer from './LoginContainer';\r\nimport {connect} from 'react-redux';\r\nimport {getMeasurements,getTrainings,getGoals,getExercises} from '../redux/actions/trainingActions';\r\nimport {postLogoutAuth} from '../redux/actions/authenticationActions';\r\nimport DisplayMeasurements from './DisplayMeasurements'\r\nimport AddMeasurements from './AddMeasurements';\r\nimport CreateTraining from './CreateTraining';\r\nimport Register from './Register';\r\nimport '../sass/defaultcontainer.scss';\r\nimport { BoxLoading } from 'react-loadingg';\r\nimport AddMeasurementsSummary from './AddMeasurementsSummary';\r\nconst DefaultContainer = (props) => {\r\n  useEffect(()=>{\r\n    document.title = \"TrueEffects\"\r\n    if(props.token === \"undefined\"){\r\n      props.postLogoutAuth()\r\n    }else if(props.token){\r\n      props.getMeasurements();\r\n      props.getTrainings();\r\n      props.getGoals();\r\n      props.getExercises();\r\n    }else{\r\n      props.history.push('/login')\r\n    }\r\n  },[])\r\n  \r\n  useEffect(()=>{\r\n    if (props.token === null){\r\n      props.history.push('/login')\r\n    }\r\n  },[props.token])\r\nreturn(\r\n    <div className=\"containerdefault\">\r\n      {props.loadedtrainings && props.loadedgoals && props.loadedmeasurements && props.loadedexercises ?  <>\r\n      <Navbar />\r\n      <Navbar2 />\r\n      <Route exact path=\"/\" component={Homepage}/>\r\n      <Route path=\"/training\" component={Training}/>\r\n      <Route path=\"/schedule\" component={Schedule}/>\r\n      <Route path=\"/addmeasurements\" component={AddMeasurements}/>\r\n      <Route path=\"/displaymeasurements\" component={DisplayMeasurements}/>\r\n      <Route path=\"/createtraining\" component={CreateTraining}/>\r\n      <Route path=\"/measurementsummary\" component={AddMeasurementsSummary} />\r\n      <Route path=\"/addgoals\" component={AddGoals} />\r\n      <Route exact path=\"/login\" component={LoginContainer} />\r\n      <Route exact path=\"/register\" component={Register} />\r\n      </>\r\n      : <BoxLoading />}\r\n    </div>  \r\n )}\r\n const mapStateToProps = (state) => {\r\n  return{\r\n      token : state.authentication.token,\r\n      loadedtrainings: state.training.loadedtrainings,\r\n      loadedmeasurements: state.training.loadedmeasurements,\r\n      loadedgoals: state.training.loadedgoals,\r\n      loadedexercises: state.training.loadedexercises\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps,{getMeasurements,getTrainings,getGoals,getExercises,postLogoutAuth})(DefaultContainer);   ","/home/saxatachi/TrueEffects/trueeffectsbackend/trueeffectsfrontend/src/components/Login.js",[],"/home/saxatachi/TrueEffects/trueeffectsbackend/trueeffectsfrontend/src/components/Navbar.js",["152"],"import React from 'react';\r\nimport '../sass/navbar.scss';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faDumbbell } from '@fortawesome/fontawesome-free-solid';\r\nimport {connect} from 'react-redux';\r\nimport {postLogout} from '../redux/actions/authenticationActions';\r\nimport { useHistory } from \"react-router-dom\";\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      flexGrow: 1,\r\n    },\r\n    menuButton: {\r\n      marginRight: theme.spacing(2),\r\n    },\r\n    title: {\r\n      flexGrow: 1,\r\n    },\r\n    bar: {\r\n      paddingLeft: 64,\r\n      paddingRight: 100,\r\n      background: '#db3d44',\r\n    },\r\n  }));\r\nconst Navbar = (props) => {\r\n  const history = useHistory()\r\n    const handleLogout = async() =>{\r\n      await props.postLogout()\r\n    }\r\n      const classes = useStyles();\r\n      return (\r\n      <div className={classes.root}>\r\n            <AppBar className={classes.bar}position=\"static\">\r\n              <Toolbar>\r\n                <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\">\r\n                </IconButton>\r\n                <Typography variant=\"h6\" className={classes.title}>\r\n                  <FontAwesomeIcon icon={faDumbbell} />TrueEffects\r\n                </Typography>\r\n                {props.token !== null ?<> <p>Witaj {props.name}<Button onClick={handleLogout} color=\"inherit\">Wyloguj się</Button></p></>:<><Button color=\"inherit\">Zaloguj się</Button></>}\r\n              </Toolbar>\r\n            </AppBar>\r\n          </div>\r\n    );\r\n};\r\nconst mapStateToProps = (state) => {\r\n  return{\r\n      trainings: state.training.trainings.data,\r\n      loadedtrainings: state.training.loadedtrainings,\r\n      measurements: state.training.measurements.data,\r\n      goals: state.training.goals.data,\r\n      name: state.authentication.name,\r\n      token: state.authentication.token\r\n  }\r\n}\r\nexport default connect(mapStateToProps,{postLogout})(Navbar); \r\n","/home/saxatachi/TrueEffects/trueeffectsbackend/trueeffectsfrontend/src/components/Training.js",["153","154","155","156","157","158","159","160"],"import React,{useState,useRef,createRef} from 'react';\r\nimport MyStopwatch from './MyStopwatch';\r\nimport '../sass/training.scss';\r\nimport logo from '../images/logo.png';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faArrowLeft,faArrowRight } from '@fortawesome/fontawesome-free-solid';\r\nimport { endTraining,getTrainings } from '../redux/actions/trainingActions';\r\nimport {connect} from 'react-redux';\r\nimport { useHistory } from \"react-router-dom\";\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    '&:hover': {\r\n      backgroundColor: 'transparent',\r\n    },\r\n  },\r\n  icon: {\r\n    borderRadius: 3,\r\n    width: 16,\r\n    height: 16,\r\n    boxShadow: 'inset 0 0 0 1px rgba(16,22,26,.2), inset 0 -1px 0 rgba(16,22,26,.1)',\r\n    backgroundColor: '#f5f8fa',\r\n    backgroundImage: 'linear-gradient(180deg,hsla(0,0%,100%,.8),hsla(0,0%,100%,0))',\r\n    '$root.Mui-focusVisible &': {\r\n      outline: '2px auto rgba(19,124,189,.6)',\r\n      outlineOffset: 2,\r\n    },\r\n    'input:hover ~ &': {\r\n      backgroundColor: '#ebf1f5',\r\n    },\r\n    'input:disabled ~ &': {\r\n      boxShadow: 'none',\r\n      background: 'rgba(206,217,224,.5)',\r\n    },\r\n  },\r\n  checkedIcon: {\r\n    backgroundColor: '#137cbd',\r\n    backgroundImage: 'linear-gradient(180deg,hsla(0,0%,100%,.1),hsla(0,0%,100%,0))',\r\n    '&:before': {\r\n      display: 'block',\r\n      width: 16,\r\n      height: 16,\r\n      backgroundImage:\r\n        \"url(\\\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 16 16'%3E%3Cpath\" +\r\n        \" fill-rule='evenodd' clip-rule='evenodd' d='M12 5c-.28 0-.53.11-.71.29L7 9.59l-2.29-2.3a1.003 \" +\r\n        \"1.003 0 00-1.42 1.42l3 3c.18.18.43.29.71.29s.53-.11.71-.29l5-5A1.003 1.003 0 0012 5z' fill='%23fff'/%3E%3C/svg%3E\\\")\",\r\n      content: '\"\"',\r\n    },\r\n    'input:hover ~ &': {\r\n      backgroundColor: '#106ba3',\r\n    },\r\n  },\r\n});\r\nconst Training = (props) => {\r\n    const history = useHistory()\r\n    const {training} = props.location\r\n    const [series, setSeries] = useState(0);\r\n    const [singleSeries,setSingleSeries] = useState(0)\r\n    const [endtraining,setEndTraining] = useState(false)\r\n    const [input,setInput] = useState('')\r\n    const [seconds,setSeconds] = useState('')\r\n    const [minutes,setMinutes] = useState('')\r\n    const [hours,setHours] = useState('')\r\n    const inputRef = useRef();\r\n    const buttonRef = useRef();\r\n    const endbuttonRef = useRef();\r\n    const childRef = useRef();\r\n    const goNext = () =>{\r\n\r\n      // const getdata = (x,y,z) =>{\r\n      //   setSeconds(x)\r\n      //   setMinutes(y)\r\n      //   setHours(z)\r\n\r\n      // }\r\n\r\n      if (inputRef.current.value !== \"\"){\r\n        training.training[`${series}`].reps[`${singleSeries}`]= parseInt(inputRef.current.value)\r\n      }\r\n      let value = parseInt(inputRef.current.value)\r\n      let placeholder = parseInt(inputRef.current.placeholder)\r\n      if(Number.isInteger(value)){\r\n        inputRef.current.value = ''\r\n      if(singleSeries+1 < training.training[series].reps.length){\r\n      setSingleSeries(singleSeries+1)\r\n      }else{\r\n      if(series+1>=training.training.length){\r\n        setEndTraining(true)\r\n      }\r\n      else{\r\n      setSeries(series+1)\r\n      setSingleSeries(0)\r\n      }\r\n    }}\r\n    else if(Number.isInteger(placeholder)){\r\n      inputRef.current.value = ''\r\n      if(singleSeries+1 < training.training[series].reps.length){\r\n      setSingleSeries(singleSeries+1)\r\n    }else{\r\n      if(series+1>=training.training.length){\r\n        setEndTraining(true)\r\n      }else{\r\n      setSeries(series+1)\r\n      setSingleSeries(0)\r\n      }\r\n    }}\r\n    else{\r\n      alert(\"Niepoprawne dane\");\r\n    }\r\n  }\r\n  const handlemovetoschedulepage = () =>{\r\n    history.push('/schedule/')\r\n}\r\n  const handleInput = () => {\r\n    setInput(inputRef.current.value)\r\n  }\r\n\r\n  const handleEndTraining = async()=>{\r\n    await childRef.current.handleStop()\r\n    await childRef.current.getAlert()\r\n    // await props.endTraining(props.location.training.id,props.location.training)\r\n    await childRef.current.posttrain()\r\n    // await props.getTrainings()\r\n    await handlemovetoschedulepage()\r\n  }\r\n    return (\r\n        <div className=\"training\">\r\n            <div className=\"training__top\">\r\n                <div className=\"training__top__previousexercise\">\r\n                    <div style={{visibility: typeof training.training[series-1] !== \"undefined\" ? 'visible' : 'hidden' }} className=\"training__top__previousexercise-title\"><FontAwesomeIcon icon={faArrowLeft} /> Poprzednie ćwiczenie</div>\r\n                    <div style={{visibility: typeof training.training[series-1] !== \"undefined\" ? 'visible' : 'hidden' }} className=\"training__top__previousexercise-name\">{typeof training.training[series-1] !== \"undefined\" && training.training[series-1].exercise.name}</div>\r\n                </div>\r\n                {typeof training.training[series+1] !== \"undefined\" && <div className=\"training__top__nextexercise\">\r\n                    <div style={{visibility: typeof training.training[series+1] !== \"undefined\" ? 'visible' : 'hidden' }} className=\"training__top__nextexercise-title\">Następne ćwiczenie <FontAwesomeIcon icon={faArrowRight} /></div>\r\n                    <div style={{visibility: typeof training.training[series+1] !== \"undefined\" ? 'visible' : 'hidden' }} className=\"training__top__nextexercise-name\">{typeof training.training[series+1] !== \"undefined\" &&  training.training[series+1].exercise !== null ? training.training[series+1].exercise.name !== null: training.training[series+1].ownexercise.name}</div>\r\n                </div>}\r\n            </div>\r\n            <div className=\"training__middle\">\r\n                <div className=\"training__middle-title\">Aktualne Ćwiczenie</div>\r\n                <div className=\"training__middle-exercise\">{training.training[series].exercise !== null ? training.training[series].exercise.name : training.training[series].ownexercise.name}</div>\r\n                <div className=\"training__middle__logotime\">\r\n                    <div className=\"training__middle__logotime-logo\">\r\n                      <img src={logo} alt=\"logo\"  />\r\n                    </div>\r\n                    <div className=\"training__middle__logotime-time\" >\r\n                    <MyStopwatch ref={childRef} send={props.endTraining} get={props.getTrainings} id={props.location.training.id} training={props.location.training} />\r\n                  </div>\r\n                </div>\r\n                <div className=\"training__middle__series\">\r\n                    <div className=\"training__middle__series__checkboxes\" style={{visibility: endtraining ? 'hidden' : 'visible' }}>\r\n                    {training.training[`${series}`].reps.map(function (item,index) {\r\n                      if(index < singleSeries+1){\r\n                        return (\r\n                          <Checkbox checked={true} />\r\n                        )\r\n                        }else{\r\n                        return(\r\n                          <Checkbox disabled checked={false}/>\r\n                        )}}\r\n                )}\r\n                      </div>\r\n                    <div className=\"training__middle__series-title\" style={{visibility: endtraining ? 'hidden' : 'visible' }}>Seria {singleSeries+1}/{training.training[`${series}`].reps.length}</div>\r\n                </div>\r\n            </div>\r\n            <div className=\"training__bottom\">\r\n                <div className=\"training__bottom__leftbutton\">\r\n                    <button id=\"endtraining\" ref={endbuttonRef} onClick={handleEndTraining}>Zakończ trening X</button>\r\n                </div>\r\n                <div className=\"training__bottom__phase\" style={{visibility: endtraining ? 'hidden' : 'visible' }}>\r\n                    <div className=\"training__bottom__phase-title\">Fazy(w sekundach)</div>\r\n                    <div className=\"training__bottom__phase__allphases\">\r\n                        <div className=\"training__bottom__phase__allphases-phase\">{training.training[`${series}`].concentric_phase}</div>\r\n                        <div className=\"training__bottom__phase__allphases-/\">/</div>\r\n                        <div className=\"training__bottom__phase__allphases-phase\">{training.training[`${series}`].pause_after_concentric_phase}</div>\r\n                        <div className=\"training__bottom__phase__allphases-/\">/</div>\r\n                        <div className=\"training__bottom__phase__allphases-phase\">{training.training[`${series}`].eccentric_phase}</div>\r\n                        <div className=\"training__bottom__phase__allphases-/\">/</div>\r\n                        <div className=\"training__bottom__phase__allphases-phase\">{training.training[`${series}`].pause_after_eccentric_phase}</div>\r\n                    </div>\r\n                    <div className=\"training__bottom__weight-title\">Ciężar dodatkowy</div>\r\n                    <div className=\"training__bottom__weight-title2\">\r\n                        {training.training[`${series}`].weight}kg\r\n                    </div>\r\n                    <div className=\"training__bottom__phase-title2\">Ile powtórzeń wykonałeś w serii</div>\r\n                    <div className=\"training__bottom__phase__reps\">\r\n                        <div className=\"training__bottom__phase__reps-actualreps\"><input ref={inputRef} placeholder={training.training[`${series}`].reps[`${singleSeries}`]} onChange={handleInput} id=\"actualreps\" min=\"0\" max=\"10000\" /></div>\r\n                        <div className=\"training__bottom__phase__reps-/\">/</div>\r\n                        <div className=\"training__bottom__phase__reps-assumedreps\">{training.training[`${series}`].reps[`${singleSeries}`]}</div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"training__bottom__rightbutton\">\r\n                    <button ref={buttonRef} style={{visibility: endtraining ? 'hidden' : 'visible' }} onClick={goNext} id=\"nextexercise\">Przejdź dalej</button>\r\n                </div>\r\n            </div>\r\n            \r\n        </div>\r\n    );\r\n};\r\n\r\nexport default connect(null,{getTrainings,endTraining})(Training); \r\n","/home/saxatachi/TrueEffects/trueeffectsbackend/trueeffectsfrontend/src/components/Register.js",["161","162","163","164"],"import React,{useState} from 'react';\r\nimport '../sass/register.scss';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faArrowLeft,faArrowRight } from '@fortawesome/fontawesome-free-solid';\r\nimport AuthenticateLogo from './AuthenticateLogo';\r\nimport {postRegister} from '../redux/actions/authenticationActions';\r\nimport {connect} from 'react-redux';\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      '& .MuiTextField-root': {\r\n        width: '60ch',\r\n        '& .MuiInputBase-input':{\r\n            fontWeight: '700'\r\n        }\r\n      },\r\n    },\r\n  }));\r\nconst Register = (props) => {\r\n    if(props.token !== null){\r\n        props.history.push('/')\r\n    }\r\n    const [username,setUsername] = useState('')\r\n    const [email,setEmail] = useState('')\r\n    const [password,setPassword] = useState('')\r\n    const [password2,setPassword2] = useState('')\r\n    const [usernameerror,setUsernameError] = useState(false)\r\n    const [emailerror,setEmailError] = useState(false)\r\n    const [passworderror,setPasswordError] = useState(false)\r\n    function validateEmail(email) {\r\n        const re = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n        return re.test(String(email).toLowerCase());\r\n    }\r\n    \r\n    const handleMoveToLogin = () => {\r\n        props.history.push('/login')\r\n    }\r\n    const handleMovetoBack = () => {\r\n        props.history.goBack()\r\n    }\r\n    const handleRegister = async(e) => {\r\n        e.preventDefault()\r\n        if(validateEmail(email) !== false){\r\n            let data = {\r\n                \"username\": username,\r\n                \"email\": email,\r\n                \"password\":password,\r\n                \"password2\":password2\r\n            }\r\n            await props.postRegister(data)\r\n            // props.history.push('/')\r\n        }else{\r\n            setEmailError(true)\r\n        }\r\n        \r\n    }\r\n    const classes = useStyles();\r\n    return (\r\n        <div className=\"register\">\r\n            <AuthenticateLogo />\r\n            <div className=\"register__secondcontainer\">\r\n                <div className=\"register__secondcontainer__top\">\r\n                <div className=\"register__secondcontainer__top__back\" onClick={handleMovetoBack}>\r\n                    <div className=\"register__secondcontainer__top__back-icon\"><FontAwesomeIcon icon={faArrowLeft} /></div>\r\n                    <div className=\"register__secondcontainer__top__back-title\">Cofnij</div>\r\n                </div>\r\n                <div className=\"register__secondcontainer__top__forward\" onClick={handleMoveToLogin}>\r\n                    <div className=\"register__secondcontainer__top__forward-title\">Zaloguj się</div>\r\n                    <div className=\"register__secondcontainer__top__forward-icon\"><FontAwesomeIcon icon={faArrowRight} /></div>\r\n                </div>\r\n                </div>\r\n                <div className=\"register__secondcontainer__form\">\r\n                    <form className={classes.root} noValidate autoComplete=\"off\">\r\n                    <div className=\"register__secondcontainer__form__title\">Zarejestruj się</div>\r\n                    <div className=\"register__secondcontainer__form__secondtitle\">Zarejestruj się aby kontynuować</div>\r\n                    <div className=\"register__secondcontainer__form__allinputs\">\r\n                    <div className=\"register__secondcontainer__form__username-input\">\r\n                    <TextField id=\"standard-password-input\"  onChange={(e)=>setUsername(e.target.value)}  label=\"Nazwa użytkownika\" type=\"text\" autoComplete=\"current-password\"/>\r\n                    </div>\r\n                    {props.error_register.username !== undefined && <p style={{color:'red'}}>{props.error_register.username}</p>}\r\n                    <div className=\"register__secondcontainer__form__username-email\">\r\n                    <TextField id=\"standard-password-input\"  onChange={(e)=>setEmail(e.target.value)}  label=\"Email\" type=\"email\" autoComplete=\"current-password\"/>\r\n                    </div>\r\n                    {emailerror && <p style={{color: 'red'}}>Nieprawidłowy email</p>}\r\n                    <div className=\"register__secondcontainer__form__username-password\">\r\n                    <TextField id=\"standard-password-input\" onChange={(e)=>setPassword(e.target.value)}  label=\"Hasło\" type=\"password\" autoComplete=\"current-password\"/>\r\n                    </div>\r\n                    {props.error_register.password !== undefined && <p style={{color:'red'}}>{props.error_register.password}</p>}\r\n                    <div className=\"register__secondcontainer__form__username-password\">\r\n                    <TextField id=\"standard-password-input\" onChange={(e)=>setPassword2(e.target.value)} label=\"Powtórz hasło\" type=\"password\" autoComplete=\"current-password\"/>\r\n                    </div>\r\n                    {props.error_register.password2 !== undefined && <p style={{color:'red'}}>{props.error_register.password2}</p>}\r\n                   \r\n                    </div>\r\n                    <div className=\"register__secondcontainer__form__button\">\r\n                        <button className=\"register__secondcontainer__form__button-register\" onClick={handleRegister}>Zarejestruj się</button>\r\n                        {/* <p className=\"register__secondcontainer__form__button-forget\">Zapomniałem hasła</p> */}\r\n                    </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n            \r\n        </div>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return{\r\n        error_register: state.authentication.error_register,\r\n        token: state.authentication.token\r\n    }\r\n}\r\nexport default connect(mapStateToProps,{postRegister})(Register); \r\n","/home/saxatachi/TrueEffects/trueeffectsbackend/trueeffectsfrontend/src/components/Navbar2.js",[],"/home/saxatachi/TrueEffects/trueeffectsbackend/trueeffectsfrontend/src/components/Schedule.js",["165","166","167","168"],"import React from 'react';\r\nimport Scheduler from 'react-scheduler-calendar';\r\nimport {Calendar , momentLocalizer  } from 'react-big-calendar' \r\nimport 'react-big-calendar/lib/css/react-big-calendar.css';\r\nimport moment from 'moment';\r\n\r\nimport {connect} from 'react-redux';\r\nimport {getMeasurements,postTraining,getTrainings,getGoals} from '../redux/actions/trainingActions';\r\nimport ModalDisplayTraining from './ModalDisplayTraining';\r\nimport 'moment/locale/pl';\r\nrequire('moment/locale/pl.js')\r\n\r\nexport class Schedule extends React.Component {\r\n    state = {\r\n      modalopen:false,\r\n      training:null,\r\n      test:false,\r\n      date: null,\r\n      time: null,\r\n      description: '',\r\n      title: ''\r\n    }\r\n    // handleSelect = () =>{\r\n    //   console.log(\"select\")\r\n    // }\r\n    handleSelectEvent = (e) =>{\r\n      this.setState({\r\n        modalopen:true,\r\n        training:e.data,\r\n        test: !this.state.test,\r\n        date : e.date,\r\n        time: e.time,\r\n        description: e.description,\r\n        title: e.title,\r\n        alldata: e.all\r\n      })\r\n    }\r\n    handleBacktoSchedule = () => {\r\n      this.setState({\r\n        modalopen:false\r\n      })\r\n    }\r\n    \r\n    render() {\r\n      const {modalopen,training} = this.state\r\n      let events = []\r\n      this.props.trainings.map((e)=>{\r\n        events.push({\r\n          'title': e.name,\r\n          'start': Date.parse(e.date),\r\n          'end': Date.parse(e.date),\r\n          'data': e.training,\r\n          'date': e.date,\r\n          'time': e.time,\r\n          'description': e.description,\r\n          'all': e\r\n        })\r\n        })\r\n        const localizer = momentLocalizer(moment)\r\n      return(\r\n        <>\r\n      <div className=\"schedule\">\r\n        <Calendar culture='pl-PL' views={['month']} selectable={true} \r\n        //onSelectSlot={(slot) => {console.log(\"slot select: \", slot);\r\n          events={events} onSelectEvent={this.handleSelectEvent} localizer={localizer} style={{ height: 500,width: '95%' }}/>\r\n        {modalopen && <ModalDisplayTraining back ={this.handleBacktoSchedule} allprops={this.props} open={this.state.modalopen} training={this.state.training} date={this.state.date} time={this.state.time} description={this.state.description} title={this.state.title} alldata={this.state.alldata}/>}\r\n\r\n      </div>\r\n      \r\n      </>\r\n      )\r\n    }\r\n  }\r\nconst mapStateToProps = (state) => {\r\n    return{\r\n\r\n        trainings: state.training.trainings.data,\r\n        loadedtrainings: state.training.loadedtrainings,\r\n    }\r\n}\r\nexport default connect(mapStateToProps,{getMeasurements,getTrainings,getGoals})(Schedule);     \r\n","/home/saxatachi/TrueEffects/trueeffectsbackend/trueeffectsfrontend/src/components/Homepage.js",["169","170"],"import React,{useEffect} from 'react';\r\nimport '../sass/homepage.scss';\r\nimport {connect} from 'react-redux';\r\nimport {postLogin} from '../redux/actions/authenticationActions';\r\nimport {getMeasurements,postTraining,getTrainings,getGoals} from '../redux/actions/trainingActions';\r\nimport HomepageTrainingItem from './homepagecomponents/HomepageTrainingItem';\r\nimport HomepageMeasurementItem from './homepagecomponents/HomepageMeasurementItem';\r\nimport HomepageGoalItem from './homepagecomponents/HomepageGoalItem';\r\nimport { useHistory } from \"react-router-dom\";\r\nconst Homepage = (props) => {\r\n    const history = useHistory()\r\n    const addNewGoals = () => {\r\n        history.push('./addgoals')\r\n    }\r\n    \r\n    const addNewTraining = () => {\r\n        history.push('./createtraining')\r\n    }\r\n    \r\n    return (\r\n        <div className=\"homepage\">\r\n            <div className=\"homepage__title\">\r\n                Strona Domowa\r\n            </div>\r\n            <div className=\"homepage__container\">\r\n            <div className=\"homepage__firstcontainer\">\r\n            <div className=\"homepage__goalscontainer\">\r\n                <div className=\"homepage__goalscontainer-title\">Twoje cele do zrealizowania</div>\r\n                <div className=\"homepage__goalscontainer-add\"><button onClick={addNewGoals}>+ Dodaj nowe cele</button></div>\r\n                <div className=\"homepage__goalscontainer__elements\">\r\n                {props.goals.length>0 ? props.goals.map((goal)=><HomepageGoalItem goal={goal}/>): <p>Nie masz aktualnie żadnych celów do zrealizowania</p>}\r\n                </div>\r\n            </div>\r\n            <div className=\"homepage__measurementcontainer\">\r\n            <HomepageMeasurementItem measurement={props.measurements}/>\r\n            </div>\r\n            </div>\r\n            <div className=\"homepage__lasttrainingscontainer\">\r\n                <div className=\"homepage__lasttrainingscontainer-title\">Ostatnie wykonane treningi</div>\r\n                <div className=\"homepage__lasttrainingscontainer-add\"><button onClick={addNewTraining}>+ Dodaj nowy trening</button></div>\r\n                <div className=\"homepage__lasttrainingscontainer__container\">\r\n                    {props.trainings.length>0 ? props.trainings.map((training)=> <HomepageTrainingItem allprops={props} training={training}/>): <p>Nie wykonałeś jeszcze żadnych treningów</p>}\r\n                </div>\r\n            </div>\r\n            </div>\r\n        </div>\r\n        \r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return{\r\n        trainings: state.training.trainings.data,\r\n        loadedtrainings: state.training.loadedtrainings,\r\n        measurements: state.training.measurements.data,\r\n        goals: state.training.goals.data\r\n    }\r\n}\r\nexport default connect(mapStateToProps,{postLogin,getMeasurements,getTrainings,getGoals})(Homepage);     ","/home/saxatachi/TrueEffects/trueeffectsbackend/trueeffectsfrontend/src/components/AddGoals.js",["171"],"import React,{useState,useRef} from 'react';\r\nimport DatePicker,{registerLocale} from \"react-datepicker\";\r\nimport {postGoals,getGoals} from '../redux/actions/trainingActions';\r\nimport {connect} from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport '../sass/addgoals.scss';\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nconst AddGoals = (props) => {\r\n    const history = useHistory()\r\n    const [startDate, setStartDate] = useState(\"\");\r\n    const [actualDate, setActualDate] = useState(\"\");\r\n    const inputdescription = useRef(\"\");\r\n    const handleDate = (date) =>{\r\n        let day = date.getDay()\r\n        let month = date.getMonth()\r\n        let year = date.getFullYear()\r\n        let fulldate = year + \"-\" + month + \"-\" + day\r\n        setActualDate(fulldate)\r\n        setStartDate(date)\r\n    }\r\n    const handleSendGoals = async() =>{\r\n        let data = {\r\n            \"date\": actualDate,\r\n            \"description\": inputdescription.current.value\r\n        }\r\n        await props.postGoals(data)\r\n        await props.getGoals()\r\n        history.push(\"/\")\r\n        \r\n    }\r\n    return (\r\n        <div className=\"addgoals\">\r\n            <div className=\"addgoals-title\">Dodaj Cel do zrealizowania</div>\r\n            <div className=\"addgoals__container\">\r\n                <div className=\"addgoals__container__data-input\">\r\n                    <DatePicker locale='pl' placeholderText={\"Wybierz date\"} dateFormat='dd/MM/yyyy' selected={startDate} onChange={date => handleDate(date)} />\r\n                </div>\r\n                <div className=\"addgoals__container__description\">\r\n                    <input id=\"description\" ref={inputdescription} placeholder=\"Podaj cel do zrealizowania\"/>\r\n                </div>\r\n                <div className=\"addgoals__container__button\">\r\n                    <button onClick={handleSendGoals}>Zaakceptuj nowy cel</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default connect(null,{postGoals,getGoals})(AddGoals);  ","/home/saxatachi/TrueEffects/trueeffectsbackend/trueeffectsfrontend/src/components/AddMeasurementsSummary.js",[],"/home/saxatachi/TrueEffects/trueeffectsbackend/trueeffectsfrontend/src/components/AddMeasurements.js",["172","173","174","175","176"],"import React,{useState,useRef} from 'react';\r\nimport '../sass/addmeasurements.scss';\r\nimport DatePicker,{registerLocale} from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport pl from \"date-fns/locale/pl\";\r\nimport {connect} from 'react-redux';\r\nimport {postMeasurement,getMeasurements} from '../redux/actions/trainingActions';\r\nimport AddMeasurementsSummary from './AddMeasurementsSummary';\r\nconst AddMeasurements = (props) => {\r\n    const [weight,setWeight] = useState(0)\r\n    const [growth,setGrowth] = useState(0)\r\n    const [leftbiceps,setLeftBiceps] = useState(0)\r\n    const [rightbiceps,setRightBiceps] = useState(0)\r\n    const [leftforearm,setLeftForearm] = useState(0)\r\n    const [rightforearm,setRightForearm] = useState(0)\r\n    const [leftleg,setLeftLeg] = useState(0)\r\n    const [rightleg,setRightLeg] = useState(0)\r\n    const [bodyfat,setBodyFat] = useState(0)\r\n    const [summary,setSummary] = useState(false)\r\n    const [data,setData] = useState()\r\n    const inputdate = useRef(null)\r\n    const [olddata,setOldData] = useState(()=>{\r\n        if(props.measurements[props.measurements.length-1] !== undefined){\r\n            return props.measurements[props.measurements.length-1]\r\n        }else{\r\n            return undefined\r\n        }\r\n    })\r\n    const [startDate, setStartDate] = useState(new Date());\r\n    const [actualDate, setActualDate] = useState(new Date())\r\n    const handleDate = () =>{\r\n        let date = new Date(inputdate.current.input.value)\r\n        let splitdate = inputdate.current.input.value.split(\"/\")\r\n        let fullday = splitdate[2] + \"-\" + splitdate[1] + \"-\" +  splitdate[0]\r\n        setActualDate(fullday)\r\n        \r\n    }\r\n    const handlePostMeasurement = () => {\r\n        async function fetchData(){\r\n            await props.postMeasurement(data)\r\n            await props.getMeasurements()\r\n        }\r\n        let splitdate = inputdate.current.input.value.split(\"/\")\r\n        let fullday = splitdate[2] + \"-\" + splitdate[1] + \"-\" +  splitdate[0]\r\n        let data = \r\n        {\r\n            \"date\":fullday,\r\n            \"weight\":weight,\r\n            \"growth\":growth,\r\n            \"left_biceps\":leftbiceps,\r\n            \"right_biceps\":rightbiceps,\r\n            \"right_forearm\":rightforearm,\r\n            \"left_forearm\":leftforearm,\r\n            \"left_leg\":leftleg,\r\n            \"right_leg\":rightleg,\r\n            \"bodyfat\":bodyfat,\r\n\r\n        }\r\n        setOldData(props.measurements[props.measurements.length-1])\r\n        fetchData()\r\n        setData(data)\r\n        setSummary(true)\r\n    }\r\n    registerLocale('pl',pl)\r\n    return (\r\n        <div className=\"addmeasurements\">\r\n            {summary ? <AddMeasurementsSummary newdata={data} olddata={olddata}/> :\r\n            <>\r\n            <div className=\"addmeasurements-title\">Dodaj pomiary</div>\r\n            <div className=\"addmeasurements__container\">\r\n            {olddata !== undefined && <div className=\"addmeasurements__container__oldmeasurementscontainer\">\r\n                <div className=\"addmeasurements__container__oldmeasurementscontainer-title\">Ostatni pomiar</div>\r\n\r\n                <div className=\"addmeasurements__container__oldmeasurementscontainer__data\">\r\n                    <div className=\"addmeasurements__container__oldmeasurementscontainer__data-input\">\r\n                        {olddata.date}\r\n                    </div>\r\n                    </div>\r\n                <div className=\"addmeasurements__container__oldmeasurementscontainer__elements\">\r\n                <div className=\"addmeasurements__container__oldmeasurementscontainer__elements__element\">\r\n                    <div className=\"addmeasurements__container__oldmeasurementscontainer__elements__element-name\">Waga</div>\r\n                    <div className=\"addmeasurements__container__oldmeasurementscontainer__elements__element-result\">{olddata.weight} kg</div>\r\n                    </div>\r\n                    <div className=\"addmeasurements__container__oldmeasurementscontainer__elements__element\">\r\n                    <div className=\"addmeasurements__container__oldmeasurementscontainer__elements__element-name\">Wzrost</div>\r\n                    <div className=\"addmeasurements__container__oldmeasurementscontainer__elements__element-result\">{olddata.growth} cm</div>\r\n                    </div>\r\n                    <div className=\"addmeasurements__container__oldmeasurementscontainer__elements__element\">\r\n                    <div className=\"addmeasurements__container__oldmeasurementscontainer__elements__element-name\">Prawy biceps</div>\r\n                    <div className=\"addmeasurements__container__oldmeasurementscontainer__elements__element-result\">{olddata.right_biceps}cm</div>\r\n                    </div>\r\n                    <div className=\"addmeasurements__container__oldmeasurementscontainer__elements__element\">\r\n                    <div className=\"addmeasurements__container__oldmeasurementscontainer__elements__element-name\">Lewy biceps</div>\r\n                    <div className=\"addmeasurements__container__oldmeasurementscontainer__elements__element-result\">{olddata.left_biceps} cm</div>\r\n                    </div>\r\n                    <div className=\"addmeasurements__container__oldmeasurementscontainer__elements__element\">\r\n                    <div className=\"addmeasurements__container__oldmeasurementscontainer__elements__element-name\">Prawe przedramię</div>\r\n                    <div className=\"addmeasurements__container__oldmeasurementscontainer__elements__element-result\">{olddata.right_forearm} cm</div>\r\n                    </div>\r\n                    <div className=\"addmeasurements__container__oldmeasurementscontainer__elements__element\">\r\n                    <div className=\"addmeasurements__container__oldmeasurementscontainer__elements__element-name\">Lewe przedramię</div>\r\n                    <div className=\"addmeasurements__container__oldmeasurementscontainer__elements__element-result\">{olddata.left_forearm} cm</div>\r\n                    </div>\r\n                    <div className=\"addmeasurements__container__oldmeasurementscontainer__elements__element\">\r\n                    <div className=\"addmeasurements__container__oldmeasurementscontainer__elements__element-name\">Prawe udo</div>\r\n                    <div className=\"addmeasurements__container__oldmeasurementscontainer__elements__element-result\">{olddata.right_leg} cm</div>\r\n                    </div>\r\n                    <div className=\"addmeasurements__container__oldmeasurementscontainer__elements__element\">\r\n                    <div className=\"addmeasurements__container__oldmeasurementscontainer__elements__element-name\">Lewe udo</div>\r\n                    <div className=\"addmeasurements__container__oldmeasurementscontainer__elements__element-result\">{olddata.left_leg} cm</div>\r\n                    </div>\r\n                </div>\r\n            </div>}\r\n            <div className=\"addmeasurements__container__newmeasurementscontainer\">\r\n            <div className=\"addmeasurements__container__newmeasurementscontainer-title\">Aktualny pomiar</div>\r\n                <div className=\"addmeasurements__container__newmeasurementscontainer__data\">\r\n                    <div className=\"addmeasurements__container__newmeasurementscontainer__data-input\">\r\n                    <DatePicker ref={inputdate} locale='pl' dateFormat='dd/MM/yyyy' selected={actualDate} onChange={date => setActualDate(date)} /></div>\r\n                    </div>\r\n                <div className=\"addmeasurements__container__newmeasurementscontainer__elements\">\r\n                <div className=\"addmeasurements__container__newmeasurementscontainer__elements__element\">\r\n                    <div className=\"addmeasurements__container__newmeasurementscontainer__elements__element-name\">Waga</div>\r\n                    <div className=\"addmeasurements__container__newmeasurementscontainer__elements__element-result\"><input onChange={(e)=>{setWeight(parseInt(e.target.value))}} type=\"number\" min=\"0\" max=\"100\" placeholder=\"Dodaj wagę\"/></div>\r\n                </div>\r\n                <div className=\"addmeasurements__container__newmeasurementscontainer__elements__element\">\r\n                    <div className=\"addmeasurements__container__newmeasurementscontainer__elements__element-name\">Wzrost</div>\r\n                    <div className=\"addmeasurements__container__newmeasurementscontainer__elements__element-result\"><input onChange={(e)=>{setGrowth(parseInt(e.target.value))}} type=\"number\" min=\"0\" max=\"300\" placeholder=\"Dodaj wzrost\"/></div>\r\n                </div>\r\n                <div className=\"addmeasurements__container__newmeasurementscontainer__elements__element\">\r\n                    <div className=\"addmeasurements__container__newmeasurementscontainer__elements__element-name\">Prawy biceps</div>\r\n                    <div className=\"addmeasurements__container__newmeasurementscontainer__elements__element-result\"><input onChange={(e)=>{setRightBiceps(parseInt(e.target.value))}} type=\"number\" min=\"0\" max=\"100\"placeholder=\"Prawy biceps\"/></div>\r\n                    </div>\r\n                <div className=\"addmeasurements__container__newmeasurementscontainer__elements__element\">\r\n                    <div className=\"addmeasurements__container__newmeasurementscontainer__elements__element-name\">Lewy biceps</div>\r\n                    <div className=\"addmeasurements__container__newmeasurementscontainer__elements__element-result\"><input onChange={(e)=>{setLeftBiceps(parseInt(e.target.value))}} type=\"number\" min=\"0\" max=\"100\"placeholder=\"Lewy biceps\"/></div>\r\n                </div>\r\n                <div className=\"addmeasurements__container__newmeasurementscontainer__elements__element\">\r\n                    <div className=\"addmeasurements__container__newmeasurementscontainer__elements__element-name\">Prawe przedramię</div>\r\n                    <div className=\"addmeasurements__container__newmeasurementscontainer__elements__element-result\"><input onChange={(e)=>{setRightForearm(parseInt(e.target.value))}} type=\"number\" min=\"0\" max=\"100\"placeholder=\"Prawe przedramię\"/></div>\r\n                </div>\r\n                <div className=\"addmeasurements__container__newmeasurementscontainer__elements__element\">\r\n                    <div className=\"addmeasurements__container__newmeasurementscontainer__elements__element-name\">Lewe przedramię</div>\r\n                    <div className=\"addmeasurements__container__newmeasurementscontainer__elements__element-result\"><input onChange={(e)=>{setLeftForearm(parseInt(e.target.value))}} type=\"number\" min=\"0\" max=\"100\" placeholder=\"Lewe przedramię\"/></div>\r\n                </div>\r\n                <div className=\"addmeasurements__container__newmeasurementscontainer__elements__element\">\r\n                    <div className=\"addmeasurements__container__newmeasurementscontainer__elements__element-name\">Prawe udo</div>\r\n                    <div className=\"addmeasurements__container__newmeasurementscontainer__elements__element-result\"><input onChange={(e)=>{setRightLeg(parseInt(e.target.value))}} type=\"number\" min=\"0\" max=\"100\"placeholder=\"Prawe udo\"/></div>\r\n                </div>\r\n                <div className=\"addmeasurements__container__newmeasurementscontainer__elements__element\">\r\n                    <div className=\"addmeasurements__container__newmeasurementscontainer__elements__element-name\">Lewe udo</div>\r\n                    <div className=\"addmeasurements__container__newmeasurementscontainer__elements__element-result\"><input onChange={(e)=>{setLeftLeg(parseInt(e.target.value))}} type=\"number\" min=\"0\" max=\"100\" placeholder=\"Lewe udo\"/></div>\r\n                </div>\r\n                <div className=\"addmeasurements__container__newmeasurementscontainer__elements__element\">\r\n                    <div className=\"addmeasurements__container__newmeasurementscontainer__elements__element-button\"><button onClick={handlePostMeasurement}>Zaakceptuj zmiany</button></div>\r\n                </div>\r\n                </div>\r\n                </div>\r\n            </div></>}\r\n</div>\r\n    );\r\n};\r\nconst mapStateToProps = (state) => {\r\n    return{\r\n        measurements: state.training.measurements.data\r\n    }\r\n}\r\nexport default connect(mapStateToProps,{postMeasurement,getMeasurements})(AddMeasurements);  \r\n","/home/saxatachi/TrueEffects/trueeffectsbackend/trueeffectsfrontend/src/components/DisplayMeasurements.js",["177"],"import React,{useState,useEffect} from 'react';\r\nimport '../sass/displaymeasurements.scss';\r\nimport {connect} from 'react-redux';\r\nimport DisplayMeasurementsItem from './DisplayMeasurementsItem';\r\nconst DisplayMeasurements = (props) => { \r\n    const [measurements,setMeasurements] = useState(props.measurements)\r\n    useEffect(()=>{\r\n        setMeasurements(()=>{\r\n            let meas\r\n            if(props.measurements.length>8){\r\n                meas = props.measurements.slice(8)\r\n                meas.slice(0).reverse()\r\n                return meas  \r\n            }else{\r\n                meas = props.measurements.slice(0).reverse()}\r\n                return meas\r\n            })\r\n    },[])\r\n    useEffect(()=>{\r\n        setMeasurements(()=>{\r\n            let meas\r\n            if(props.measurements.length>8){\r\n                meas = props.measurements.slice(8)\r\n                meas.slice(0).reverse()\r\n                return meas  \r\n            }else{\r\n                meas = props.measurements.slice(0).reverse()}\r\n                return meas\r\n            })\r\n    },[props.measurements])\r\n    return (\r\n        <div className=\"displaymeasurements\">\r\n            <div className=\"displaymeasurements-title\">Twoje ostatnie 9 pomiarów</div>\r\n            <div className=\"displaymeasurements__containers\">\r\n                {measurements.map((measurement)=><DisplayMeasurementsItem measurement={measurement}/>)}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return{\r\n        trainings: state.training.trainings.data,\r\n        loadedtrainings: state.training.loadedtrainings,\r\n        measurements: state.training.measurements.data,\r\n        goals: state.training.goals.data\r\n    }\r\n}\r\nexport default connect(mapStateToProps)(DisplayMeasurements); \r\n","/home/saxatachi/TrueEffects/trueeffectsbackend/trueeffectsfrontend/src/components/CreateTraining.js",["178"],"import React,{useState,useRef} from 'react';\r\nimport '../sass/createtraining.scss';\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\r\nimport {faArrowRight} from '@fortawesome/fontawesome-free-solid';\r\nimport DatePicker,{registerLocale} from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport {connect} from 'react-redux';\r\nimport pl from \"date-fns/locale/pl\";\r\nimport { postTraining,postOwnExercise,getTrainings,getExercises } from '../redux/actions/trainingActions';\r\nimport { useHistory } from \"react-router-dom\";\r\nconst CreateTraining = (props) => {\r\n    const history = useHistory()\r\n    registerLocale('pl',pl)\r\n    const [startDate, setStartDate] = useState(new Date())\r\n    const [ownexerciseActive,setOwnExerciseActive] = useState(false)\r\n    const [activediv , setActivediv] = useState(null)\r\n    const [ownexercise,setOwnExercise] = useState({id: '', name:''})\r\n    const [exercise,setExercise] = useState({id: '', name:''})\r\n    const [series,setSeries] = useState(1)\r\n    const [assumedreps,setAssumedReps] = useState(1)\r\n    const [rest,setRest] = useState(60)\r\n    const [weight,setWeight] = useState(0)\r\n    const [concentricphase,setConcentricPhase] = useState(0)\r\n    const [pauseconcentricphase,setPauseConcentricPhase] = useState(0)\r\n    const [eccentricphase,setEccentricPhase] = useState(0)\r\n    const [pauseeccentricphase,setPauseEccentricPhase] = useState(0)\r\n    const [itemsplaceholders,setItemsPlaceHolders] = useState([])\r\n    const [items,setItems] = useState([])\r\n    const [seriesitems,setSeriesItems] = useState([])\r\n    const name_of_training = useRef(null);\r\n    const training_description = useRef(null);\r\n    const training_date = useRef(null);\r\n    const inputOwnExercise = useRef(null);\r\n    const handlemovetoschedulepage = () =>{\r\n        history.push('/schedule/')\r\n    }\r\n    const addElementtoItems = () =>{\r\n        setItems(prevItems => [...prevItems, {\r\n            exercise : {exercise},\r\n            ownexercise: {ownexercise},\r\n            series: {series},\r\n            assumedreps: {assumedreps},\r\n            rest: {rest},\r\n            weight: {weight},\r\n            concentricphase:{concentricphase},\r\n            pauseconcentricphase:{pauseconcentricphase},\r\n            eccentricphase:{eccentricphase},\r\n            pauseeccentricphase:{pauseeccentricphase}\r\n          }]);\r\n    }\r\n    const addElementstoMainItems = () => {\r\n        setSeriesItems(prevItems => [...prevItems, {\r\n            exercise : {exercise},\r\n            ownexercise: {ownexercise},\r\n            series: {series},\r\n            assumedreps: {assumedreps},\r\n            rest: {rest},\r\n            weight: {weight},\r\n            concentricphase:{concentricphase},\r\n            pauseconcentricphase:{pauseconcentricphase},\r\n            eccentricphase:{eccentricphase},\r\n            pauseeccentricphase:{pauseeccentricphase}\r\n          }]);\r\n    }\r\n    const clearState = () =>{\r\n        // Domyślne dane\r\n        setSeries(1)\r\n        // setAssumedReps(1)\r\n        // setRest(60)\r\n        // setWeight(0)\r\n        // setConcentricPhase(0)\r\n        // setPauseConcentricPhase(0)\r\n        // setEccentricPhase(0)\r\n        // setPauseEccentricPhase(0)\r\n    }\r\n\r\n    const handleNewOwnExercise = async() => {\r\n        await props.postOwnExercise(inputOwnExercise.current.value)\r\n        await props.getExercises()\r\n        \r\n    }\r\n    const handleClickExercise = (e,element) =>{\r\n        if(activediv !== null){\r\n            activediv.style.background = \"#457B9D\"\r\n        }\r\n        setActivediv(e.target)\r\n        console.log(ownexerciseActive)\r\n        if (ownexerciseActive == false){\r\n        setExercise({id:element.id})\r\n        setExercise({name:element.name})\r\n        e.target.style.background = '#db3d44'}\r\n        else{\r\n            setOwnExercise({id:element.id})\r\n            setOwnExercise({name:element.name})\r\n            e.target.style.background = '#db3d44'\r\n        }\r\n    }\r\n    const handleClickSelect = (e) =>{\r\n        if (activediv !== null){\r\n        addElementstoMainItems()\r\n        for(let i=0;i<series;i++){\r\n            setItemsPlaceHolders(oldArray => [...oldArray, assumedreps])\r\n            addElementtoItems()\r\n        }\r\n        activediv.style.background = \"#457B9D\"\r\n        setActivediv(null)\r\n        clearState()\r\n        }else{\r\n            alert(\"Aby kontynuować musisz wybrać ćwiczenie\")\r\n        }\r\n    }\r\n    const changeOwnexercisetoExercise = () => {\r\n        setExercise({id:'',name:''})\r\n        setOwnExercise({id:'',name:''})\r\n        setOwnExerciseActive(false)\r\n    }\r\n    const changeExercisetoOwnexercise = () => {\r\n        setExercise({id:'',name:''})\r\n        setOwnExercise({id:'',name:''})\r\n        setOwnExerciseActive(true)\r\n    }\r\n    const handleChangeinTrainingItems = (e,element) =>{\r\n        let temp = [...itemsplaceholders];\r\n        temp[element.id] = e.target.value\r\n        setItemsPlaceHolders(temp)\r\n    }\r\n    const handleAcceptTraining = () => {\r\n        async function fetchData(data){\r\n            await props.postTraining(data)\r\n            await props.getTrainings()\r\n            await handlemovetoschedulepage()\r\n        }\r\n        if (name_of_training.current.value === \"\"){\r\n            alert(\"Wprowadź nazwę treningu\")\r\n        }else{\r\n            if(training_description.current.value === \"\"){\r\n                training_description.current.value = name_of_training.current.value\r\n            }\r\n            let splitdate = training_date.current.input.value.split(\"/\")\r\n            let fullday = splitdate[2] + \"-\" + splitdate[1] + \"-\" +  splitdate[0]\r\n            let array = {\r\n                name: name_of_training.current.value,\r\n                description: training_description.current.value,\r\n                date: fullday,\r\n                training: []\r\n            }\r\n            let allobjects = []\r\n            let temparray = [...itemsplaceholders]\r\n            for(let i=0;i<seriesitems.length;i++){\r\n                let objects = {reps: []}\r\n                if(seriesitems[i].exercise.exercise.name !== \"\"){\r\n                    objects[\"exercise\"] = {\"name\" : seriesitems[i].exercise.exercise.name}\r\n                }else{\r\n                    objects[\"ownexercise\"] = {\"name\" : seriesitems[i].ownexercise.ownexercise.name,\"user\":1}\r\n                }\r\n                objects[\"pause_after_concentric_phase\"]=seriesitems[i].pauseconcentricphase.pauseconcentricphase\r\n                objects[\"pause_after_eccentric_phase\"]=seriesitems[i].pauseeccentricphase.pauseeccentricphase\r\n                objects[\"weight\"] = seriesitems[i].weight.weight\r\n                objects[\"series\"] = seriesitems[i].series.series\r\n                objects[\"rest\"] = seriesitems[i].rest.rest\r\n                let secondtemparray = []\r\n                for(let k=0; k<seriesitems[i].series.series;k++){\r\n                    let temp = temparray.shift();\r\n                    secondtemparray.push(temp)\r\n                    objects['reps'] = secondtemparray  \r\n                }\r\n                array[\"training\"].push(objects)\r\n                allobjects.push(objects)\r\n            }\r\n            console.log(array)\r\n            fetchData(array)\r\n        // props.postTraining(array)\r\n    }\r\n}\r\n    return (\r\n        <div className=\"createtraining\">\r\n            <div className=\"createtraining-title\">Kreator treningu</div>\r\n            <div className=\"createtraining__containers\">\r\n                <div className=\"createtraining__containers__first\">\r\n                    <div className=\"createtraining__containers__first__selectors\">\r\n                        <div className=\"createtraining__containers__first__selectors-globalexercise\" style={{color: ownexerciseActive ? 'white' : '#db3d44' }} onClick={changeOwnexercisetoExercise}>Ćwiczenia</div>\r\n                        <div className=\"createtraining__containers__first__selectors-myexercise\" style={{color: ownexerciseActive ? '#db3d44' : 'white' }} onClick={changeExercisetoOwnexercise}>Moje Ćwiczenia</div>\r\n                    </div>\r\n                    <div className=\"createtraining__containers__first__newexercise\" style={{display: ownexerciseActive ? 'flex' : 'none' }}>\r\n                        <div className=\"createtraining__containers__first__newexercise-title\">Wprowadź nazwę ćwiczenia lub wyszukaj</div>\r\n                        <span>\r\n                            <input ref={inputOwnExercise} placeholder=\"Wprowadź swoje ćwiczenie\" />\r\n                        </span>\r\n                        <div className=\"createtraining__containers__first__newexercise-button\">\r\n                            <button onClick={handleNewOwnExercise}>Dodaj</button>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className='createtraining__containers__first-input'>Wyszukaj ćwiczenie</div>\r\n                    <div className=\"createtraining__containers__first__exercises\">\r\n                        {ownexerciseActive ? props.ownexercises.map((element)=><div className=\"createtraining__containers__first__exercises__element \"onClick={(e)=>handleClickExercise(e,element)}>{element.name}</div>) : props.exercises.map((element)=><div className=\"createtraining__containers__first__exercises__element \"onClick={(e)=>handleClickExercise(e,element)}>{element.name}</div>)}\r\n                    </div>\r\n                    <div className=\"createtraining__containers__first__trainingdata\">\r\n                        <div className=\"createtraining__containers__first__trainingdata__series\">Podaj liczbę serii danego ćwiczenia *<span><input placeholder={series} value={series} onChange={(e)=>setSeries(parseInt(e.target.value))}/></span></div>\r\n                        <div className=\"createtraining__containers__first__trainingdata__singleseries\">Podaj liczbę powtórzeń danego ćwiczenia *<span><input placeholder={assumedreps} onChange={(e)=>setAssumedReps(parseInt(e.target.value))} /></span></div>\r\n                        <div className=\"createtraining__containers__first__trainingdata__rest\">Podaj czas odpoczynku w (s) *<span><input placeholder={rest} onChange={(e)=>setRest(parseInt(e.target.value))}/></span></div>\r\n                        <div className=\"createtraining__containers__first__trainingdata__weight\">Podaj ciężar w kg(domyślnie 0) <span><input placeholder={weight} onChange={(e)=>setWeight(parseInt(e.target.value))}/></span></div>\r\n                        <div className=\"createtraining__containers__first__trainingdata__concentricphase\">Czas fazy koncentrycznej <span><input placeholder={concentricphase} onChange={(e)=>setConcentricPhase(parseInt(e.target.value))}/></span></div>\r\n                        <div className=\"createtraining__containers__first__trainingdata__pauseafterconcentricphase\">Czas pauzy po fazie koncentrycznej <span><input placeholder={pauseconcentricphase} onChange={(e)=>setPauseConcentricPhase(parseInt(e.target.value))}/></span></div>\r\n                        <div className=\"createtraining__containers__first__trainingdata__eccentricphase\">Czas fazy ekscentrycznej <span><input placeholder={eccentricphase} onChange={(e)=>setEccentricPhase(parseInt(e.target.value))}/></span></div>\r\n                        <div className=\"createtraining__containers__first__trainingdata__pauseaftereccentricphase\">Czas pauzy po fazie ekscentrycznej <span><input placeholder={pauseeccentricphase} onChange={(e)=>setPauseEccentricPhase(parseInt(e.target.value))}/></span></div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"createtraining__containers__second\">\r\n                    <div className=\"createtraining__containers__second-select\" onClick={handleClickSelect}>Wybierz <span> <FontAwesomeIcon icon={faArrowRight} /></span></div>\r\n                    <div className=\"createtraining__containers__second-accepttraining\" onClick={handleAcceptTraining}>Zaakceptuj trening</div>\r\n\r\n                </div>\r\n                <div className=\"createtraining__containers__third\">\r\n                    <div className=\"createtraining__containers__third-title\"><span><input ref={name_of_training} placeholder=\"Nazwa treningu\"/></span></div>\r\n                    <div className=\"createtraining__containers__third-date\"><span>\r\n                    <DatePicker ref={training_date} locale='pl' dateFormat='dd/MM/yyyy' selected={startDate} onChange={date => setStartDate(date)} />\r\n                        </span></div>\r\n                    <div className=\"createtraining__containers__third-description\"><span><input ref={training_description} placeholder=\"Opis\"/></span></div>\r\n                    <div className=\"createtraining__containers__third__elements\">\r\n                        <div className=\"createtraining__containers__third__elements-title\">\r\n                            Ćwiczenia\r\n                        </div>\r\n                        <div className=\"createtraining__containers__third__elements__element\">\r\n                            <table id=\"exercisetable\">\r\n                                <tr>\r\n                                    <th>Ćwiczenie</th>\r\n                                    <th>Powtórzenia</th>\r\n                                    \r\n                                </tr>\r\n                                {items.length > 0 ? items.map((item,id)=>{\r\n                                    return(\r\n                                    <tr>\r\n                                        {item.exercise.exercise.name === \"\" ?<td>{item.ownexercise.ownexercise.name}</td> : <td>{item.exercise.exercise.name}</td> }\r\n                                        <td ><span><input  placeholder={itemsplaceholders[id]} onChange={(e)=>handleChangeinTrainingItems(e,{id})}/></span></td> \r\n                                    </tr>)\r\n                                })\r\n                                :<tr>\r\n                                    </tr>}\r\n                            </table>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\nconst mapStateToProps = (state) => {\r\n    return{\r\n        trainings: state.training.trainings.data,\r\n        loadedtrainings: state.training.loadedtrainings,\r\n        measurements: state.training.measurements.data,\r\n        goals: state.training.goals.data,\r\n        exercises: state.training.exercises.data,\r\n        ownexercises: state.training.ownexercises\r\n    }\r\n}\r\nexport default connect(mapStateToProps,{postTraining,postOwnExercise,getTrainings,getExercises})(CreateTraining); ","/home/saxatachi/TrueEffects/trueeffectsbackend/trueeffectsfrontend/src/redux/actions/authenticationActions.js",[],"/home/saxatachi/TrueEffects/trueeffectsbackend/trueeffectsfrontend/src/redux/actions/trainingActions.js",["179","180","181"],"/home/saxatachi/TrueEffects/trueeffectsbackend/trueeffectsfrontend/src/redux/reducers/index.js",[],"/home/saxatachi/TrueEffects/trueeffectsbackend/trueeffectsfrontend/src/components/AuthenticateLogo.js",[],"/home/saxatachi/TrueEffects/trueeffectsbackend/trueeffectsfrontend/src/components/MyStopwatch.js",["182"],"import React,{forwardRef,useImperativeHandle,useRef}from 'react';\r\nimport { useStopwatch } from 'react-timer-hook';\r\nconst MyStopwatch = forwardRef((props, ref) => {\r\n  const reference = useRef()\r\n  const {\r\n    seconds,\r\n    minutes,\r\n    hours,\r\n    start,\r\n    pause,\r\n    reset,\r\n  } = useStopwatch({ autoStart: false });\r\n  const handleStart = () =>{\r\n      start()\r\n  }\r\n  useImperativeHandle(ref, () => ({\r\n    getAlert() {\r\n      alert(`Zakonczono trenining w czasie ${hours<10 ? 0: \"\"}${hours}:${minutes<10 ? 0: \"\"}${minutes}:${seconds<10 ? 0: \"\"}${seconds}`);\r\n    },\r\n    handleStop(){\r\n      pause()\r\n  },\r\n    async posttrain (){\r\n      console.log(props.id)\r\n      let string = \"\"\r\n      if (hours<10){\r\n        string += \"0\" + hours\r\n        string += \":\"\r\n      }\r\n      else{\r\n        string += hours\r\n        string += \":\"\r\n      }\r\n      if (minutes<10){\r\n        string += \"0\" + minutes\r\n        string += \":\"\r\n      }\r\n      else{\r\n        string += minutes\r\n        string += \":\"\r\n      }\r\n      if (seconds<10){\r\n        string += \"0\" + seconds\r\n        \r\n      }\r\n      else{\r\n        string += seconds\r\n        \r\n      }\r\n      props.training.time = string\r\n      await props.send(props.id,props.training)\r\n      await props.get()\r\n    }\r\n    \r\n  }));\r\n\r\n\r\n  \r\n  return (\r\n    <div style={{textAlign: 'center'}}>\r\n      <div style={{fontSize: '100px'}}>\r\n        <span >{hours<10 && 0}{hours}</span>:<span ref={props.refminutes}>{minutes<10 && 0}{minutes}</span>:<span ref={props.refseconds}>{seconds<10 && 0}{seconds}</span>\r\n      </div>\r\n      <div className=\"stopwatchbuttons\">\r\n        <button ref={ref} id=\"start\" onClick={handleStart}>Start</button>\r\n        <button id=\"pause\" onClick={pause}>Pause</button>\r\n        <button id=\"reset\"onClick={reset}>Reset</button>\r\n      </div>\r\n    </div>\r\n  );\r\n})\r\nexport default MyStopwatch; \r\n","/home/saxatachi/TrueEffects/trueeffectsbackend/trueeffectsfrontend/src/components/ModalDisplayTraining.js",["183","184"],"import React,{useState,useRef} from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport {faTimes} from '@fortawesome/fontawesome-free-solid';\r\nimport ModalDisplayTrainingItem from './modaldisplaytraining/ModalDisplayTrainingItem';\r\nimport {connect} from 'react-redux';\r\nimport '../sass/modaldisplaytraining.scss';\r\nimport DatePicker from \"react-datepicker\";\r\nimport {deleteTraining,getTrainings,updateDateTraining} from '../redux/actions/trainingActions';\r\nconst MODAL_STYLES = {\r\n    position: 'fixed',\r\n    top: '50%',\r\n    left: '50%',\r\n    transform: 'translate(-50%,-50%)',\r\n    backgroundColor: '#457B9D',\r\n    padding: '50px',\r\n    zIndex: 10\r\n}\r\nconst OVERLAY_STYLES = {\r\n    position:'fixed',\r\n    top:0,\r\n    left:0,\r\n    right:0,\r\n    bottom:0,\r\n    backgroundColor: 'rgba(0,0,0,.7)',\r\n    zIndex:10,\r\n    color: 'rgba(0,0,0)',\r\n}\r\n\r\nconst ModalDisplayTraining = props => {\r\n    const [newday,setNewDay] = useState(false)\r\n    const [summary,setSummary] = useState(false)\r\n    const [selectDate,setSelectDate] = useState(new Date())\r\n    const training_date = useRef(null);\r\n    const handleMovetoTraining = () =>{\r\n        props.allprops.history.push({pathname:'/training',training:props.alldata});\r\n    }\r\n    \r\n    const handleDeleteTraining = async() => {\r\n        await props.deleteTraining(props.alldata.id)\r\n        await props.getTrainings()\r\n        await props.back()\r\n    }\r\n    const handleAddtoDate = async() => {\r\n        console.log(\"addToDate\")\r\n        let splitdate = training_date.current.input.value.split(\"/\")\r\n        let fullday = splitdate[2] + \"-\" + splitdate[1] + \"-\" +  splitdate[0]\r\n        let date = {'date': fullday}\r\n        await props.updateDateTraining(props.alldata.id,date)\r\n        await props.getTrainings()\r\n    }\r\n    \r\n    return ReactDOM.createPortal(\r\n        <div className=\"modaldisplaytraining\" style={OVERLAY_STYLES}>\r\n            <div className=\"modaldisplaytraining__data\" style={MODAL_STYLES}>\r\n            <div className=\"modaldisplaytraining__data-close\" ><span><FontAwesomeIcon onClick={()=>props.back()} icon={faTimes}/></span></div>\r\n            <div className=\"modaldisplaytraining__data-title\">{props.title}</div>\r\n            <div className=\"modaldisplaytraining__data__datetime\">\r\n                <div className=\"modaldisplaytraining__data__datetime-time\">Czas trwania treningu : {props.time}</div>\r\n                <div className=\"modaldisplaytraining__data__datetime-date\">{props.date}</div>\r\n            </div>\r\n            <div className=\"modaldisplaytraining__data-completed\"></div>\r\n            <div className=\"modaldisplaytraining__data-description\">{props.description}</div>\r\n            \r\n            <div className=\"modaldisplaytraining__data__buttons\">\r\n            {/* <div className=\"modaldisplaytraining__data__buttons-button\">\r\n                <button onClick={handleSummaryTraining}>Podsumowanie treningu</button>\r\n            </div> */}\r\n            \r\n            <div className=\"modaldisplaytraining__data__buttons-button\">\r\n                <button onClick={handleDeleteTraining}>Usuń trening</button>\r\n            </div>\r\n            <div className=\"modaldisplaytraining__data__buttons-button\">\r\n                <button onClick={handleMovetoTraining}>Powtórz trening</button>\r\n            </div>\r\n            <div className=\"modaldisplaytraining__data__buttons-button\" onClick={()=>setNewDay(!newday)} >\r\n                <button>{newday ? \"Schowaj formularz \" : \"Dodaj trening do innego dnia\"}</button>\r\n            </div>\r\n            </div>\r\n            <div className=\"modaldisplaytraining__data__input\" style={{display: newday ? 'flex' : 'none' }}>\r\n                <span>\r\n                    <DatePicker ref={training_date} locale='pl' dateFormat='dd/MM/yyyy' selected={selectDate} onChange={date => setSelectDate(date)} />\r\n                </span>\r\n                <div className=\"modaldisplaytraining__data__input-button\">\r\n                    <button onClick={handleAddtoDate}>Dodaj trening do podanego dnia</button>\r\n                </div>\r\n            </div>\r\n            <div className=\"modaldisplaytraining__data__elements\">\r\n                <table id=\"training\">\r\n                <tr>\r\n                    <th>Nazwa Ćwiczenia</th>\r\n                    <th>Liczba Serii</th>\r\n                    <th>Liczba Powtórzeń</th>\r\n                    <th>Przerwa między seriami</th>\r\n                    <th>Ciężar</th>\r\n                    <th>Fazy</th>\r\n                </tr>\r\n                    {props.training.map((training)=> <ModalDisplayTrainingItem training={training} />)}\r\n                </table>\r\n            </div>\r\n        </div>\r\n        </div>,\r\n        document.getElementById('root')\r\n    );\r\n};\r\nconst mapStateToProps = (state) => {\r\n    return{\r\n        token : state.authentication.token,\r\n        loadedtrainings: state.training.loadedtrainings,\r\n        loadedmeasurements: state.training.loadedmeasurements,\r\n        loadedgoals: state.training.loadedgoals,\r\n        loadedexercises: state.training.loadedexercises\r\n    }\r\n  }\r\n\r\nconst mapDispatchToProps = () =>dispatch => {\r\n    return {\r\n      deleteTraining: (x) =>dispatch(deleteTraining(x)),\r\n      getTrainings: () =>dispatch(getTrainings()),\r\n      updateDateTraining: (x,y) =>dispatch(updateDateTraining(x,y))\r\n    };\r\n  };\r\nexport default connect(mapStateToProps,mapDispatchToProps)(ModalDisplayTraining);\r\n","/home/saxatachi/TrueEffects/trueeffectsbackend/trueeffectsfrontend/src/components/homepagecomponents/HomepageGoalItem.js",["185","186"],"import React from 'react';\r\nimport Moment from 'react-moment';\r\nimport 'moment/locale/pl';\r\nimport moment from 'moment';\r\nimport {connect} from 'react-redux';\r\nimport {deleteGoals,getGoals} from '../../redux/actions/trainingActions'\r\nmoment().locale('pl')\r\nconst HomepageGoalItem = (props) => {\r\n    const handleDelete = async() =>{\r\n        await props.deleteGoals(props.goal.id)\r\n        await props.getGoals()\r\n    }\r\n    let firstdate = props.goal\r\n    let currentTime = new Date();\r\n    let dd = currentTime.getDate();\r\n    let mm = currentTime.getMonth()+1;\r\n    let yyyy = currentTime.getFullYear();\r\n    \r\n    if(dd<10) \r\n{\r\n    dd=`0${dd}`;\r\n} \r\nif(mm<10) \r\n{\r\n    mm=`0${mm}`;\r\n} \r\nlet today = `${yyyy}-${mm}-${dd}`;\r\n    let start = new Date(firstdate)\r\n    return (\r\n        <div className=\"homepage__goalscontainer__elements__element\">\r\n        <div className=\"homepage__goalscontainer__elements__element-name\">{props.goal.description}<button onClick={handleDelete}>Usuń cel</button></div>\r\n        <div className=\"homepage__goalscontainer__elements__element__time\">\r\n            <div className=\"homepage__goalscontainer__elements__element__time-description\">Pozostały czas upłynie</div>\r\n            <div className=\"homepage__goalscontainer__elements__element__time-number\">\r\n                <Moment locale='pl' fromNow>{props.goal.date}</Moment>\r\n                </div>\r\n            <div className=\"homepage__goalscontainer__elements__element__time-data\">{props.goal.date}</div>\r\n        </div>\r\n    </div>\r\n    );\r\n};\r\nconst mapDispatchToProps = () =>dispatch => {\r\n    return {\r\n      deleteGoals: (x) =>dispatch(deleteGoals(x)),\r\n      getGoals: ()=> dispatch(getGoals())\r\n    };\r\n  };\r\nexport default connect(null,mapDispatchToProps)(HomepageGoalItem);","/home/saxatachi/TrueEffects/trueeffectsbackend/trueeffectsfrontend/src/components/homepagecomponents/HomepageTrainingItem.js",["187"],"import React from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nconst HomepageTrainingItem = (props) => {\r\n    const movetoTraining =(training)=>{\r\n        props.allprops.history.push({pathname: '/training',training:training});\r\n    }\r\n    return (    \r\n        <div className=\"homepage__lasttrainingscontainer__container__element\">\r\n        <div className=\"homepage__lasttrainingscontainer__container__element__top\">\r\n            <div className=\"homepage__lasttrainingscontainer__container__element__top-title\">{props.training.name}</div>\r\n            <div className=\"homepage__lasttrainingscontainer__container__element__top-databutton\">\r\n            <div className=\"homepage__lasttrainingscontainer__container__element__top-data\">{props.training.date}</div>\r\n            <div className=\"homepage__lasttrainingscontainer__container__element__top-button\"><button onClick={()=>movetoTraining(props.training)}>Powtórz trening</button></div>\r\n        </div>\r\n        </div>\r\n        <div className=\"homepage__lasttrainingscontainer__container__element__bottom\">\r\n            {props.training.name}\r\n        </div>\r\n        </div>      \r\n    );\r\n};\r\nexport default HomepageTrainingItem;","/home/saxatachi/TrueEffects/trueeffectsbackend/trueeffectsfrontend/src/components/homepagecomponents/HomepageMeasurementItem.js",[],"/home/saxatachi/TrueEffects/trueeffectsbackend/trueeffectsfrontend/src/redux/actions/types.js",[],"/home/saxatachi/TrueEffects/trueeffectsbackend/trueeffectsfrontend/src/components/DisplayMeasurementsItem.js",[],"/home/saxatachi/TrueEffects/trueeffectsbackend/trueeffectsfrontend/src/components/Logo.js",[],"/home/saxatachi/TrueEffects/trueeffectsbackend/trueeffectsfrontend/src/redux/reducers/authenticationReducer.js",[],"/home/saxatachi/TrueEffects/trueeffectsbackend/trueeffectsfrontend/src/redux/reducers/trainingReducer.js",[],"/home/saxatachi/TrueEffects/trueeffectsbackend/trueeffectsfrontend/src/components/modaldisplaytraining/ModalDisplayTrainingItem.js",[],{"ruleId":"188","replacedBy":"189"},{"ruleId":"190","replacedBy":"191"},{"ruleId":"192","severity":1,"message":"193","line":1,"column":10,"nodeType":"194","messageId":"195","endLine":1,"endColumn":23},{"ruleId":"192","severity":1,"message":"196","line":1,"column":31,"nodeType":"194","messageId":"195","endLine":1,"endColumn":39},{"ruleId":"197","severity":1,"message":"198","line":33,"column":5,"nodeType":"199","endLine":33,"endColumn":7,"suggestions":"200"},{"ruleId":"197","severity":1,"message":"201","line":39,"column":5,"nodeType":"199","endLine":39,"endColumn":18,"suggestions":"202"},{"ruleId":"192","severity":1,"message":"203","line":31,"column":9,"nodeType":"194","messageId":"195","endLine":31,"endColumn":16},{"ruleId":"192","severity":1,"message":"204","line":1,"column":31,"nodeType":"194","messageId":"195","endLine":1,"endColumn":40},{"ruleId":"192","severity":1,"message":"205","line":12,"column":7,"nodeType":"194","messageId":"195","endLine":12,"endColumn":16},{"ruleId":"192","severity":1,"message":"206","line":62,"column":12,"nodeType":"194","messageId":"195","endLine":62,"endColumn":19},{"ruleId":"192","severity":1,"message":"207","line":62,"column":20,"nodeType":"194","messageId":"195","endLine":62,"endColumn":30},{"ruleId":"192","severity":1,"message":"208","line":63,"column":12,"nodeType":"194","messageId":"195","endLine":63,"endColumn":19},{"ruleId":"192","severity":1,"message":"209","line":63,"column":20,"nodeType":"194","messageId":"195","endLine":63,"endColumn":30},{"ruleId":"192","severity":1,"message":"210","line":64,"column":12,"nodeType":"194","messageId":"195","endLine":64,"endColumn":17},{"ruleId":"192","severity":1,"message":"211","line":64,"column":18,"nodeType":"194","messageId":"195","endLine":64,"endColumn":26},{"ruleId":"192","severity":1,"message":"212","line":28,"column":12,"nodeType":"194","messageId":"195","endLine":28,"endColumn":25},{"ruleId":"192","severity":1,"message":"213","line":28,"column":26,"nodeType":"194","messageId":"195","endLine":28,"endColumn":42},{"ruleId":"192","severity":1,"message":"214","line":30,"column":12,"nodeType":"194","messageId":"195","endLine":30,"endColumn":25},{"ruleId":"192","severity":1,"message":"215","line":30,"column":26,"nodeType":"194","messageId":"195","endLine":30,"endColumn":42},{"ruleId":"192","severity":1,"message":"216","line":2,"column":8,"nodeType":"194","messageId":"195","endLine":2,"endColumn":17},{"ruleId":"192","severity":1,"message":"217","line":8,"column":25,"nodeType":"194","messageId":"195","endLine":8,"endColumn":37},{"ruleId":"192","severity":1,"message":"218","line":45,"column":24,"nodeType":"194","messageId":"195","endLine":45,"endColumn":32},{"ruleId":"219","severity":1,"message":"220","line":47,"column":35,"nodeType":"221","messageId":"222","endLine":47,"endColumn":37},{"ruleId":"192","severity":1,"message":"223","line":1,"column":15,"nodeType":"194","messageId":"195","endLine":1,"endColumn":24},{"ruleId":"192","severity":1,"message":"217","line":5,"column":25,"nodeType":"194","messageId":"195","endLine":5,"endColumn":37},{"ruleId":"192","severity":1,"message":"224","line":2,"column":20,"nodeType":"194","messageId":"195","endLine":2,"endColumn":34},{"ruleId":"192","severity":1,"message":"225","line":18,"column":20,"nodeType":"194","messageId":"195","endLine":18,"endColumn":30},{"ruleId":"192","severity":1,"message":"226","line":29,"column":12,"nodeType":"194","messageId":"195","endLine":29,"endColumn":21},{"ruleId":"192","severity":1,"message":"227","line":29,"column":23,"nodeType":"194","messageId":"195","endLine":29,"endColumn":35},{"ruleId":"192","severity":1,"message":"228","line":31,"column":11,"nodeType":"194","messageId":"195","endLine":31,"endColumn":21},{"ruleId":"192","severity":1,"message":"229","line":32,"column":13,"nodeType":"194","messageId":"195","endLine":32,"endColumn":17},{"ruleId":"197","severity":1,"message":"230","line":18,"column":7,"nodeType":"199","endLine":18,"endColumn":9,"suggestions":"231"},{"ruleId":"232","severity":1,"message":"233","line":88,"column":31,"nodeType":"234","messageId":"235","endLine":88,"endColumn":33},{"ruleId":"192","severity":1,"message":"236","line":1,"column":9,"nodeType":"194","messageId":"195","endLine":1,"endColumn":20},{"ruleId":"192","severity":1,"message":"237","line":1,"column":47,"nodeType":"194","messageId":"195","endLine":1,"endColumn":57},{"ruleId":"192","severity":1,"message":"238","line":1,"column":100,"nodeType":"194","messageId":"195","endLine":1,"endColumn":113},{"ruleId":"192","severity":1,"message":"239","line":4,"column":9,"nodeType":"194","messageId":"195","endLine":4,"endColumn":18},{"ruleId":"192","severity":1,"message":"240","line":32,"column":12,"nodeType":"194","messageId":"195","endLine":32,"endColumn":19},{"ruleId":"192","severity":1,"message":"241","line":32,"column":20,"nodeType":"194","messageId":"195","endLine":32,"endColumn":30},{"ruleId":"192","severity":1,"message":"242","line":27,"column":5,"nodeType":"194","messageId":"195","endLine":27,"endColumn":10},{"ruleId":"192","severity":1,"message":"243","line":28,"column":9,"nodeType":"194","messageId":"195","endLine":28,"endColumn":14},{"ruleId":"192","severity":1,"message":"196","line":2,"column":10,"nodeType":"194","messageId":"195","endLine":2,"endColumn":18},"no-native-reassign",["244"],"no-negated-in-lhs",["245"],"no-unused-vars","'BrowserRouter' is defined but never used.","Identifier","unusedVar","'Redirect' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.","ArrayExpression",["246"],"React Hook useEffect has a missing dependency: 'props.history'. Either include it or remove the dependency array.",["247"],"'history' is assigned a value but never used.","'createRef' is defined but never used.","'useStyles' is assigned a value but never used.","'seconds' is assigned a value but never used.","'setSeconds' is assigned a value but never used.","'minutes' is assigned a value but never used.","'setMinutes' is assigned a value but never used.","'hours' is assigned a value but never used.","'setHours' is assigned a value but never used.","'usernameerror' is assigned a value but never used.","'setUsernameError' is assigned a value but never used.","'passworderror' is assigned a value but never used.","'setPasswordError' is assigned a value but never used.","'Scheduler' is defined but never used.","'postTraining' is defined but never used.","'training' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'useEffect' is defined but never used.","'registerLocale' is defined but never used.","'setBodyFat' is assigned a value but never used.","'startDate' is assigned a value but never used.","'setStartDate' is assigned a value but never used.","'handleDate' is assigned a value but never used.","'date' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'props.measurements'. Either include it or remove the dependency array. If 'setMeasurements' needs the current value of 'props.measurements', you can also switch to useReducer instead of useState and read 'props.measurements' in the reducer.",["248"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'POST_LOGOUT' is defined but never used.","'AUTH_ERROR' is defined but never used.","'POST_TRAINING' is defined but never used.","'reference' is assigned a value but never used.","'summary' is assigned a value but never used.","'setSummary' is assigned a value but never used.","'today' is assigned a value but never used.","'start' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"249","fix":"250"},{"desc":"251","fix":"252"},{"desc":"253","fix":"254"},"Update the dependencies array to be: [props]",{"range":"255","text":"256"},"Update the dependencies array to be: [props.history, props.token]",{"range":"257","text":"258"},"Update the dependencies array to be: [props.measurements]",{"range":"259","text":"260"},[1258,1260],"[props]",[1365,1378],"[props.history, props.token]",[691,693],"[props.measurements]"]