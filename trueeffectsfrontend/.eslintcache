[{"/home/saxatachi/TrueEffects/trueeffectsbackend/trueeffectsfrontend/src/index.js":"1","/home/saxatachi/TrueEffects/trueeffectsbackend/trueeffectsfrontend/src/reportWebVitals.js":"2","/home/saxatachi/TrueEffects/trueeffectsbackend/trueeffectsfrontend/src/store.js":"3","/home/saxatachi/TrueEffects/trueeffectsbackend/trueeffectsfrontend/src/components/LoginContainer.js":"4","/home/saxatachi/TrueEffects/trueeffectsbackend/trueeffectsfrontend/src/components/DefaultContainer.js":"5","/home/saxatachi/TrueEffects/trueeffectsbackend/trueeffectsfrontend/src/components/Login.js":"6","/home/saxatachi/TrueEffects/trueeffectsbackend/trueeffectsfrontend/src/components/Navbar.js":"7","/home/saxatachi/TrueEffects/trueeffectsbackend/trueeffectsfrontend/src/components/Training.js":"8","/home/saxatachi/TrueEffects/trueeffectsbackend/trueeffectsfrontend/src/components/Register.js":"9","/home/saxatachi/TrueEffects/trueeffectsbackend/trueeffectsfrontend/src/components/Navbar2.js":"10","/home/saxatachi/TrueEffects/trueeffectsbackend/trueeffectsfrontend/src/components/Schedule.js":"11","/home/saxatachi/TrueEffects/trueeffectsbackend/trueeffectsfrontend/src/components/Homepage.js":"12","/home/saxatachi/TrueEffects/trueeffectsbackend/trueeffectsfrontend/src/components/AddGoals.js":"13","/home/saxatachi/TrueEffects/trueeffectsbackend/trueeffectsfrontend/src/components/AddMeasurementsSummary.js":"14","/home/saxatachi/TrueEffects/trueeffectsbackend/trueeffectsfrontend/src/components/AddMeasurements.js":"15","/home/saxatachi/TrueEffects/trueeffectsbackend/trueeffectsfrontend/src/components/DisplayMeasurements.js":"16","/home/saxatachi/TrueEffects/trueeffectsbackend/trueeffectsfrontend/src/components/CreateTraining.js":"17","/home/saxatachi/TrueEffects/trueeffectsbackend/trueeffectsfrontend/src/redux/actions/authenticationActions.js":"18","/home/saxatachi/TrueEffects/trueeffectsbackend/trueeffectsfrontend/src/redux/actions/trainingActions.js":"19","/home/saxatachi/TrueEffects/trueeffectsbackend/trueeffectsfrontend/src/redux/reducers/index.js":"20","/home/saxatachi/TrueEffects/trueeffectsbackend/trueeffectsfrontend/src/components/AuthenticateLogo.js":"21","/home/saxatachi/TrueEffects/trueeffectsbackend/trueeffectsfrontend/src/components/MyStopwatch.js":"22","/home/saxatachi/TrueEffects/trueeffectsbackend/trueeffectsfrontend/src/components/ModalDisplayTraining.js":"23","/home/saxatachi/TrueEffects/trueeffectsbackend/trueeffectsfrontend/src/components/homepagecomponents/HomepageGoalItem.js":"24","/home/saxatachi/TrueEffects/trueeffectsbackend/trueeffectsfrontend/src/components/homepagecomponents/HomepageTrainingItem.js":"25","/home/saxatachi/TrueEffects/trueeffectsbackend/trueeffectsfrontend/src/components/homepagecomponents/HomepageMeasurementItem.js":"26","/home/saxatachi/TrueEffects/trueeffectsbackend/trueeffectsfrontend/src/redux/actions/types.js":"27","/home/saxatachi/TrueEffects/trueeffectsbackend/trueeffectsfrontend/src/components/DisplayMeasurementsItem.js":"28","/home/saxatachi/TrueEffects/trueeffectsbackend/trueeffectsfrontend/src/components/Logo.js":"29","/home/saxatachi/TrueEffects/trueeffectsbackend/trueeffectsfrontend/src/redux/reducers/authenticationReducer.js":"30","/home/saxatachi/TrueEffects/trueeffectsbackend/trueeffectsfrontend/src/redux/reducers/trainingReducer.js":"31","/home/saxatachi/TrueEffects/trueeffectsbackend/trueeffectsfrontend/src/components/modaldisplaytraining/ModalDisplayTrainingItem.js":"32"},{"size":792,"mtime":1618767978994,"results":"33","hashOfConfig":"34"},{"size":375,"mtime":1618767978998,"results":"35","hashOfConfig":"34"},{"size":381,"mtime":1618767979002,"results":"36","hashOfConfig":"34"},{"size":497,"mtime":1619795541672,"results":"37","hashOfConfig":"34"},{"size":2767,"mtime":1619795541672,"results":"38","hashOfConfig":"34"},{"size":4294,"mtime":1619795541672,"results":"39","hashOfConfig":"34"},{"size":2229,"mtime":1619795541672,"results":"40","hashOfConfig":"34"},{"size":9328,"mtime":1619795541672,"results":"41","hashOfConfig":"34"},{"size":5985,"mtime":1619795541672,"results":"42","hashOfConfig":"34"},{"size":3433,"mtime":1618767978982,"results":"43","hashOfConfig":"34"},{"size":2463,"mtime":1619795541672,"results":"44","hashOfConfig":"34"},{"size":2941,"mtime":1619795541672,"results":"45","hashOfConfig":"34"},{"size":2018,"mtime":1619795541672,"results":"46","hashOfConfig":"34"},{"size":4657,"mtime":1619795541672,"results":"47","hashOfConfig":"34"},{"size":13585,"mtime":1619795541672,"results":"48","hashOfConfig":"34"},{"size":1836,"mtime":1619795541672,"results":"49","hashOfConfig":"34"},{"size":14721,"mtime":1619795541672,"results":"50","hashOfConfig":"34"},{"size":2336,"mtime":1618827270433,"results":"51","hashOfConfig":"34"},{"size":6480,"mtime":1619795541672,"results":"52","hashOfConfig":"34"},{"size":268,"mtime":1618767978998,"results":"53","hashOfConfig":"34"},{"size":860,"mtime":1619795541672,"results":"54","hashOfConfig":"34"},{"size":1846,"mtime":1619795541672,"results":"55","hashOfConfig":"34"},{"size":5633,"mtime":1619795541672,"results":"56","hashOfConfig":"34"},{"size":1739,"mtime":1619795541672,"results":"57","hashOfConfig":"34"},{"size":1198,"mtime":1619795541672,"results":"58","hashOfConfig":"34"},{"size":4694,"mtime":1619795541672,"results":"59","hashOfConfig":"34"},{"size":1598,"mtime":1618767978998,"results":"60","hashOfConfig":"34"},{"size":4278,"mtime":1619795541672,"results":"61","hashOfConfig":"34"},{"size":711,"mtime":1619784528955,"results":"62","hashOfConfig":"34"},{"size":2179,"mtime":1618767978998,"results":"63","hashOfConfig":"34"},{"size":3262,"mtime":1618767978998,"results":"64","hashOfConfig":"34"},{"size":1516,"mtime":1618767978986,"results":"65","hashOfConfig":"34"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},"1xel5e1",{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"68"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"68"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"68"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"68"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"68"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/saxatachi/TrueEffects/trueeffectsbackend/trueeffectsfrontend/src/index.js",[],["136","137"],"/home/saxatachi/TrueEffects/trueeffectsbackend/trueeffectsfrontend/src/reportWebVitals.js",[],"/home/saxatachi/TrueEffects/trueeffectsbackend/trueeffectsfrontend/src/store.js",[],"/home/saxatachi/TrueEffects/trueeffectsbackend/trueeffectsfrontend/src/components/LoginContainer.js",[],"/home/saxatachi/TrueEffects/trueeffectsbackend/trueeffectsfrontend/src/components/DefaultContainer.js",["138","139"],"import { Route } from 'react-router-dom';\r\nimport React, { useEffect } from 'react';\r\nimport Navbar from './Navbar';\r\nimport Navbar2 from './Navbar2';\r\nimport Training from './Training';\r\nimport Schedule from './Schedule';\r\nimport Homepage from './Homepage';\r\nimport AddGoals from './AddGoals';\r\nimport LoginContainer from './LoginContainer';\r\nimport { connect } from 'react-redux';\r\nimport { getMeasurements, getTrainings, getGoals, getExercises } from '../redux/actions/trainingActions';\r\nimport { postLogoutAuth } from '../redux/actions/authenticationActions';\r\nimport DisplayMeasurements from './DisplayMeasurements'\r\nimport AddMeasurements from './AddMeasurements';\r\nimport CreateTraining from './CreateTraining';\r\nimport Register from './Register';\r\nimport '../sass/defaultcontainer.scss';\r\nimport { BoxLoading } from 'react-loadingg';\r\nimport AddMeasurementsSummary from './AddMeasurementsSummary';\r\nconst DefaultContainer = (props) => {\r\n  useEffect(() => {\r\n    document.title = \"TrueEffects\"\r\n    if (props.token === \"undefined\") {\r\n      props.postLogoutAuth()\r\n    } else if (props.token) {\r\n      props.getMeasurements();\r\n      props.getTrainings();\r\n      props.getGoals();\r\n      props.getExercises();\r\n    } else {\r\n      props.history.push('/login')\r\n    }\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    if (props.token === null) {\r\n      props.history.push('/login')\r\n    }\r\n  }, [props.token])\r\n  return (\r\n    <div className=\"containerdefault\">\r\n      {props.loadedtrainings && props.loadedgoals && props.loadedmeasurements && props.loadedexercises ? <>\r\n        <Navbar />\r\n        <Navbar2 />\r\n        <Route exact path=\"/\" component={Homepage} />\r\n        <Route path=\"/training\" component={Training} />\r\n        <Route path=\"/schedule\" component={Schedule} />\r\n        <Route path=\"/addmeasurements\" component={AddMeasurements} />\r\n        <Route path=\"/displaymeasurements\" component={DisplayMeasurements} />\r\n        <Route path=\"/createtraining\" component={CreateTraining} />\r\n        <Route path=\"/measurementsummary\" component={AddMeasurementsSummary} />\r\n        <Route path=\"/addgoals\" component={AddGoals} />\r\n        <Route exact path=\"/login\" component={LoginContainer} />\r\n        <Route exact path=\"/register\" component={Register} />\r\n      </>\r\n        : <BoxLoading />}\r\n    </div>\r\n  )\r\n}\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    token: state.authentication.token,\r\n    loadedtrainings: state.training.loadedtrainings,\r\n    loadedmeasurements: state.training.loadedmeasurements,\r\n    loadedgoals: state.training.loadedgoals,\r\n    loadedexercises: state.training.loadedexercises\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, { getMeasurements, getTrainings, getGoals, getExercises, postLogoutAuth })(DefaultContainer);","/home/saxatachi/TrueEffects/trueeffectsbackend/trueeffectsfrontend/src/components/Login.js",[],"/home/saxatachi/TrueEffects/trueeffectsbackend/trueeffectsfrontend/src/components/Navbar.js",["140"],"import React from 'react';\r\nimport '../sass/navbar.scss';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faDumbbell } from '@fortawesome/fontawesome-free-solid';\r\nimport { connect } from 'react-redux';\r\nimport { postLogout } from '../redux/actions/authenticationActions';\r\nimport { useHistory } from \"react-router-dom\";\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n    textAlign: 'center',\r\n  },\r\n  bar: {\r\n    background: '#db3d44',\r\n  },\r\n  secondtitle: {\r\n    textAlign: 'center',\r\n  }\r\n}));\r\nconst Navbar = (props) => {\r\n  const history = useHistory()\r\n  const handleLogout = async () => {\r\n    await props.postLogout()\r\n  }\r\n  const classes = useStyles();\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar className={classes.bar} position=\"static\">\r\n        <Toolbar>\r\n          <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\">\r\n          </IconButton>\r\n          <Typography variant=\"h6\" className={classes.title}>\r\n            <FontAwesomeIcon icon={faDumbbell} />TrueEffects\r\n                </Typography >\r\n          {props.token !== null ? <> <p className={classes.secondtitle} id=\"navbaruser\">Witaj {props.name}<Button onClick={handleLogout} color=\"inherit\">Wyloguj się</Button></p></> : <><Button color=\"inherit\">Zaloguj się</Button></>}\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n};\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    trainings: state.training.trainings.data,\r\n    loadedtrainings: state.training.loadedtrainings,\r\n    measurements: state.training.measurements.data,\r\n    goals: state.training.goals.data,\r\n    name: state.authentication.name,\r\n    token: state.authentication.token\r\n  }\r\n}\r\nexport default connect(mapStateToProps, { postLogout })(Navbar);\r\n","/home/saxatachi/TrueEffects/trueeffectsbackend/trueeffectsfrontend/src/components/Training.js",["141"],"import React, { useState, useRef } from 'react';\r\nimport MyStopwatch from './MyStopwatch';\r\nimport '../sass/training.scss';\r\nimport logo from '../images/logo.png';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faArrowLeft, faArrowRight } from '@fortawesome/fontawesome-free-solid';\r\nimport { endTraining, getTrainings } from '../redux/actions/trainingActions';\r\nimport { connect } from 'react-redux';\r\nimport { useHistory } from \"react-router-dom\";\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    '&:hover': {\r\n      backgroundColor: 'transparent',\r\n    },\r\n  },\r\n  icon: {\r\n    borderRadius: 3,\r\n    width: 16,\r\n    height: 16,\r\n    boxShadow: 'inset 0 0 0 1px rgba(16,22,26,.2), inset 0 -1px 0 rgba(16,22,26,.1)',\r\n    backgroundColor: '#f5f8fa',\r\n    backgroundImage: 'linear-gradient(180deg,hsla(0,0%,100%,.8),hsla(0,0%,100%,0))',\r\n    '$root.Mui-focusVisible &': {\r\n      outline: '2px auto rgba(19,124,189,.6)',\r\n      outlineOffset: 2,\r\n    },\r\n    'input:hover ~ &': {\r\n      backgroundColor: '#ebf1f5',\r\n    },\r\n    'input:disabled ~ &': {\r\n      boxShadow: 'none',\r\n      background: 'rgba(206,217,224,.5)',\r\n    },\r\n  },\r\n  checkedIcon: {\r\n    backgroundColor: '#137cbd',\r\n    backgroundImage: 'linear-gradient(180deg,hsla(0,0%,100%,.1),hsla(0,0%,100%,0))',\r\n    '&:before': {\r\n      display: 'block',\r\n      width: 16,\r\n      height: 16,\r\n      backgroundImage:\r\n        \"url(\\\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 16 16'%3E%3Cpath\" +\r\n        \" fill-rule='evenodd' clip-rule='evenodd' d='M12 5c-.28 0-.53.11-.71.29L7 9.59l-2.29-2.3a1.003 \" +\r\n        \"1.003 0 00-1.42 1.42l3 3c.18.18.43.29.71.29s.53-.11.71-.29l5-5A1.003 1.003 0 0012 5z' fill='%23fff'/%3E%3C/svg%3E\\\")\",\r\n      content: '\"\"',\r\n    },\r\n    'input:hover ~ &': {\r\n      backgroundColor: '#106ba3',\r\n    },\r\n  },\r\n});\r\nconst Training = (props) => {\r\n  const history = useHistory()\r\n  const { training } = props.location\r\n  const [series, setSeries] = useState(0);\r\n  const [singleSeries, setSingleSeries] = useState(0)\r\n  const [endtraining, setEndTraining] = useState(false)\r\n  const [input, setInput] = useState('')\r\n  const inputRef = useRef();\r\n  const buttonRef = useRef();\r\n  const endbuttonRef = useRef();\r\n  const childRef = useRef();\r\n  const goNext = () => {\r\n    if (inputRef.current.value !== \"\") {\r\n      training.training[`${series}`].reps[`${singleSeries}`] = parseInt(inputRef.current.value)\r\n    }\r\n    let value = parseInt(inputRef.current.value)\r\n    let placeholder = parseInt(inputRef.current.placeholder)\r\n    if (Number.isInteger(value)) {\r\n      inputRef.current.value = ''\r\n      if (singleSeries + 1 < training.training[series].reps.length) {\r\n        setSingleSeries(singleSeries + 1)\r\n      } else {\r\n        if (series + 1 >= training.training.length) {\r\n          setEndTraining(true)\r\n        }\r\n        else {\r\n          setSeries(series + 1)\r\n          setSingleSeries(0)\r\n        }\r\n      }\r\n    }\r\n    else if (Number.isInteger(placeholder)) {\r\n      inputRef.current.value = ''\r\n      if (singleSeries + 1 < training.training[series].reps.length) {\r\n        setSingleSeries(singleSeries + 1)\r\n      } else {\r\n        if (series + 1 >= training.training.length) {\r\n          setEndTraining(true)\r\n        } else {\r\n          setSeries(series + 1)\r\n          setSingleSeries(0)\r\n        }\r\n      }\r\n    }\r\n    else {\r\n      alert(\"Niepoprawne dane\");\r\n    }\r\n  }\r\n  const handlemovetoschedulepage = () => {\r\n    history.push('/schedule/')\r\n  }\r\n  const handleInput = () => {\r\n    setInput(inputRef.current.value)\r\n  }\r\n\r\n  const handleEndTraining = async () => {\r\n    await childRef.current.handleStop()\r\n    await childRef.current.getAlert()\r\n    await childRef.current.posttrain()\r\n    await handlemovetoschedulepage()\r\n  }\r\n  return (\r\n    <div className=\"training\">\r\n      <div className=\"training__top\">\r\n        <div className=\"training__top__previousexercise\">\r\n          <div style={{ visibility: typeof training.training[series - 1] !== \"undefined\" ? 'visible' : 'hidden' }} className=\"training__top__previousexercise-title\"><FontAwesomeIcon icon={faArrowLeft} /> Poprzednie ćwiczenie</div>\r\n          <div style={{ visibility: typeof training.training[series - 1] !== \"undefined\" ? 'visible' : 'hidden' }} className=\"training__top__previousexercise-name\">{typeof training.training[series - 1] !== \"undefined\" && training.training[series - 1].exercise.name}</div>\r\n        </div>\r\n        {typeof training.training[series + 1] !== \"undefined\" && <div className=\"training__top__nextexercise\">\r\n          <div style={{ visibility: typeof training.training[series + 1] !== \"undefined\" ? 'visible' : 'hidden' }} className=\"training__top__nextexercise-title\">Następne ćwiczenie <FontAwesomeIcon icon={faArrowRight} /></div>\r\n          <div style={{ visibility: typeof training.training[series + 1] !== \"undefined\" ? 'visible' : 'hidden' }} className=\"training__top__nextexercise-name\">{typeof training.training[series + 1] !== \"undefined\" && training.training[series + 1].exercise !== null ? training.training[series + 1].exercise.name !== null : training.training[series + 1].ownexercise.name}</div>\r\n        </div>}\r\n      </div>\r\n      <div className=\"training__middle\">\r\n        <div className=\"training__middle-title\">Aktualne Ćwiczenie</div>\r\n        <div className=\"training__middle-exercise\">{training.training[series].exercise !== null ? training.training[series].exercise.name : training.training[series].ownexercise.name}</div>\r\n        <div className=\"training__middle__logotime\">\r\n          <div className=\"training__middle__logotime-logo\">\r\n            <img src={logo} alt=\"logo\" />\r\n          </div>\r\n          <div className=\"training__middle__logotime-time\" >\r\n            <MyStopwatch ref={childRef} send={props.endTraining} get={props.getTrainings} id={props.location.training.id} training={props.location.training} />\r\n          </div>\r\n        </div>\r\n        <div className=\"training__middle__series\">\r\n          <div className=\"training__middle__series__checkboxes\" style={{ visibility: endtraining ? 'hidden' : 'visible' }}>\r\n            {training.training[`${series}`].reps.map(function (item, index) {\r\n              if (index < singleSeries + 1) {\r\n                return (\r\n                  <Checkbox checked={true} />\r\n                )\r\n              } else {\r\n                return (\r\n                  <Checkbox disabled checked={false} />\r\n                )\r\n              }\r\n            }\r\n            )}\r\n          </div>\r\n          <div className=\"training__middle__series-title\" style={{ visibility: endtraining ? 'hidden' : 'visible' }}>Seria {singleSeries + 1}/{training.training[`${series}`].reps.length}</div>\r\n        </div>\r\n      </div>\r\n      <div className=\"training__bottom\">\r\n        <div className=\"training__bottom__leftbutton\">\r\n          <button id=\"endtraining\" ref={endbuttonRef} onClick={handleEndTraining}>Zakończ trening X</button>\r\n        </div>\r\n        <div className=\"training__bottom__phase\" style={{ visibility: endtraining ? 'hidden' : 'visible' }}>\r\n          <div className=\"training__bottom__phase-title\">Fazy</div>\r\n          <div className=\"training__bottom__phase__allphases\">\r\n            <div className=\"training__bottom__phase__allphases-phase\">{training.training[`${series}`].concentric_phase}</div>\r\n            <div className=\"training__bottom__phase__allphases-/\">/</div>\r\n            <div className=\"training__bottom__phase__allphases-phase\">{training.training[`${series}`].pause_after_concentric_phase}</div>\r\n            <div className=\"training__bottom__phase__allphases-/\">/</div>\r\n            <div className=\"training__bottom__phase__allphases-phase\">{training.training[`${series}`].eccentric_phase}</div>\r\n            <div className=\"training__bottom__phase__allphases-/\">/</div>\r\n            <div className=\"training__bottom__phase__allphases-phase\">{training.training[`${series}`].pause_after_eccentric_phase}</div>\r\n          </div>\r\n          <div className=\"training__bottom__weight-title\">Ciężar dodatkowy</div>\r\n          <div className=\"training__bottom__weight-title2\">\r\n            {training.training[`${series}`].weight}kg\r\n                    </div>\r\n          <div className=\"training__bottom__phase-title2\">Ile powtórzeń wykonałeś w serii</div>\r\n          <div className=\"training__bottom__phase__reps\">\r\n            <div className=\"training__bottom__phase__reps-actualreps\"><input ref={inputRef} placeholder={training.training[`${series}`].reps[`${singleSeries}`]} onChange={handleInput} id=\"actualreps\" min=\"0\" max=\"10000\" /></div>\r\n            <div className=\"training__bottom__phase__reps-/\">/</div>\r\n            <div className=\"training__bottom__phase__reps-assumedreps\">{training.training[`${series}`].reps[`${singleSeries}`]}</div>\r\n          </div>\r\n        </div>\r\n        <div className=\"training__bottom__rightbutton\">\r\n          <button ref={buttonRef} style={{ visibility: endtraining ? 'hidden' : 'visible' }} onClick={goNext} id=\"nextexercise\">Przejdź dalej</button>\r\n        </div>\r\n      </div>\r\n\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default connect(null, { getTrainings, endTraining })(Training);\r\n","/home/saxatachi/TrueEffects/trueeffectsbackend/trueeffectsfrontend/src/components/Register.js",[],"/home/saxatachi/TrueEffects/trueeffectsbackend/trueeffectsfrontend/src/components/Navbar2.js",[],"/home/saxatachi/TrueEffects/trueeffectsbackend/trueeffectsfrontend/src/components/Schedule.js",[],"/home/saxatachi/TrueEffects/trueeffectsbackend/trueeffectsfrontend/src/components/Homepage.js",[],"/home/saxatachi/TrueEffects/trueeffectsbackend/trueeffectsfrontend/src/components/AddGoals.js",[],"/home/saxatachi/TrueEffects/trueeffectsbackend/trueeffectsfrontend/src/components/AddMeasurementsSummary.js",[],"/home/saxatachi/TrueEffects/trueeffectsbackend/trueeffectsfrontend/src/components/AddMeasurements.js",["142"],"import React, { useState, useRef } from 'react';\r\nimport '../sass/addmeasurements.css';\r\nimport DatePicker, { registerLocale } from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport pl from \"date-fns/locale/pl\";\r\nimport { connect } from 'react-redux';\r\nimport { postMeasurement, getMeasurements } from '../redux/actions/trainingActions';\r\nimport AddMeasurementsSummary from './AddMeasurementsSummary';\r\nconst AddMeasurements = (props) => {\r\n    const [weight, setWeight] = useState(0)\r\n    const [growth, setGrowth] = useState(0)\r\n    const [leftbiceps, setLeftBiceps] = useState(0)\r\n    const [rightbiceps, setRightBiceps] = useState(0)\r\n    const [leftforearm, setLeftForearm] = useState(0)\r\n    const [rightforearm, setRightForearm] = useState(0)\r\n    const [leftleg, setLeftLeg] = useState(0)\r\n    const [rightleg, setRightLeg] = useState(0)\r\n    const [bodyfat, setBodyFat] = useState(0)\r\n    const [summary, setSummary] = useState(false)\r\n    const [data, setData] = useState()\r\n    const inputdate = useRef(null)\r\n    const [olddata, setOldData] = useState(() => {\r\n        if (props.measurements[props.measurements.length - 1] !== undefined) {\r\n            return props.measurements[props.measurements.length - 1]\r\n        } else {\r\n            return undefined\r\n        }\r\n    })\r\n    const [actualDate, setActualDate] = useState(new Date())\r\n    // const handleDate = () =>{\r\n    //     let date = new Date(inputdate.current.input.value)\r\n    //     let splitdate = inputdate.current.input.value.split(\"/\")\r\n    //     let fullday = splitdate[2] + \"-\" + splitdate[1] + \"-\" +  splitdate[0]\r\n    //     setActualDate(fullday)\r\n\r\n    // }\r\n    const handlePostMeasurement = () => {\r\n        async function fetchData() {\r\n            await props.postMeasurement(data)\r\n            await props.getMeasurements()\r\n        }\r\n        let splitdate = inputdate.current.input.value.split(\"/\")\r\n        let fullday = splitdate[2] + \"-\" + splitdate[1] + \"-\" + splitdate[0]\r\n        let data =\r\n        {\r\n            \"date\": fullday,\r\n            \"weight\": weight,\r\n            \"growth\": growth,\r\n            \"left_biceps\": leftbiceps,\r\n            \"right_biceps\": rightbiceps,\r\n            \"right_forearm\": rightforearm,\r\n            \"left_forearm\": leftforearm,\r\n            \"left_leg\": leftleg,\r\n            \"right_leg\": rightleg,\r\n            \"bodyfat\": bodyfat,\r\n\r\n        }\r\n        setOldData(props.measurements[props.measurements.length - 1])\r\n        fetchData()\r\n        setData(data)\r\n        setSummary(true)\r\n    }\r\n    registerLocale('pl', pl)\r\n    return (\r\n        <div className=\"addmeasurements\">\r\n            {summary ? <AddMeasurementsSummary newdata={data} olddata={olddata} /> :\r\n                <>\r\n                    <div className=\"addmeasurements-title\">Dodaj pomiary</div>\r\n                    <div className=\"addmeasurements__container\">\r\n                        {olddata !== undefined && <div className=\"addmeasurements__container__oldmeasurementscontainer\">\r\n                            <div className=\"addmeasurements__container__oldmeasurementscontainer-title\">Ostatni pomiar</div>\r\n\r\n                            <div className=\"addmeasurements__container__oldmeasurementscontainer__data\">\r\n                                <div className=\"addmeasurements__container__oldmeasurementscontainer__data-input\">\r\n                                    {olddata.date}\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"addmeasurements__container__oldmeasurementscontainer__elements\">\r\n                                <div className=\"addmeasurements__container__oldmeasurementscontainer__elements__element\">\r\n                                    <div className=\"addmeasurements__container__oldmeasurementscontainer__elements__element-name\">Waga</div>\r\n                                    <div className=\"addmeasurements__container__oldmeasurementscontainer__elements__element-result\">{olddata.weight} kg</div>\r\n                                </div>\r\n                                <div className=\"addmeasurements__container__oldmeasurementscontainer__elements__element\">\r\n                                    <div className=\"addmeasurements__container__oldmeasurementscontainer__elements__element-name\">Wzrost</div>\r\n                                    <div className=\"addmeasurements__container__oldmeasurementscontainer__elements__element-result\">{olddata.growth} cm</div>\r\n                                </div>\r\n                                <div className=\"addmeasurements__container__oldmeasurementscontainer__elements__element\">\r\n                                    <div className=\"addmeasurements__container__oldmeasurementscontainer__elements__element-name\">Prawy biceps</div>\r\n                                    <div className=\"addmeasurements__container__oldmeasurementscontainer__elements__element-result\">{olddata.right_biceps}cm</div>\r\n                                </div>\r\n                                <div className=\"addmeasurements__container__oldmeasurementscontainer__elements__element\">\r\n                                    <div className=\"addmeasurements__container__oldmeasurementscontainer__elements__element-name\">Lewy biceps</div>\r\n                                    <div className=\"addmeasurements__container__oldmeasurementscontainer__elements__element-result\">{olddata.left_biceps} cm</div>\r\n                                </div>\r\n                                <div className=\"addmeasurements__container__oldmeasurementscontainer__elements__element\">\r\n                                    <div className=\"addmeasurements__container__oldmeasurementscontainer__elements__element-name\">Prawe przedramię</div>\r\n                                    <div className=\"addmeasurements__container__oldmeasurementscontainer__elements__element-result\">{olddata.right_forearm} cm</div>\r\n                                </div>\r\n                                <div className=\"addmeasurements__container__oldmeasurementscontainer__elements__element\">\r\n                                    <div className=\"addmeasurements__container__oldmeasurementscontainer__elements__element-name\">Lewe przedramię</div>\r\n                                    <div className=\"addmeasurements__container__oldmeasurementscontainer__elements__element-result\">{olddata.left_forearm} cm</div>\r\n                                </div>\r\n                                <div className=\"addmeasurements__container__oldmeasurementscontainer__elements__element\">\r\n                                    <div className=\"addmeasurements__container__oldmeasurementscontainer__elements__element-name\">Prawe udo</div>\r\n                                    <div className=\"addmeasurements__container__oldmeasurementscontainer__elements__element-result\">{olddata.right_leg} cm</div>\r\n                                </div>\r\n                                <div className=\"addmeasurements__container__oldmeasurementscontainer__elements__element\">\r\n                                    <div className=\"addmeasurements__container__oldmeasurementscontainer__elements__element-name\">Lewe udo</div>\r\n                                    <div className=\"addmeasurements__container__oldmeasurementscontainer__elements__element-result\">{olddata.left_leg} cm</div>\r\n                                </div>\r\n                            </div>\r\n                        </div>}\r\n                        <div className=\"addmeasurements__container__newmeasurementscontainer\">\r\n                            <div className=\"addmeasurements__container__newmeasurementscontainer-title\">Aktualny pomiar</div>\r\n                            <div className=\"addmeasurements__container__newmeasurementscontainer__data\">\r\n                                <div className=\"addmeasurements__container__newmeasurementscontainer__data-input\">\r\n                                    <DatePicker ref={inputdate} locale='pl' dateFormat='dd/MM/yyyy' selected={actualDate} onChange={date => setActualDate(date)} /></div>\r\n                            </div>\r\n                            <div className=\"addmeasurements__container__newmeasurementscontainer__elements\">\r\n                                <div className=\"addmeasurements__container__newmeasurementscontainer__elements__element\">\r\n                                    <div className=\"addmeasurements__container__newmeasurementscontainer__elements__element-name\">Waga</div>\r\n                                    <div className=\"addmeasurements__container__newmeasurementscontainer__elements__element-result\"><input onChange={(e) => { setWeight(parseInt(e.target.value)) }} type=\"number\" min=\"0\" max=\"100\" placeholder=\"Dodaj wagę\" /></div>\r\n                                </div>\r\n                                <div className=\"addmeasurements__container__newmeasurementscontainer__elements__element\">\r\n                                    <div className=\"addmeasurements__container__newmeasurementscontainer__elements__element-name\">Wzrost</div>\r\n                                    <div className=\"addmeasurements__container__newmeasurementscontainer__elements__element-result\"><input onChange={(e) => { setGrowth(parseInt(e.target.value)) }} type=\"number\" min=\"0\" max=\"300\" placeholder=\"Dodaj wzrost\" /></div>\r\n                                </div>\r\n                                <div className=\"addmeasurements__container__newmeasurementscontainer__elements__element\">\r\n                                    <div className=\"addmeasurements__container__newmeasurementscontainer__elements__element-name\">Prawy biceps</div>\r\n                                    <div className=\"addmeasurements__container__newmeasurementscontainer__elements__element-result\"><input onChange={(e) => { setRightBiceps(parseInt(e.target.value)) }} type=\"number\" min=\"0\" max=\"100\" placeholder=\"Prawy biceps\" /></div>\r\n                                </div>\r\n                                <div className=\"addmeasurements__container__newmeasurementscontainer__elements__element\">\r\n                                    <div className=\"addmeasurements__container__newmeasurementscontainer__elements__element-name\">Lewy biceps</div>\r\n                                    <div className=\"addmeasurements__container__newmeasurementscontainer__elements__element-result\"><input onChange={(e) => { setLeftBiceps(parseInt(e.target.value)) }} type=\"number\" min=\"0\" max=\"100\" placeholder=\"Lewy biceps\" /></div>\r\n                                </div>\r\n                                <div className=\"addmeasurements__container__newmeasurementscontainer__elements__element\">\r\n                                    <div className=\"addmeasurements__container__newmeasurementscontainer__elements__element-name\">Prawe przedramię</div>\r\n                                    <div className=\"addmeasurements__container__newmeasurementscontainer__elements__element-result\"><input onChange={(e) => { setRightForearm(parseInt(e.target.value)) }} type=\"number\" min=\"0\" max=\"100\" placeholder=\"Prawe przedramię\" /></div>\r\n                                </div>\r\n                                <div className=\"addmeasurements__container__newmeasurementscontainer__elements__element\">\r\n                                    <div className=\"addmeasurements__container__newmeasurementscontainer__elements__element-name\">Lewe przedramię</div>\r\n                                    <div className=\"addmeasurements__container__newmeasurementscontainer__elements__element-result\"><input onChange={(e) => { setLeftForearm(parseInt(e.target.value)) }} type=\"number\" min=\"0\" max=\"100\" placeholder=\"Lewe przedramię\" /></div>\r\n                                </div>\r\n                                <div className=\"addmeasurements__container__newmeasurementscontainer__elements__element\">\r\n                                    <div className=\"addmeasurements__container__newmeasurementscontainer__elements__element-name\">Prawe udo</div>\r\n                                    <div className=\"addmeasurements__container__newmeasurementscontainer__elements__element-result\"><input onChange={(e) => { setRightLeg(parseInt(e.target.value)) }} type=\"number\" min=\"0\" max=\"100\" placeholder=\"Prawe udo\" /></div>\r\n                                </div>\r\n                                <div className=\"addmeasurements__container__newmeasurementscontainer__elements__element\">\r\n                                    <div className=\"addmeasurements__container__newmeasurementscontainer__elements__element-name\">Lewe udo</div>\r\n                                    <div className=\"addmeasurements__container__newmeasurementscontainer__elements__element-result\"><input onChange={(e) => { setLeftLeg(parseInt(e.target.value)) }} type=\"number\" min=\"0\" max=\"100\" placeholder=\"Lewe udo\" /></div>\r\n                                </div>\r\n                                <div className=\"addmeasurements__container__newmeasurementscontainer__elements__element\">\r\n                                    <div className=\"addmeasurements__container__newmeasurementscontainer__elements__element-button\"><button onClick={handlePostMeasurement}>Zaakceptuj zmiany</button></div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div></>}\r\n        </div>\r\n    );\r\n};\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        measurements: state.training.measurements.data\r\n    }\r\n}\r\nexport default connect(mapStateToProps, { postMeasurement, getMeasurements })(AddMeasurements);\r\n","/home/saxatachi/TrueEffects/trueeffectsbackend/trueeffectsfrontend/src/components/DisplayMeasurements.js",["143"],"import React, { useState, useEffect } from 'react';\r\nimport '../sass/displaymeasurements.css';\r\nimport { connect } from 'react-redux';\r\nimport DisplayMeasurementsItem from './DisplayMeasurementsItem';\r\nconst DisplayMeasurements = (props) => {\r\n    const [measurements, setMeasurements] = useState(props.measurements)\r\n    useEffect(() => {\r\n        setMeasurements(() => {\r\n            let meas\r\n            if (props.measurements.length > 8) {\r\n                meas = props.measurements.slice(8)\r\n                meas.slice(0).reverse()\r\n                return meas\r\n            } else {\r\n                meas = props.measurements.slice(0).reverse()\r\n            }\r\n            return meas\r\n        })\r\n    }, [])\r\n    useEffect(() => {\r\n        setMeasurements(() => {\r\n            let meas\r\n            if (props.measurements.length > 8) {\r\n                meas = props.measurements.slice(8)\r\n                meas.slice(0).reverse()\r\n                return meas\r\n            } else {\r\n                meas = props.measurements.slice(0).reverse()\r\n            }\r\n            return meas\r\n        })\r\n    }, [props.measurements])\r\n    return (\r\n        <div className=\"displaymeasurements\">\r\n            <div className=\"displaymeasurements-title\">Twoje ostatnie 9 pomiarów</div>\r\n            <div className=\"displaymeasurements__containers\">\r\n                {measurements.map((measurement) => <DisplayMeasurementsItem measurement={measurement} />)}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        trainings: state.training.trainings.data,\r\n        loadedtrainings: state.training.loadedtrainings,\r\n        measurements: state.training.measurements.data,\r\n        goals: state.training.goals.data\r\n    }\r\n}\r\nexport default connect(mapStateToProps)(DisplayMeasurements);\r\n","/home/saxatachi/TrueEffects/trueeffectsbackend/trueeffectsfrontend/src/components/CreateTraining.js",[],"/home/saxatachi/TrueEffects/trueeffectsbackend/trueeffectsfrontend/src/redux/actions/authenticationActions.js",[],"/home/saxatachi/TrueEffects/trueeffectsbackend/trueeffectsfrontend/src/redux/actions/trainingActions.js",[],"/home/saxatachi/TrueEffects/trueeffectsbackend/trueeffectsfrontend/src/redux/reducers/index.js",[],"/home/saxatachi/TrueEffects/trueeffectsbackend/trueeffectsfrontend/src/components/AuthenticateLogo.js",[],"/home/saxatachi/TrueEffects/trueeffectsbackend/trueeffectsfrontend/src/components/MyStopwatch.js",[],"/home/saxatachi/TrueEffects/trueeffectsbackend/trueeffectsfrontend/src/components/ModalDisplayTraining.js",[],"/home/saxatachi/TrueEffects/trueeffectsbackend/trueeffectsfrontend/src/components/homepagecomponents/HomepageGoalItem.js",[],"/home/saxatachi/TrueEffects/trueeffectsbackend/trueeffectsfrontend/src/components/homepagecomponents/HomepageTrainingItem.js",[],"/home/saxatachi/TrueEffects/trueeffectsbackend/trueeffectsfrontend/src/components/homepagecomponents/HomepageMeasurementItem.js",[],"/home/saxatachi/TrueEffects/trueeffectsbackend/trueeffectsfrontend/src/redux/actions/types.js",[],"/home/saxatachi/TrueEffects/trueeffectsbackend/trueeffectsfrontend/src/components/DisplayMeasurementsItem.js",[],"/home/saxatachi/TrueEffects/trueeffectsbackend/trueeffectsfrontend/src/components/Logo.js",[],"/home/saxatachi/TrueEffects/trueeffectsbackend/trueeffectsfrontend/src/redux/reducers/authenticationReducer.js",[],"/home/saxatachi/TrueEffects/trueeffectsbackend/trueeffectsfrontend/src/redux/reducers/trainingReducer.js",[],"/home/saxatachi/TrueEffects/trueeffectsbackend/trueeffectsfrontend/src/components/modaldisplaytraining/ModalDisplayTrainingItem.js",[],{"ruleId":"144","replacedBy":"145"},{"ruleId":"146","replacedBy":"147"},{"ruleId":"148","severity":1,"message":"149","line":33,"column":6,"nodeType":"150","endLine":33,"endColumn":8,"suggestions":"151"},{"ruleId":"148","severity":1,"message":"152","line":39,"column":6,"nodeType":"150","endLine":39,"endColumn":19,"suggestions":"153"},{"ruleId":"154","severity":1,"message":"155","line":33,"column":9,"nodeType":"156","messageId":"157","endLine":33,"endColumn":16},{"ruleId":"154","severity":1,"message":"158","line":12,"column":7,"nodeType":"156","messageId":"157","endLine":12,"endColumn":16},{"ruleId":"154","severity":1,"message":"159","line":18,"column":21,"nodeType":"156","messageId":"157","endLine":18,"endColumn":31},{"ruleId":"148","severity":1,"message":"160","line":19,"column":8,"nodeType":"150","endLine":19,"endColumn":10,"suggestions":"161"},"no-native-reassign",["162"],"no-negated-in-lhs",["163"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.","ArrayExpression",["164"],"React Hook useEffect has a missing dependency: 'props.history'. Either include it or remove the dependency array.",["165"],"no-unused-vars","'history' is assigned a value but never used.","Identifier","unusedVar","'useStyles' is assigned a value but never used.","'setBodyFat' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'props.measurements'. Either include it or remove the dependency array. If 'setMeasurements' needs the current value of 'props.measurements', you can also switch to useReducer instead of useState and read 'props.measurements' in the reducer.",["166"],"no-global-assign","no-unsafe-negation",{"desc":"167","fix":"168"},{"desc":"169","fix":"170"},{"desc":"171","fix":"172"},"Update the dependencies array to be: [props]",{"range":"173","text":"174"},"Update the dependencies array to be: [props.history, props.token]",{"range":"175","text":"176"},"Update the dependencies array to be: [props.measurements]",{"range":"177","text":"178"},[1281,1283],"[props]",[1390,1403],"[props.history, props.token]",[711,713],"[props.measurements]"]