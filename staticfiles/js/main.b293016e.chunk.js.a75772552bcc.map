{"version":3,"sources":["redux/actions/types.js","redux/actions/authenticationActions.js","images/logo.png","components/AuthenticateLogo.js","redux/actions/trainingActions.js","components/Login.js","components/Register.js","components/LoginContainer.js","components/Navbar.js","components/Navbar2.js","components/MyStopwatch.js","components/Training.js","components/modaldisplaytraining/ModalDisplayTrainingItem.js","components/ModalDisplayTraining.js","components/Schedule.js","components/homepagecomponents/HomepageTrainingItem.js","components/homepagecomponents/HomepageMeasurementItem.js","components/homepagecomponents/HomepageGoalItem.js","components/Homepage.js","components/AddGoals.js","components/DisplayMeasurementsItem.js","components/DisplayMeasurements.js","components/Logo.js","components/AddMeasurementsSummary.js","components/AddMeasurements.js","components/CreateTraining.js","components/DefaultContainer.js","reportWebVitals.js","redux/reducers/trainingReducer.js","redux/reducers/authenticationReducer.js","redux/reducers/index.js","store.js","index.js"],"names":["POST_LOGIN","POST_REGISTER","POST_LOGOUT","POST_LOGOUT_AUTH","GET_MEASUREMENTS","POST_TRAINING","GET_TRAININGS","GET_TRAININGS_SUCCESS","GET_GOALS","GET_GOALS_SUCCESS","GET_MEASUREMENTS_SUCCESS","POST_MEASUREMENT","LOGIN_ERROR","REGISTER_ERROR","GET_EXERCISES","GET_EXERCISES_SUCCESS","AUTH_ERROR","USER_LOADED","USER_LOADING","GET_OWN_EXERCISES_SUCCESS","END_TRAINING_SUCCESS","POST_TIME","postLogin","data","dispatch","axios","defaults","headers","common","post","then","res","window","localStorage","setItem","token","getItem","name","console","log","type","payload","catch","AuthenticateLogo","className","src","logo","alt","getMeasurements","getState","authentication","get","getExercises","postTraining","a","alert","err","response","getTrainings","getGoals","useStyles","makeStyles","theme","root","width","fontWeight","connect","state","error","tokenloaded","loadUser","props","history","push","useState","login","setLogin","password","setPassword","classes","handleLogin","e","preventDefault","onClick","goBack","icon","faArrowLeft","faArrowRight","noValidate","autoComplete","TextField","onChange","target","value","id","label","style","color","error_register","postRegister","username","setUsername","email","setEmail","password2","setPassword2","emailerror","setEmailError","validateEmail","test","String","toLowerCase","handleRegister","undefined","LoginContainer","useEffect","document","title","path","component","Login","Register","flexGrow","menuButton","marginRight","spacing","bar","paddingLeft","paddingRight","background","trainings","training","loadedtrainings","measurements","goals","postLogout","removeItem","useHistory","handleLogout","AppBar","position","Toolbar","IconButton","edge","aria-label","Typography","variant","faDumbbell","Button","Navbar2","Toggle","Nav","defaultSelected","eventKey","faHome","faClipboardList","faGavel","faWeight","faClock","MyStopwatch","forwardRef","ref","useRef","useStopwatch","autoStart","seconds","minutes","hours","start","pause","reset","useImperativeHandle","getAlert","handleStop","posttrain","string","time","send","textAlign","fontSize","refminutes","refseconds","backgroundColor","borderRadius","height","boxShadow","backgroundImage","outline","outlineOffset","checkedIcon","display","content","endTraining","pk","location","series","setSeries","singleSeries","setSingleSeries","endtraining","setEndTraining","setInput","inputRef","buttonRef","endbuttonRef","childRef","handleEndTraining","current","visibility","exercise","ownexercise","reps","map","item","index","Checkbox","checked","disabled","length","concentric_phase","pause_after_concentric_phase","eccentric_phase","pause_after_eccentric_phase","weight","placeholder","min","max","parseInt","Number","isInteger","exercises","point","rest","MODAL_STYLES","top","left","transform","padding","zIndex","OVERLAY_STYLES","right","bottom","loadedmeasurements","loadedgoals","loadedexercises","deleteTraining","x","delete","updateDateTraining","y","newday","setNewDay","Date","selectDate","setSelectDate","training_date","handleDeleteTraining","alldata","back","handleAddtoDate","splitdate","input","split","fullday","date","ReactDOM","createPortal","faTimes","description","allprops","pathname","locale","dateFormat","selected","getElementById","require","Schedule","modalopen","handleSelectEvent","setState","all","handleBacktoSchedule","this","events","parse","localizer","momentLocalizer","moment","culture","views","selectable","onSelectEvent","open","React","Component","HomepageTrainingItem","HomepageMeasurementItem","addNewMeasurement","measurement","right_biceps","left_biceps","right_forearm","left_forearm","right_leg","growth","deleteGoals","handleDelete","goal","firstdate","currentTime","dd","getDate","mm","getMonth","yyyy","getFullYear","fromNow","postGoals","startDate","setStartDate","actualDate","setActualDate","inputdescription","handleSendGoals","placeholderText","day","getDay","month","year","handleDate","deleteMeasurement","handleDeleteMeasurement","left_leg","setMeasurements","meas","slice","reverse","Logo","olddata","newdata","postMeasurement","setWeight","setGrowth","leftbiceps","setLeftBiceps","rightbiceps","setRightBiceps","leftforearm","setLeftForearm","rightforearm","setRightForearm","leftleg","setLeftLeg","rightleg","setRightLeg","bodyfat","summary","setSummary","setData","inputdate","setOldData","registerLocale","pl","fetchData","ownexercises","postOwnExercise","dictdata","ownexerciseActive","setOwnExerciseActive","activediv","setActivediv","setOwnExercise","setExercise","assumedreps","setAssumedReps","setRest","concentricphase","setConcentricPhase","pauseconcentricphase","setPauseConcentricPhase","eccentricphase","setEccentricPhase","pauseeccentricphase","setPauseEccentricPhase","itemsplaceholders","setItemsPlaceHolders","items","setItems","seriesitems","setSeriesItems","name_of_training","training_description","inputOwnExercise","handlemovetoschedulepage","handleNewOwnExercise","handleClickExercise","element","prevItems","i","oldArray","array","allobjects","temparray","objects","secondtemparray","k","temp","shift","handleChangeinTrainingItems","postLogoutAuth","exact","Homepage","Training","AddMeasurements","DisplayMeasurements","CreateTraining","AddMeasurementsSummary","AddGoals","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","defaultexercises","loadingtrainings","loadingmeasurements","loadinggoals","loadingexercises","loadedtime","isAuthenticated","error_register_name","combineReducers","action","second","minute","hour","isLoading","isLoaded","middleware","thunk","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","render","DefaultContainer"],"mappings":"6hBAEaA,EAAa,aAEbC,EAAgB,gBAChBC,EAAc,cACdC,EAAmB,mBACnBC,EAAmB,mBACnBC,EAAgB,gBAChBC,EAAgB,gBAEhBC,EAAwB,wBACxBC,EAAY,YACZC,EAAoB,oBACpBC,EAA2B,4BAC3BC,EAAmB,mBAEnBC,EAAc,cACdC,EAAiB,iBACjBC,EAAgB,gBAChBC,EAAwB,wBACxBC,EAAa,aACbC,EAAc,cACdC,EAAe,eAIfC,EAA4B,4BAE5BC,EAAuB,uBACvBC,EAAY,Y,iBC3BZC,EAAW,SAACC,GAAD,OAAQ,SAAAC,UACjBC,IAAMC,SAASC,QAAQC,OAAvB,cACPH,IAAMI,KAAK,gDAAgDN,GAC1DO,MAAK,SAAAC,GACFC,OAAOC,aAAaC,QAAQ,QAAQH,EAAIR,KAAKY,OAC7CH,OAAOC,aAAaG,QAAQ,OAAOL,EAAIR,KAAKc,MAC5CC,QAAQC,IAAIN,aAAaG,QAAQ,aAGpCN,MAAK,SAAAC,GAAG,OAAEP,EAAS,CAChBgB,KAAMxC,EACNyC,QAAQV,OAGXW,OAAM,SAAAX,GAAG,OAAGP,EAAS,CAClBgB,KAAM5B,EACN6B,QAAS,4C,kCCnBN,G,OAAA,IAA0B,kCCsB1BE,EAnBU,WACrB,OACI,qBAAKC,UAAU,mBAAf,SACI,qBAAKA,UAAU,0BAAf,SACI,sBAAKA,UAAU,mCAAf,UACI,qBAAKA,UAAU,qCACf,qBAAKA,UAAU,qCACf,qBAAKA,UAAU,mCAAf,SACI,qBAAKA,UAAU,wCAAf,SACI,qBAAKC,IAAKC,EAAMC,IAAI,qBCCnCC,EAAiB,kBAAI,SAACxB,EAASyB,GACxCzB,EAAS,CAACgB,KAAMpC,IAChB,IAAI+B,EAAQc,IAAWC,eAAef,MAEtC,OADAV,IAAMC,SAASC,QAAQC,OAAvB,8BAA0DO,GACnDV,IAAM0B,IAAI,uEAChBrB,MAAK,SAAAC,GAAG,OAAGP,EAAS,CACjBgB,KAAM9B,EACN+B,QAASV,SAGJqB,EAAe,kBAAK,SAAC5B,EAASyB,GACvC,IAAId,EAAQc,IAAWC,eAAef,MACtCX,EAAS,CAACgB,KAAM1B,IAChBW,IAAMC,SAASC,QAAQC,OAAvB,8BAA0DO,GAC1DV,IAAM0B,IAAI,gEACTrB,MAAK,SAAAC,GAAG,OAAEP,EAAS,CAChBgB,KAAMrB,EACNsB,QAASV,EAAIR,UAEhBO,KACDL,IAAM0B,IAAI,6DACTrB,MAAK,SAAAC,GAAG,OAAGP,EAAS,CACjBgB,KAAMzB,EACN0B,QAASV,UAGJsB,EAAe,SAAC9B,GAAD,8CAAU,WAAMC,EAASyB,GAAf,eAAAK,EAAA,6DAEpB,QADVnB,EAAQH,OAAOC,aAAaG,QAAQ,YAEpCD,EAAQc,IAAWC,eAAef,OAEtCV,IAAMC,SAASC,QAAQC,OAAvB,8BAA0DO,GALxB,SAMrBV,IAAMI,KAAK,0DAA0DN,GACjFO,MAAK,SAAAC,GACFwB,MAAM,iCAETb,OAAM,SAAAc,GACHlB,QAAQC,IAAIiB,EAAIC,UAChBF,MAAM,wEAZwB,mFAAV,yDAefG,EAAe,kBAAM,SAAClC,EAASyB,GACxCzB,EAAS,CAACgB,KAAMlC,IAChB,IAAI6B,EAAQc,IAAWC,eAAef,MAEtC,OADAV,IAAMC,SAASC,QAAQC,OAAvB,8BAA0DO,GACnDV,IAAM0B,IAAI,4DAChBrB,MAAK,SAAAC,GAAG,OAAIP,EAAS,CAClBgB,KAAMjC,EACNkC,QAASV,SAGJ4B,EAAW,kBAAM,SAACnC,EAASyB,GACpCzB,EAAS,CAACgB,KAAMhC,IAChB,IAAI2B,EAAQc,IAAWC,eAAef,MAEtC,OADAV,IAAMC,SAASC,QAAQC,OAAvB,8BAA0DO,GACnDV,IAAM0B,IAAI,qEAChBrB,MAAK,SAAAC,GAAG,OAAIP,EAAS,CAClBgB,KAAM/B,EACNgC,QAASV,SC7DX6B,EAAYC,aAAW,SAACC,GAAD,MAAY,CACrCC,KAAM,CACJ,uBAAwB,CACtBC,MAAO,OACP,wBAAwB,CACpBC,WAAY,aAuETC,eAPS,SAACC,GACrB,MAAM,CACFC,MAAOD,EAAMjB,eAAekB,MAC5BjC,MAAOgC,EAAMjB,eAAef,MAC5BkC,YAAaF,EAAMjB,eAAemB,eAGH,CAAC/C,YAAU0B,kBAAgBK,eAAaK,eAAaC,WAASP,eAAakB,SJ9C1F,SAAC/C,GAAD,OAAU,SAACC,EAASyB,GACxCzB,EAAS,CAACgB,KAAMtB,WACTO,IAAMC,SAASC,QAAQC,OAAvB,cACPH,IAAMI,KAAK,gDAAgDN,GAC1DO,MAAK,SAAAC,GACFP,EAAS,CACLgB,KAAMvB,EACNwB,QAASV,EAAIR,UAElBmB,OAAM,SAAAc,GACLhC,EAAS,CACLgB,KAAM5B,EACN6B,QAAU,+CIkCPyB,EAjED,SAACK,GACQ,OAAhBA,EAAMpC,OACLoC,EAAMC,QAAQC,KAAK,KAEvB,IAJqB,EAUIC,mBAAS,IAVb,mBAUdC,EAVc,KAURC,EAVQ,OAWUF,mBAAS,IAXnB,mBAWdG,EAXc,KAWLC,EAXK,KAYfC,EAAUnB,IACToB,EAAW,uCAAG,WAAMC,GAAN,eAAA3B,EAAA,6DACjB2B,EAAEC,iBACE3D,EAAM,CACN,SAAYoD,EACZ,SAAYE,GAJC,SAMXN,EAAMD,SAAS/C,GANJ,2CAAH,sDAQlB,OAEI,sBAAKqB,UAAU,QAAf,UACI,cAAC,EAAD,IACA,sBAAKA,UAAU,yBAAf,UACA,sBAAKA,UAAU,8BAAf,UACI,sBAAKA,UAAU,oCAAoCuC,QApBtC,WACrBZ,EAAMC,QAAQY,UAmBN,UACI,qBAAKxC,UAAU,yCAAf,SAAwD,cAAC,IAAD,CAAiByC,KAAMC,QAC/E,qBAAK1C,UAAU,0CAAf,uBAEJ,sBAAKA,UAAU,uCAAuCuC,QA3BrC,WACzBZ,EAAMC,QAAQC,KAAK,cA0BX,UACI,qBAAK7B,UAAU,6CAAf,kCACA,qBAAKA,UAAU,4CAAf,SAA2D,cAAC,IAAD,CAAiByC,KAAME,cAGtF,qBAAK3C,UAAU,+BAAf,SACI,uBAAMA,UAAWmC,EAAQhB,KAAMyB,YAAU,EAACC,aAAa,MAAvD,UACA,qBAAK7C,UAAU,sCAAf,8BACA,qBAAKA,UAAU,4CAAf,mDACA,qBAAKA,UAAU,+CAAf,SACA,cAAC8C,EAAA,EAAD,CAAWC,SAAU,SAACV,GAAD,OAAKL,EAASK,EAAEW,OAAOC,QAAQC,GAAG,0BAA0BC,MAAM,yBAAoBvD,KAAK,OAAOiD,aAAa,uBAEpI,qBAAK7C,UAAU,kDAAf,SACA,cAAC8C,EAAA,EAAD,CAAWC,SAAU,SAACV,GAAD,OAAKH,EAAYG,EAAEW,OAAOC,QAAQC,GAAG,0BAA0BC,MAAM,aAAQvD,KAAK,WAAWiD,aAAa,uBAE9G,KAAhBlB,EAAMH,OAAgB,mBAAG4B,MAAO,CAACC,MAAM,OAAjB,SAA0B1B,EAAMH,QACvD,sBAAKxB,UAAU,uCAAf,UACI,wBAAQA,UAAU,6CAA6CuC,QAASH,EAAxE,8BACA,mBAAGpC,UAAU,8CAAb,0DC7DlBgB,G,OAAYC,aAAW,SAACC,GAAD,MAAY,CACrCC,KAAM,CACJ,uBAAwB,CACtBC,MAAO,OACP,wBAAwB,CACpBC,WAAY,cAmGTC,eANS,SAACC,GACrB,MAAM,CACF+B,eAAgB/B,EAAMjB,eAAegD,eACrC/D,MAAOgC,EAAMjB,eAAef,SAGG,CAACgE,aL1FZ,SAAC5E,GAAD,OAAU,SAAAC,UAC3BC,IAAMC,SAASC,QAAQC,OAAvB,cACPH,IAAMI,KAAK,mDAAmDN,GAC7DO,MAAK,SAAAC,GAAG,OAAEP,EAAS,CAChBgB,KAAMvC,EACNwC,QAASV,EAAIR,UAEhBmB,OAAM,SAAAc,GAAG,OAAGhC,EACT,CACAgB,KAAM3B,EACN4B,QAASe,EAAIC,SAASlC,aKgFf2C,EA9FE,SAACK,GACK,OAAhBA,EAAMpC,OACLoC,EAAMC,QAAQC,KAAK,KAFC,MAIOC,mBAAS,IAJhB,mBAIjB0B,EAJiB,KAIRC,EAJQ,OAKC3B,mBAAS,IALV,mBAKjB4B,EALiB,KAKXC,EALW,OAMO7B,mBAAS,IANhB,mBAMjBG,EANiB,KAMRC,EANQ,OAOSJ,mBAAS,IAPlB,mBAOjB8B,EAPiB,KAOPC,EAPO,OAQiB/B,oBAAS,GAR1B,gCASWA,oBAAS,IATpB,mBASjBgC,EATiB,KASNC,EATM,OAUiBjC,oBAAS,GAV1B,6BAWxB,SAASkC,EAAcN,GAEnB,MADW,wJACDO,KAAKC,OAAOR,GAAOS,eAGjC,IAMMC,EAAc,uCAAG,WAAM/B,GAAN,eAAA3B,EAAA,yDACnB2B,EAAEC,kBAC0B,IAAzB0B,EAAcN,GAFE,uBAGX/E,EAAO,CACP,SAAY6E,EACZ,MAASE,EACT,SAAWzB,EACX,UAAY2B,GAPD,SASTjC,EAAM4B,aAAa5E,GATV,6BAYfoF,GAAc,GAZC,2CAAH,sDAgBd5B,EAAUnB,IAChB,OACI,sBAAKhB,UAAU,WAAf,UACI,cAAC,EAAD,IACA,sBAAKA,UAAU,4BAAf,UACI,sBAAKA,UAAU,iCAAf,UACA,sBAAKA,UAAU,uCAAuCuC,QAzBzC,WACrBZ,EAAMC,QAAQY,UAwBN,UACI,qBAAKxC,UAAU,4CAAf,SAA2D,cAAC,IAAD,CAAiByC,KAAMC,QAClF,qBAAK1C,UAAU,6CAAf,uBAEJ,sBAAKA,UAAU,0CAA0CuC,QAhC3C,WACtBZ,EAAMC,QAAQC,KAAK,WA+BX,UACI,qBAAK7B,UAAU,gDAAf,8BACA,qBAAKA,UAAU,+CAAf,SAA8D,cAAC,IAAD,CAAiByC,KAAME,cAGzF,qBAAK3C,UAAU,kCAAf,SACI,uBAAMA,UAAWmC,EAAQhB,KAAMyB,YAAU,EAACC,aAAa,MAAvD,UACA,qBAAK7C,UAAU,yCAAf,kCACA,qBAAKA,UAAU,+CAAf,uDACA,sBAAKA,UAAU,6CAAf,UACA,qBAAKA,UAAU,kDAAf,SACA,cAAC8C,EAAA,EAAD,CAAWI,GAAG,0BAA2BH,SAAU,SAACV,GAAD,OAAKoB,EAAYpB,EAAEW,OAAOC,QAASE,MAAM,yBAAoBvD,KAAK,OAAOiD,aAAa,4BAEtGwB,IAAlC1C,EAAM2B,eAAeE,UAA0B,mBAAGJ,MAAO,CAACC,MAAM,OAAjB,SAA0B1B,EAAM2B,eAAeE,WAC/F,qBAAKxD,UAAU,kDAAf,SACA,cAAC8C,EAAA,EAAD,CAAWI,GAAG,0BAA2BH,SAAU,SAACV,GAAD,OAAKsB,EAAStB,EAAEW,OAAOC,QAASE,MAAM,QAAQvD,KAAK,QAAQiD,aAAa,uBAE1HiB,GAAc,mBAAGV,MAAO,CAACC,MAAO,OAAlB,sCACf,qBAAKrD,UAAU,qDAAf,SACA,cAAC8C,EAAA,EAAD,CAAWI,GAAG,0BAA0BH,SAAU,SAACV,GAAD,OAAKH,EAAYG,EAAEW,OAAOC,QAASE,MAAM,aAAQvD,KAAK,WAAWiD,aAAa,4BAE7FwB,IAAlC1C,EAAM2B,eAAerB,UAA0B,mBAAGmB,MAAO,CAACC,MAAM,OAAjB,SAA0B1B,EAAM2B,eAAerB,WAC/F,qBAAKjC,UAAU,qDAAf,SACA,cAAC8C,EAAA,EAAD,CAAWI,GAAG,0BAA0BH,SAAU,SAACV,GAAD,OAAKwB,EAAaxB,EAAEW,OAAOC,QAAQE,MAAM,wBAAgBvD,KAAK,WAAWiD,aAAa,4BAEpGwB,IAAnC1C,EAAM2B,eAAeM,WAA2B,mBAAGR,MAAO,CAACC,MAAM,OAAjB,SAA0B1B,EAAM2B,eAAeM,eAGhG,qBAAK5D,UAAU,0CAAf,SACI,wBAAQA,UAAU,mDAAmDuC,QAAS6B,EAA9E,kDC/ETE,I,OAXQ,WAIrB,OAHAC,qBAAU,WACRC,SAASC,MAAQ,gBACjB,IAEA,sBAAKzE,UAAU,iBAAf,UAEE,cAAC,IAAD,CAAO0E,KAAK,SAASC,UAAWC,IAChC,cAAC,IAAD,CAAOF,KAAK,YAAYC,UAAWE,S,2DCDnC7D,GAAYC,aAAW,SAACC,GAAD,MAAY,CACrCC,KAAM,CACJ2D,SAAU,GAEZC,WAAY,CACVC,YAAa9D,EAAM+D,QAAQ,IAE7BR,MAAO,CACLK,SAAU,GAEZI,IAAK,CACHC,YAAa,GACbC,aAAc,IACdC,WAAY,eAkCH/D,gBAVS,SAACC,GACvB,MAAM,CACF+D,UAAW/D,EAAMgE,SAASD,UAAU3G,KACpC6G,gBAAiBjE,EAAMgE,SAASC,gBAChCC,aAAclE,EAAMgE,SAASE,aAAa9G,KAC1C+G,MAAOnE,EAAMgE,SAASG,MAAM/G,KAC5Bc,KAAM8B,EAAMjB,eAAeb,KAC3BF,MAAOgC,EAAMjB,eAAef,SAGK,CAACoG,WPJd,kBAAK,SAAC/G,EAASyB,GACrC,IAAId,EAAQc,IAAWC,eAAef,MACtCV,IAAMC,SAASC,QAAQC,OAAvB,8BAA0DO,GAC1DV,IAAM0B,IAAI,kDACTrB,MAAK,SAAAC,GAAG,OAAEP,EAAS,CAChBgB,KAAMxB,OAETc,MAAK,SAAAC,GAAG,OAAEP,EAAS,CAChBgB,KAAMtC,OAET4B,MAAK,SAAAC,GACFC,OAAOC,aAAauG,WAAW,SAC/BxG,OAAOC,aAAauG,WAAW,cORxBtE,EA/BA,SAACK,GACEkE,cAAhB,IACQC,EAAY,uCAAG,sBAAApF,EAAA,sEACbiB,EAAMgE,aADO,2CAAH,qDAGVxD,EAAUnB,KAChB,OACA,qBAAKhB,UAAWmC,EAAQhB,KAAxB,SACM,cAAC4E,GAAA,EAAD,CAAQ/F,UAAWmC,EAAQ+C,IAAIc,SAAS,SAAxC,SACE,eAACC,GAAA,EAAD,WACE,cAACC,GAAA,EAAD,CAAYC,KAAK,QAAQnG,UAAWmC,EAAQ4C,WAAY1B,MAAM,UAAU+C,aAAW,SAEnF,eAACC,GAAA,EAAD,CAAYC,QAAQ,KAAKtG,UAAWmC,EAAQsC,MAA5C,UACE,cAAC,IAAD,CAAiBhC,KAAM8D,MADzB,iBAGiB,OAAhB5E,EAAMpC,MAAgB,yCAAG,uCAAUoC,EAAMlC,KAAK,cAAC+G,GAAA,EAAD,CAAQjE,QAASuD,EAAczC,MAAM,UAArC,oCAA2E,mCAAE,cAACmD,GAAA,EAAD,CAAQnD,MAAM,UAAd,0C,oBCwC7HoD,GA7EC,SAAC9E,GACb,IAAMC,EAAUiE,cAmBhB,OACI,eAAC,KAAD,WACQ,cAAC,KAAQa,OAAT,IACA,eAAC,KAAQC,IAAT,CAAaC,gBAAgB,OAA7B,UACI,eAAC,WAAD,CAASrE,QAtBA,WACrBX,EAAQC,KAAK,MAqBmCgF,SAAS,OAA7C,UACI,cAAC,WAAD,UACE,cAAC,IAAD,CAAiBpE,KAAMqE,QAEzB,cAAC,WAAD,+BAIJ,eAAC,WAAD,CAASvE,QA3BK,WAC1BX,EAAQC,KAAK,cA0BwCgF,SAAS,YAAlD,UACI,cAAC,WAAD,UACE,cAAC,IAAD,CAAiBpE,KAAMsE,QAEzB,cAAC,WAAD,wCAIJ,eAAC,WAAD,CAASxE,QAhCG,WACxBX,EAAQC,KAAK,oBA+BsCgF,SAAS,QAAhD,UACI,cAAC,WAAD,UACE,cAAC,IAAD,CAAiBpE,KAAMuE,QAEzB,cAAC,WAAD,iCAIJ,eAAC,WAAD,CAAUzE,QArCO,WAC7BX,EAAQC,KAAK,qBAoC4CgF,SAAS,SAAtD,UACI,cAAC,WAAD,UACC,cAAC,IAAD,CAAiBpE,KAAMwE,QAExB,cAAC,WAAD,+BAIJ,eAAC,WAAD,CAAS1E,QA1CW,WAChCX,EAAQC,KAAK,yBAyC8CgF,SAAS,YAAxD,UACI,cAAC,WAAD,UACE,cAAC,IAAD,CAAiBpE,KAAMwE,QAEzB,cAAC,WAAD,iDAIJ,eAAC,WAAD,CAAS1E,QA/CI,WACzBX,EAAQC,KAAK,cA8CuCgF,SAAS,OAAjD,UACI,cAAC,WAAD,UACE,cAAC,IAAD,CAAiBpE,KAAMyE,QAEzB,cAAC,WAAD,mD,UCJTC,GArEKC,sBAAW,SAACzF,EAAO0F,GACnBC,mBAAlB,IAD6C,EASzCC,wBAAa,CAAEC,WAAW,IAN5BC,EAH2C,EAG3CA,QACAC,EAJ2C,EAI3CA,QACAC,EAL2C,EAK3CA,MACAC,EAN2C,EAM3CA,MACAC,EAP2C,EAO3CA,MACAC,EAR2C,EAQ3CA,MAgDF,OA3CAC,8BAAoBV,GAAK,iBAAO,CAC9BW,SAD8B,WAE5BrH,MAAM,iCAAD,OAAkCgH,EAAM,GAAK,EAAG,IAAhD,OAAqDA,EAArD,YAA8DD,EAAQ,GAAK,EAAG,IAA9E,OAAmFA,EAAnF,YAA8FD,EAAQ,GAAK,EAAG,IAA9G,OAAmHA,KAE1HQ,WAJ8B,WAK5BJ,KAEIK,UAPwB,WAOX,OAAD,iHAChBxI,QAAQC,IAAIgC,EAAMuB,IACdiF,EAAS,GACTR,EAAM,IACRQ,GAAU,IAAMR,EAChBQ,GAAU,MAGVA,GAAUR,EACVQ,GAAU,KAERT,EAAQ,IACVS,GAAU,IAAMT,EAChBS,GAAU,MAGVA,GAAUT,EACVS,GAAU,KAGVA,GADEV,EAAQ,GACA,IAAMA,EAINA,EAGZ9F,EAAM4D,SAAS6C,KAAOD,EA3BN,SA4BVxG,EAAM0G,KAAK1G,EAAMuB,GAAGvB,EAAM4D,UA5BhB,wBA6BV5D,EAAMpB,MA7BI,mDAqClB,sBAAK6C,MAAO,CAACkF,UAAW,UAAxB,UACE,sBAAKlF,MAAO,CAACmF,SAAU,SAAvB,UACE,iCAAQZ,EAAM,IAAM,EAAGA,KADzB,IACuC,uBAAMN,IAAK1F,EAAM6G,WAAjB,UAA8Bd,EAAQ,IAAM,EAAGA,KADtF,IACsG,uBAAML,IAAK1F,EAAM8G,WAAjB,UAA8BhB,EAAQ,IAAM,EAAGA,QAErJ,sBAAKzH,UAAU,mBAAf,UACE,wBAAQqH,IAAKA,EAAKnE,GAAG,QAAQX,QApDf,WAChBqF,KAmDE,mBACA,wBAAQ1E,GAAG,QAAQX,QAASsF,EAA5B,mBACA,wBAAQ3E,GAAG,QAAOX,QAASuF,EAA3B,4B,mBCsIOxG,IA7LGL,YAAW,CAC3BE,KAAM,CACJ,UAAW,CACTuH,gBAAiB,gBAGrBjG,KAAM,CACJkG,aAAc,EACdvH,MAAO,GACPwH,OAAQ,GACRC,UAAW,sEACXH,gBAAiB,UACjBI,gBAAiB,+DACjB,2BAA4B,CAC1BC,QAAS,+BACTC,cAAe,GAEjB,kBAAmB,CACjBN,gBAAiB,WAEnB,qBAAsB,CACpBG,UAAW,OACXxD,WAAY,yBAGhB4D,YAAa,CACXP,gBAAiB,UACjBI,gBAAiB,+DACjB,WAAY,CACVI,QAAS,QACT9H,MAAO,GACPwH,OAAQ,GACRE,gBACE,mUAGFK,QAAS,MAEX,kBAAmB,CACjBT,gBAAiB,cAsJRpH,YAAQ,KAAK,CAACR,eAAasI,YPhDf,SAACC,EAAG1K,GAAJ,OAAW,SAACC,EAASyB,GAC5C,IAAId,EAAQc,IAAWC,eAAef,MAEtC,OADAV,IAAMC,SAASC,QAAQC,OAAvB,8BAA0DO,GACnDV,IAAMI,KAAN,2EAA+EoK,GAAK1K,GAC1FO,MAAK,SAAAC,GAAG,OAAEP,EAAS,CAChBgB,KAAMpB,OAETU,MAAK,SAAAC,GACFwB,MAAM,+COwCCW,EAlJE,SAACK,GACd,IAAMC,EAAUiE,cACTN,EAAY5D,EAAM2H,SAAlB/D,SAFiB,EAGIzD,mBAAS,GAHb,mBAGjByH,EAHiB,KAGTC,EAHS,OAIe1H,mBAAS,GAJxB,mBAIjB2H,EAJiB,KAIJC,EAJI,OAKa5H,oBAAS,GALtB,mBAKjB6H,EALiB,KAKLC,EALK,OAMC9H,mBAAS,IANV,mBAMX+H,GANW,aAOK/H,mBAAS,IAPd,gCAQKA,mBAAS,KARd,gCASCA,mBAAS,KATV,mBAUlBgI,GAVkB,UAUPxC,oBACXyC,EAAYzC,mBACZ0C,EAAe1C,mBACf2C,EAAW3C,mBAmDb4C,EAAiB,uCAAG,sBAAAxJ,EAAA,sEAClBuJ,EAASE,QAAQlC,aADC,uBAElBgC,EAASE,QAAQnC,WAFC,uBAIlBiC,EAASE,QAAQjC,YAJC,4BANxBtG,EAAQC,KAAK,cAMW,2CAAH,qDAQrB,OACI,sBAAK7B,UAAU,WAAf,UACI,sBAAKA,UAAU,gBAAf,UACI,sBAAKA,UAAU,kCAAf,UACI,sBAAKoD,MAAO,CAACgH,WAAmD,qBAAhC7E,EAASA,SAASgE,EAAO,GAAqB,UAAY,UAAYvJ,UAAU,wCAAhH,UAAwJ,cAAC,IAAD,CAAiByC,KAAMC,MAA/K,gCACA,qBAAKU,MAAO,CAACgH,WAAmD,qBAAhC7E,EAASA,SAASgE,EAAO,GAAqB,UAAY,UAAYvJ,UAAU,uCAAhH,SAA+L,qBAAhCuF,EAASA,SAASgE,EAAO,IAAsBhE,EAASA,SAASgE,EAAO,GAAGc,SAAS5K,UAE/M,qBAAhC8F,EAASA,SAASgE,EAAO,IAAsB,sBAAKvJ,UAAU,8BAAf,UACnD,sBAAKoD,MAAO,CAACgH,WAAmD,qBAAhC7E,EAASA,SAASgE,EAAO,GAAqB,UAAY,UAAYvJ,UAAU,oCAAhH,0CAAuK,cAAC,IAAD,CAAiByC,KAAME,SAC9L,qBAAKS,MAAO,CAACgH,WAAmD,qBAAhC7E,EAASA,SAASgE,EAAO,GAAqB,UAAY,UAAYvJ,UAAU,mCAAhH,SAA2L,qBAAhCuF,EAASA,SAASgE,EAAO,IAAgE,OAAzChE,EAASA,SAASgE,EAAO,GAAGc,SAAkE,OAA9C9E,EAASA,SAASgE,EAAO,GAAGc,SAAS5K,KAAe8F,EAASA,SAASgE,EAAO,GAAGe,YAAY7K,aAG/V,sBAAKO,UAAU,mBAAf,UACI,qBAAKA,UAAU,yBAAf,qCACA,qBAAKA,UAAU,4BAAf,SAAmF,OAAvCuF,EAASA,SAASgE,GAAQc,SAAoB9E,EAASA,SAASgE,GAAQc,SAAS5K,KAAO8F,EAASA,SAASgE,GAAQe,YAAY7K,OAC1K,sBAAKO,UAAU,6BAAf,UACI,qBAAKA,UAAU,kCAAf,SACE,qBAAKC,IAAKC,EAAMC,IAAI,WAEtB,qBAAKH,UAAU,kCAAf,SACA,cAAC,GAAD,CAAaqH,IAAK4C,EAAU5B,KAAM1G,EAAMyH,YAAa7I,IAAKoB,EAAMb,aAAcoC,GAAIvB,EAAM2H,SAAS/D,SAASrC,GAAIqC,SAAU5D,EAAM2H,SAAS/D,gBAG3I,sBAAKvF,UAAU,2BAAf,UACI,qBAAKA,UAAU,uCAAuCoD,MAAO,CAACgH,WAAYT,EAAc,SAAW,WAAnG,SACCpE,EAASA,SAAT,UAAqBgE,IAAUgB,KAAKC,KAAI,SAAUC,EAAKC,GACtD,OAAGA,EAAQjB,EAAa,EAEpB,cAACkB,GAAA,EAAD,CAAUC,SAAS,IAInB,cAACD,GAAA,EAAD,CAAUE,UAAQ,EAACD,SAAS,SAIlC,sBAAK5K,UAAU,iCAAiCoD,MAAO,CAACgH,WAAYT,EAAc,SAAW,WAA7F,mBAAiHF,EAAa,EAA9H,IAAkIlE,EAASA,SAAT,UAAqBgE,IAAUgB,KAAKO,gBAG9K,sBAAK9K,UAAU,mBAAf,UACI,qBAAKA,UAAU,+BAAf,SACI,wBAAQkD,GAAG,cAAcmE,IAAK2C,EAAczH,QAAS2H,EAArD,sCAEJ,sBAAKlK,UAAU,0BAA0BoD,MAAO,CAACgH,WAAYT,EAAc,SAAW,WAAtF,UACI,qBAAK3J,UAAU,gCAAf,+BACA,sBAAKA,UAAU,qCAAf,UACI,qBAAKA,UAAU,2CAAf,SAA2DuF,EAASA,SAAT,UAAqBgE,IAAUwB,mBAC1F,qBAAK/K,UAAU,uCAAf,eACA,qBAAKA,UAAU,2CAAf,SAA2DuF,EAASA,SAAT,UAAqBgE,IAAUyB,+BAC1F,qBAAKhL,UAAU,uCAAf,eACA,qBAAKA,UAAU,2CAAf,SAA2DuF,EAASA,SAAT,UAAqBgE,IAAU0B,kBAC1F,qBAAKjL,UAAU,uCAAf,eACA,qBAAKA,UAAU,2CAAf,SAA2DuF,EAASA,SAAT,UAAqBgE,IAAU2B,iCAE9F,qBAAKlL,UAAU,iCAAf,wCACA,sBAAKA,UAAU,kCAAf,UACKuF,EAASA,SAAT,UAAqBgE,IAAU4B,OADpC,QAGA,qBAAKnL,UAAU,iCAAf,+DACA,sBAAKA,UAAU,gCAAf,UACI,qBAAKA,UAAU,2CAAf,SAA0D,uBAAOqH,IAAKyC,EAAUsB,YAAa7F,EAASA,SAAT,UAAqBgE,IAAUgB,KAA/B,UAAuCd,IAAiB1G,SAxEvJ,WAClB8G,EAASC,EAASK,QAAQlH,QAuEsKC,GAAG,aAAamI,IAAI,IAAIC,IAAI,YACxM,qBAAKtL,UAAU,kCAAf,eACA,qBAAKA,UAAU,4CAAf,SAA4DuF,EAASA,SAAT,UAAqBgE,IAAUgB,KAA/B,UAAuCd,YAG3G,qBAAKzJ,UAAU,gCAAf,SACI,wBAAQqH,IAAK0C,EAAW3G,MAAO,CAACgH,WAAYT,EAAc,SAAW,WAAapH,QA5HnF,WASkB,KAA3BuH,EAASK,QAAQlH,QACnBsC,EAASA,SAAT,UAAqBgE,IAAUgB,KAA/B,UAAuCd,IAAiB8B,SAASzB,EAASK,QAAQlH,QAEpF,IAAIA,EAAQsI,SAASzB,EAASK,QAAQlH,OAClCmI,EAAcG,SAASzB,EAASK,QAAQiB,aACzCI,OAAOC,UAAUxI,IAaduI,OAAOC,UAAUL,IAZrBtB,EAASK,QAAQlH,MAAQ,GACxBwG,EAAa,EAAIlE,EAASA,SAASgE,GAAQgB,KAAKO,OACnDpB,EAAgBD,EAAa,GAE1BF,EAAO,GAAGhE,EAASA,SAASuF,OAC7BlB,GAAe,IAGjBJ,EAAUD,EAAO,GACjBG,EAAgB,KAgBhB/I,MAAM,qBAoF2GuC,GAAG,eAAtG,4C,wFC3JL5B,gBATS,SAACC,GACrB,MAAM,CACF+D,UAAW/D,EAAMgE,SAASD,UAAU3G,KACpC6G,gBAAiBjE,EAAMgE,SAASC,gBAChCC,aAAclE,EAAMgE,SAASE,aAAa9G,KAC1C+G,MAAOnE,EAAMgE,SAASG,MAAM/G,KAC5B+M,UAAWnK,EAAMgE,SAASmG,UAAU/M,QAG7B2C,EAnCkB,SAACK,GAC9B,OACI,mCACI,+BACI,6BAAiC,OAA5BA,EAAM4D,SAAS8E,SAAoB1I,EAAM4D,SAAS8E,SAAS5K,KAAOkC,EAAM4D,SAAS+E,YAAY7K,OAClG,6BAAKkC,EAAM4D,SAASgF,KAAKO,SACzB,6BACCnJ,EAAM4D,SAASgF,KAAKC,KAAI,SAACmB,EAAOjB,GAC7B,OAAIA,IAAU/I,EAAM4D,SAASgF,KAAKO,OAAO,EAEzC,+BAAOa,KAEHjM,QAAQC,IAAI+K,GACZhL,QAAQC,IAAIgC,EAAM4D,SAASgF,KAAKO,QAC5B,iCAAOa,EAAP,aAKZ,6BAAKhK,EAAM4D,SAASqG,OACpB,+BAAKjK,EAAM4D,SAAS4F,OAApB,SACA,+BAAKxJ,EAAM4D,SAASwF,iBAApB,IAAuCpJ,EAAM4D,SAASyF,6BAAtD,IAAqFrJ,EAAM4D,SAAS0F,gBAApG,IAAsHtJ,EAAM4D,SAAS2F,uC,6BCd/IW,GAAe,CACjB7F,SAAU,QACV8F,IAAK,MACLC,KAAM,MACNC,UAAW,uBACXtD,gBAAiB,UACjBuD,QAAS,OACTC,OAAQ,IAENC,GAAiB,CACnBnG,SAAS,QACT8F,IAAI,EACJC,KAAK,EACLK,MAAM,EACNC,OAAO,EACP3D,gBAAiB,iBACjBwD,OAAO,GACP7I,MAAO,eAgGI/B,gBAjBS,SAACC,GACrB,MAAM,CACFhC,MAAQgC,EAAMjB,eAAef,MAC7BiG,gBAAiBjE,EAAMgE,SAASC,gBAChC8G,mBAAoB/K,EAAMgE,SAAS+G,mBACnCC,YAAahL,EAAMgE,SAASgH,YAC5BC,gBAAiBjL,EAAMgE,SAASiH,oBAIb,kBAAK,SAAA5N,GAC5B,MAAO,CACL6N,eAAgB,SAACC,GAAD,OAAM9N,GTREyK,ESQsBqD,ETRjB,SAAC9N,EAASyB,GACzC,IAAId,EAAQc,IAAWC,eAAef,MAEtC,OADAV,IAAMC,SAASC,QAAQC,OAAvB,8BAA0DO,GACnDV,IAAM8N,OAAN,iEAAuEtD,IAC7EnK,MAAK,SAAAC,GACFwB,MAAM,wCAETb,MAAM,4DAPmB,IAAAuJ,GSSxBvI,aAAc,kBAAKlC,EAASkC,MAC5B8L,mBAAoB,SAACF,EAAEG,GAAH,OAAQjO,GTqBCyK,ESrB2BqD,ETqBxB/N,ESrB0BkO,ETqBlB,SAACjO,EAASyB,GACpD,IAAId,EAAQc,IAAWC,eAAef,MAGtC,OAFAV,IAAMC,SAASC,QAAQC,OAAvB,8BAA0DO,GAC1DG,QAAQC,IAAIhB,GACLE,IAAMI,KAAN,sEAA0EoK,GAAK1K,GACrFO,MAAK,SAAAC,GACFwB,MAAM,gDAETb,OAAM,SAAAc,GACHD,MAAM,uEAToB,IAAC0I,EAAG1K,OSlBvB2C,EA7Fc,SAAAK,GAAU,IAAD,EACPG,oBAAS,GADF,mBAC3BgL,EAD2B,KACpBC,EADoB,OAELjL,oBAAS,GAFJ,gCAGCA,mBAAS,IAAIkL,OAHd,mBAG3BC,EAH2B,KAGhBC,EAHgB,KAI5BC,EAAgB7F,iBAAO,MAKvB8F,EAAoB,uCAAG,sBAAA1M,EAAA,sEACnBiB,EAAM8K,eAAe9K,EAAM0L,QAAQnK,IADhB,uBAEnBvB,EAAMb,eAFa,uBAGnBa,EAAM2L,OAHa,2CAAH,qDAKpBC,EAAe,uCAAG,gCAAA7M,EAAA,6DACpBhB,QAAQC,IAAI,aACR6N,EAAYL,EAAchD,QAAQsD,MAAMxK,MAAMyK,MAAM,KACpDC,EAAUH,EAAU,GAAK,IAAMA,EAAU,GAAK,IAAOA,EAAU,GAC/DI,EAAO,CAAC,KAAQD,GAJA,SAKdhM,EAAMiL,mBAAmBjL,EAAM0L,QAAQnK,GAAG0K,GAL5B,uBAMdjM,EAAMb,eANQ,2CAAH,qDASrB,OAAO+M,IAASC,aACZ,qBAAK9N,UAAU,uBAAuBoD,MAAO+I,GAA7C,SACI,sBAAKnM,UAAU,6BAA6BoD,MAAOyI,GAAnD,UACA,qBAAK7L,UAAU,mCAAf,SAAmD,+BAAM,cAAC,IAAD,CAAiBuC,QAAS,kBAAIZ,EAAM2L,QAAQ7K,KAAMsL,UAC3G,qBAAK/N,UAAU,mCAAf,SAAmD2B,EAAM8C,QACzD,sBAAKzE,UAAU,uCAAf,UACI,sBAAKA,UAAU,4CAAf,qCAAoF2B,EAAMyG,QAC1F,qBAAKpI,UAAU,4CAAf,SAA4D2B,EAAMiM,UAEtE,qBAAK5N,UAAU,yCACf,qBAAKA,UAAU,yCAAf,SAAyD2B,EAAMqM,cAE/D,sBAAKhO,UAAU,sCAAf,UAKA,qBAAKA,UAAU,6CAAf,SACI,wBAAQuC,QAAS6K,EAAjB,iCAEJ,qBAAKpN,UAAU,6CAAf,SACI,wBAAQuC,QAvCS,WACzBZ,EAAMsM,SAASrM,QAAQC,KAAK,CAACqM,SAAS,YAAY3I,SAAS5D,EAAM0L,WAsCzD,kCAEJ,qBAAKrN,UAAU,6CAA6CuC,QAAS,kBAAIwK,GAAWD,IAApF,SACI,iCAASA,EAAS,qBAAuB,sCAG7C,sBAAK9M,UAAU,oCAAoCoD,MAAO,CAAC8F,QAAS4D,EAAS,OAAS,QAAtF,UACI,+BACI,cAAC,KAAD,CAAYzF,IAAK8F,EAAegB,OAAO,KAAKC,WAAW,aAAaC,SAAUpB,EAAYlK,SAAU,SAAA6K,GAAI,OAAIV,EAAcU,QAE9H,qBAAK5N,UAAU,2CAAf,SACI,wBAAQuC,QAASgL,EAAjB,iDAGR,qBAAKvN,UAAU,uCAAf,SACI,wBAAOkD,GAAG,WAAV,UACA,+BACI,sDACA,8CACA,0DACA,6DACA,kDACA,yCAECvB,EAAM4D,SAASiF,KAAI,SAACjF,GAAD,OAAa,cAAC,GAAD,CAA0BA,SAAUA,iBAKjFf,SAAS8J,eAAe,Y,OC5FhCC,EAAQ,KAED,IAAMC,GAAb,+MACIjN,MAAQ,CACNkN,WAAU,EACVlJ,SAAS,KACTtB,MAAK,EACL2J,KAAM,KACNxF,KAAM,KACN4F,YAAa,GACbvJ,MAAO,IARb,EAaIiK,kBAAoB,SAACrM,GACnB,EAAKsM,SAAS,CACZF,WAAU,EACVlJ,SAASlD,EAAE1D,KACXsF,MAAO,EAAK1C,MAAM0C,KAClB2J,KAAOvL,EAAEuL,KACTxF,KAAM/F,EAAE+F,KACR4F,YAAa3L,EAAE2L,YACfvJ,MAAOpC,EAAEoC,MACT4I,QAAShL,EAAEuM,OAtBnB,EAyBIC,qBAAuB,WACrB,EAAKF,SAAS,CACZF,WAAU,KA3BlB,wDA+Bc,IAAD,EACsBK,KAAKvN,MAA3BkN,EADA,EACAA,UACHM,GAFG,EACUxJ,SACJ,IACbuJ,KAAKnN,MAAM2D,UAAUkF,KAAI,SAACnI,GACxB0M,EAAOlN,KAAK,CACV,MAASQ,EAAE5C,KACX,MAASuN,KAAKgC,MAAM3M,EAAEuL,MACtB,IAAOZ,KAAKgC,MAAM3M,EAAEuL,MACpB,KAAQvL,EAAEkD,SACV,KAAQlD,EAAEuL,KACV,KAAQvL,EAAE+F,KACV,YAAe/F,EAAE2L,YACjB,IAAO3L,OAGT,IAAM4M,EAAYC,aAAgBC,MACpC,OACE,mCACF,sBAAKnP,UAAU,WAAf,UACE,cAAC,KAAD,CAAUoP,QAAQ,QAAQC,MAAO,CAAC,SAAUC,YAAY,EAEtDP,OAAQA,EAAQQ,cAAeT,KAAKJ,kBAAmBO,UAAWA,EAAW7L,MAAO,CAAEwF,OAAQ,IAAIxH,MAAO,SAC1GqN,GAAa,cAAC,GAAD,CAAsBnB,KAAOwB,KAAKD,qBAAsBZ,SAAUa,KAAKnN,MAAO6N,KAAMV,KAAKvN,MAAMkN,UAAWlJ,SAAUuJ,KAAKvN,MAAMgE,SAAUqI,KAAMkB,KAAKvN,MAAMqM,KAAMxF,KAAM0G,KAAKvN,MAAM6G,KAAM4F,YAAac,KAAKvN,MAAMyM,YAAavJ,MAAOqK,KAAKvN,MAAMkD,MAAO4I,QAASyB,KAAKvN,MAAM8L,mBArD/R,GAA8BoC,IAAMC,WAoErBpO,gBAPS,SAACC,GACrB,MAAM,CAEF+D,UAAW/D,EAAMgE,SAASD,UAAU3G,KACpC6G,gBAAiBjE,EAAMgE,SAASC,mBAGD,CAACpF,kBAAgBU,eAAaC,YAAtDO,CAAiEkN,IC1DjEmB,I,OAnBc,SAAChO,GAI1B,OACI,sBAAK3B,UAAU,uDAAf,UACA,sBAAKA,UAAU,4DAAf,UACI,qBAAKA,UAAU,kEAAf,SAAkF2B,EAAM4D,SAAS9F,OACjG,sBAAKO,UAAU,uEAAf,UACA,qBAAKA,UAAU,iEAAf,SAAiF2B,EAAM4D,SAASqI,OAChG,qBAAK5N,UAAU,mEAAf,SAAkF,wBAAQuC,QAAS,kBATpFgD,EASuG5D,EAAM4D,cARhI5D,EAAMsM,SAASrM,QAAQC,KAAK,CAACqM,SAAU,YAAY3I,SAASA,IAD1C,IAACA,GASmE,wCAGtF,qBAAKvF,UAAU,+DAAf,SACK2B,EAAM4D,SAAS9F,YC6CbmQ,GA5DiB,SAACjO,GAC7BjC,QAAQC,IAAIgC,GACZ,IAAMC,EAAUiE,cAEVgK,EAAoB,WACtBjO,EAAQC,KAAK,sBAGjB,OACI,8CAASF,EAAMmO,YAAYhF,OAAO,EAAI,qCAC9B,sBAAK9K,UAAU,sCAAf,mCAAuE2B,EAAMmO,YAAYnO,EAAMmO,YAAYhF,OAAO,GAAG8C,QACrH,qBAAK5N,UAAU,qCAAf,SAAoD,wBAAQuC,QAASsN,EAAjB,oCACpD,sBAAK7P,UAAU,4CAAf,UACI,sBAAKA,UAAU,qDAAf,UACI,qBAAKA,UAAU,0DAAf,0BACA,sBAAKA,UAAU,4DAAf,UAA4E2B,EAAMmO,YAAYnO,EAAMmO,YAAYhF,OAAO,GAAGiF,aAA1H,aAEJ,sBAAK/P,UAAU,qDAAf,UACI,qBAAKA,UAAU,0DAAf,yBACA,sBAAKA,UAAU,4DAAf,UAA4E2B,EAAMmO,YAAYnO,EAAMmO,YAAYhF,OAAO,GAAGkF,YAA1H,YAEJ,sBAAKhQ,UAAU,qDAAf,UACI,qBAAKA,UAAU,0DAAf,mCACA,sBAAKA,UAAU,4DAAf,UAA4E2B,EAAMmO,YAAYnO,EAAMmO,YAAYhF,OAAO,GAAGmF,cAA1H,YAEJ,sBAAKjQ,UAAU,qDAAf,UACI,qBAAKA,UAAU,0DAAf,kCACA,sBAAKA,UAAU,4DAAf,UAA4E2B,EAAMmO,YAAYnO,EAAMmO,YAAYhF,OAAO,GAAGoF,aAA1H,aAEJ,sBAAKlQ,UAAU,qDAAf,UACI,qBAAKA,UAAU,0DAAf,6BACA,sBAAKA,UAAU,4DAAf,UAA4E2B,EAAMmO,YAAYnO,EAAMmO,YAAYhF,OAAO,GAAGqF,UAA1H,YAEJ,sBAAKnQ,UAAU,qDAAf,UACI,qBAAKA,UAAU,0DAAf,4BACA,sBAAKA,UAAU,4DAAf,UAA4E2B,EAAMmO,YAAYnO,EAAMmO,YAAYhF,OAAO,GAAGqF,UAA1H,YAEJ,sBAAKnQ,UAAU,qDAAf,UACI,qBAAKA,UAAU,0DAAf,kBACA,sBAAKA,UAAU,4DAAf,UAA4E2B,EAAMmO,YAAYnO,EAAMmO,YAAYhF,OAAO,GAAGK,OAA1H,WAEJ,sBAAKnL,UAAU,qDAAf,UACI,qBAAKA,UAAU,0DAAf,oBACA,sBAAKA,UAAU,4DAAf,UAA4E2B,EAAMmO,YAAYnO,EAAMmO,YAAYhF,OAAO,GAAGsF,OAA1H,eAlCsB,OAyClB,sBAAKpQ,UAAU,wCAAf,UACR,qBAAKA,UAAU,uCAAf,oCACA,qBAAKA,UAAU,qCAAf,SAAoD,wBAAQuC,QAASsN,EAAjB,oCACpD,oF,qBCjDpBV,OAAShB,OAAO,MAChB,IAwCe7M,eAAQ,MANI,kBAAK,SAAA1C,GAC5B,MAAO,CACLyR,YAAa,SAAC3D,GAAD,OAAM9N,GbyFEyK,EazFmBqD,EbyFd,SAAC9N,EAASyB,GACtC,IAAId,EAAQc,IAAWC,eAAef,MAEtC,OADAV,IAAMC,SAASC,QAAQC,OAAvB,8BAA0DO,GACnDV,IAAM8N,OAAN,8DAAoEtD,IAC1EnK,MAAK,SAAAC,GACFwB,MAAM,2CALa,IAAA0I,GaxFrBtI,SAAU,kBAAKnC,EAASmC,UAGfO,EAxCU,SAACK,GACtB,IAAM2O,EAAY,uCAAG,sBAAA5P,EAAA,sEACXiB,EAAM0O,YAAY1O,EAAM4O,KAAKrN,IADlB,uBAEXvB,EAAMZ,WAFK,2CAAH,qDAIdyP,EAAY7O,EAAM4O,KAClBE,EAAc,IAAIzD,KAClB0D,EAAKD,EAAYE,UACjBC,EAAKH,EAAYI,WAAW,EAC5BC,EAAOL,EAAYM,cAEpBL,EAAG,KAENA,EAAG,IAAD,OAAKA,IAERE,EAAG,KAEFA,EAAG,IAAD,OAAKA,IAEF,UAAME,EAAN,YAAcF,EAAd,YAAoBF,GACb,IAAI1D,KAAKwD,GACrB,OACI,sBAAKxQ,UAAU,8CAAf,UACA,sBAAKA,UAAU,mDAAf,UAAmE2B,EAAM4O,KAAKvC,YAAY,wBAAQzL,QAAS+N,EAAjB,8BAC1F,sBAAKtQ,UAAU,oDAAf,UACI,qBAAKA,UAAU,gEAAf,8CACA,qBAAKA,UAAU,2DAAf,SACI,cAAC,KAAD,CAAQmO,OAAO,KAAK6C,SAAO,EAA3B,SAA6BrP,EAAM4O,KAAK3C,SAE5C,qBAAK5N,UAAU,yDAAf,SAAyE2B,EAAM4O,KAAK3C,gBCsBjFtM,gBARS,SAACC,GACrB,MAAM,CACF+D,UAAW/D,EAAMgE,SAASD,UAAU3G,KACpC6G,gBAAiBjE,EAAMgE,SAASC,gBAChCC,aAAclE,EAAMgE,SAASE,aAAa9G,KAC1C+G,MAAOnE,EAAMgE,SAASG,MAAM/G,QAGG,CAACD,YAAU0B,kBAAgBU,eAAaC,YAAhEO,EAjDE,SAACK,GACd,IAAMC,EAAUiE,cAShB,OACI,sBAAK7F,UAAU,WAAf,UACI,qBAAKA,UAAU,kBAAf,2BAGA,sBAAKA,UAAU,sBAAf,UACA,sBAAKA,UAAU,2BAAf,UACA,sBAAKA,UAAU,2BAAf,UACI,qBAAKA,UAAU,iCAAf,yCACA,qBAAKA,UAAU,+BAAf,SAA8C,wBAAQuC,QAjB9C,WAChBX,EAAQC,KAAK,eAgByC,iCAC9C,qBAAK7B,UAAU,qCAAf,SACC2B,EAAM+D,MAAMoF,OAAO,EAAInJ,EAAM+D,MAAM8E,KAAI,SAAC+F,GAAD,OAAQ,cAAC,GAAD,CAAkBA,KAAMA,OAAU,+FAGtF,qBAAKvQ,UAAU,iCAAf,SACA,cAAC,GAAD,CAAyB8P,YAAanO,EAAM8D,oBAG5C,sBAAKzF,UAAU,mCAAf,UACI,qBAAKA,UAAU,yCAAf,wCACA,qBAAKA,UAAU,uCAAf,SAAsD,wBAAQuC,QAxBnD,WACnBX,EAAQC,KAAK,qBAuBiD,oCACtD,qBAAK7B,UAAU,8CAAf,SACK2B,EAAM2D,UAAUwF,OAAO,EAAInJ,EAAM2D,UAAUkF,KAAI,SAACjF,GAAD,OAAa,cAAC,GAAD,CAAsB0I,SAAUtM,EAAO4D,SAAUA,OAAc,wGCOjIjE,I,cAAAA,YAAQ,KAAK,CAAC2P,Uf0BJ,SAACtS,GAAD,OAAU,SAACC,EAASyB,GACzC,IAAId,EAAQc,IAAWC,eAAef,MAEtC,OADAV,IAAMC,SAASC,QAAQC,OAAvB,8BAA0DO,GACnDV,IAAMI,KAAK,mEAAmEN,GACpFO,MAAK,SAAAC,GACFwB,MAAM,iBAETb,OAAM,SAAAc,GACHlB,QAAQC,IAAIiB,EAAIC,eelCeE,YAAxBO,EAzCE,SAACK,GACd,IAAMC,EAAUiE,cADQ,EAEU/D,mBAAS,IAFnB,mBAEjBoP,EAFiB,KAENC,EAFM,OAGYrP,mBAAS,IAHrB,mBAGjBsP,EAHiB,KAGLC,EAHK,KAIlBC,EAAmBhK,iBAAO,IAS1BiK,EAAe,uCAAG,4BAAA7Q,EAAA,6DAChB/B,EAAO,CACP,KAAQyS,EACR,YAAeE,EAAiBnH,QAAQlH,OAHxB,SAKdtB,EAAMsP,UAAUtS,GALF,uBAMdgD,EAAMZ,WANQ,OAOpBa,EAAQC,KAAK,KAPO,2CAAH,qDAUrB,OACI,sBAAK7B,UAAU,WAAf,UACI,qBAAKA,UAAU,iBAAf,wCACA,sBAAKA,UAAU,sBAAf,UACI,qBAAKA,UAAU,kCAAf,SACI,cAAC,KAAD,CAAYmO,OAAO,KAAKqD,gBAAiB,eAAgBpD,WAAW,aAAaC,SAAU6C,EAAWnO,SAAU,SAAA6K,GAAI,OAvBjH,SAACA,GAChB,IAAI6D,EAAM7D,EAAK8D,SACXC,EAAQ/D,EAAKiD,WACbe,EAAOhE,EAAKmD,cAEhBM,EADeO,EAAO,IAAMD,EAAQ,IAAMF,GAE1CN,EAAavD,GAiBuHiE,CAAWjE,QAEvI,qBAAK5N,UAAU,mCAAf,SACI,uBAAOkD,GAAG,cAAcmE,IAAKiK,EAAkBlG,YAAY,iCAE/D,qBAAKpL,UAAU,8BAAf,SACI,wBAAQuC,QAASgP,EAAjB,6CCgBLjQ,I,OAAAA,YAAQ,MANI,kBAAK,SAAA1C,GAC5B,MAAO,CACLkT,kBAAmB,SAACpF,GAAD,OAAM9N,GhBkEEyK,EgBlEyBqD,EhBkEpB,SAAC9N,EAASyB,GAC5C,IAAId,EAAQc,IAAWC,eAAef,MAEtC,OADAV,IAAMC,SAASC,QAAQC,OAAvB,8BAA0DO,GACnDV,IAAM8N,OAAN,oEAA0EtD,IAChFnK,MAAK,SAAAC,GAAG,OAAEP,EAAS,CAChBgB,KJhGkC,kCIkGrCV,MAAK,SAAAC,GACFwB,MAAM,wCAETb,MAAM,4DAVsB,IAAAuJ,GgBjE3BjJ,gBAAiB,kBAAKxB,EAASwB,UAGtBkB,EAtDiB,SAACK,GAE7B,IAAMoQ,EAAuB,uCAAG,sBAAArR,EAAA,sEACtBiB,EAAMmQ,kBAAkBnQ,EAAMmO,YAAY5M,IADpB,uBAEtBvB,EAAMvB,kBAFgB,2CAAH,qDAI7B,OACI,qBAAKJ,UAAU,6CAAf,SACY,sBAAKA,UAAU,uDAAf,UACI,sBAAKA,UAAU,4DAAf,oBAAmF2B,EAAMmO,YAAYlC,QACrG,qBAAK5N,UAAU,uEAAf,SAAsF,wBAAQuC,QAAWwP,EAAnB,gCACtF,sBAAK/R,UAAU,gEAAf,UAEI,qBAAKA,UAAU,qEAAf,kBACA,sBAAKA,UAAU,uEAAf,UAAuF2B,EAAMmO,YAAY3E,OAAzG,YAEJ,sBAAKnL,UAAU,gEAAf,UACI,qBAAKA,UAAU,qEAAf,oBACA,sBAAKA,UAAU,uEAAf,UAAuF2B,EAAMmO,YAAYM,OAAzG,YAEJ,sBAAKpQ,UAAU,gEAAf,UACI,qBAAKA,UAAU,qEAAf,0BACA,sBAAKA,UAAU,uEAAf,UAAuF2B,EAAMmO,YAAYC,aAAzG,YAEJ,sBAAK/P,UAAU,gEAAf,UACI,qBAAKA,UAAU,qEAAf,yBACA,sBAAKA,UAAU,uEAAf,UAAuF2B,EAAMmO,YAAYE,YAAzG,YAEJ,sBAAKhQ,UAAU,gEAAf,UACI,qBAAKA,UAAU,qEAAf,mCACA,sBAAKA,UAAU,uEAAf,UAAuF2B,EAAMmO,YAAYG,cAAzG,YAEJ,sBAAKjQ,UAAU,gEAAf,UACI,qBAAKA,UAAU,qEAAf,kCACA,sBAAKA,UAAU,uEAAf,UAAuF2B,EAAMmO,YAAYI,aAAzG,YAEJ,sBAAKlQ,UAAU,gEAAf,UACI,qBAAKA,UAAU,qEAAf,uBACA,sBAAKA,UAAU,uEAAf,UAAuF2B,EAAMmO,YAAYK,UAAzG,YAEJ,sBAAKnQ,UAAU,gEAAf,UACI,qBAAKA,UAAU,qEAAf,sBACA,sBAAKA,UAAU,uEAAf,UAAuF2B,EAAMmO,YAAYkC,SAAzG,qBCGb1Q,gBARS,SAACC,GACrB,MAAM,CACF+D,UAAW/D,EAAMgE,SAASD,UAAU3G,KACpC6G,gBAAiBjE,EAAMgE,SAASC,gBAChCC,aAAclE,EAAMgE,SAASE,aAAa9G,KAC1C+G,MAAOnE,EAAMgE,SAASG,MAAM/G,QAGrB2C,EA5Ca,SAACK,GAAW,IAAD,EACIG,mBAASH,EAAM8D,cADnB,mBAC5BA,EAD4B,KACfwM,EADe,KA0BnC,OAxBA1N,qBAAU,WACN0N,GAAgB,WACZ,IAAIC,EACJ,OAAGvQ,EAAM8D,aAAaqF,OAAO,IACzBoH,EAAOvQ,EAAM8D,aAAa0M,MAAM,IAC3BA,MAAM,GAAGC,UACPF,GAEPA,EAAOvQ,EAAM8D,aAAa0M,MAAM,GAAGC,eAG7C,IACF7N,qBAAU,WACN0N,GAAgB,WACZ,IAAIC,EACJ,OAAGvQ,EAAM8D,aAAaqF,OAAO,IACzBoH,EAAOvQ,EAAM8D,aAAa0M,MAAM,IAC3BA,MAAM,GAAGC,UACPF,GAEPA,EAAOvQ,EAAM8D,aAAa0M,MAAM,GAAGC,eAG7C,CAACzQ,EAAM8D,eAEL,sBAAKzF,UAAU,sBAAf,UACI,qBAAKA,UAAU,4BAAf,0CACA,qBAAKA,UAAU,kCAAf,SACKyF,EAAa+E,KAAI,SAACsF,GAAD,OAAe,cAAC,GAAD,CAAyBA,YAAaA,e,mBCdxEuC,GAlBF,WACT,OACI,qBAAKrS,UAAU,OAAf,SACI,qBAAKA,UAAU,cAAf,SACI,sBAAKA,UAAU,uBAAf,UACI,qBAAKA,UAAU,yBACf,qBAAKA,UAAU,yBACf,qBAAKA,UAAU,uBAAf,SACI,qBAAKA,UAAU,4BAAf,SACI,qBAAKC,IAAKC,EAAMC,IAAI,qBC2CjCmB,I,OAAAA,aAPS,SAACC,GACrB,MAAM,CAEFkE,aAAclE,EAAMgE,SAASE,aAAa9G,QAIX,CAACyB,mBAAzBkB,EAhDgB,SAACK,GAC5B,IAAMC,EAAUiE,cAIhB,OACI,sBAAK7F,UAAU,yBAAf,UACI,cAAC,GAAD,IACA,qBAAKA,UAAU,+BAAf,wEACA,qBAAKA,UAAU,qCAAf,0BACmBqE,IAAlB1C,EAAM2Q,QACP,sBAAKtS,UAAU,mCAAf,UACI,sBAAKA,UAAU,4CAA4CoD,MAAO,CAACC,MAAO1B,EAAM2Q,QAAQnH,QAAUxJ,EAAM4Q,QAAQpH,OAAS,MAAQ,SAAjI,kBAAiJ,iCAAOxJ,EAAM2Q,QAAQnH,OAAQ,KAAMxJ,EAAM4Q,QAAQpH,aAClM,sBAAKnL,UAAU,4CAA4CoD,MAAO,CAACC,MAAO1B,EAAM2Q,QAAQlC,QAAUzO,EAAM4Q,QAAQnC,OAAS,MAAQ,SAAjI,oBAAmJ,iCAAOzO,EAAM2Q,QAAQlC,OAAQ,KAAMzO,EAAM4Q,QAAQnC,aACpM,sBAAKpQ,UAAU,4CAA4CoD,MAAO,CAACC,MAAO1B,EAAM2Q,QAAQtC,aAAerO,EAAM4Q,QAAQvC,YAAc,MAAQ,SAA3I,yBAAkK,iCAAOrO,EAAM2Q,QAAQtC,YAAa,KAAMrO,EAAM4Q,QAAQvC,kBACxN,sBAAKhQ,UAAU,4CAA4CoD,MAAO,CAACC,MAAO1B,EAAM2Q,QAAQvC,cAAgBpO,EAAM4Q,QAAQxC,aAAe,MAAQ,SAA7I,0BAAqK,iCAAOpO,EAAM2Q,QAAQvC,aAAc,KAAMpO,EAAM4Q,QAAQxC,mBAC5N,sBAAK/P,UAAU,4CAA4CoD,MAAO,CAACC,MAAO1B,EAAM2Q,QAAQpC,cAAgBvO,EAAM4Q,QAAQrC,aAAe,MAAQ,SAA7I,kCAAwK,iCAAOvO,EAAM2Q,QAAQpC,aAAc,KAAMvO,EAAM4Q,QAAQrC,mBAC/N,sBAAKlQ,UAAU,4CAA4CoD,MAAO,CAACC,MAAO1B,EAAM2Q,QAAQrC,eAAiBtO,EAAM4Q,QAAQtC,cAAgB,MAAQ,SAA/I,mCAA2K,iCAAOtO,EAAM2Q,QAAQrC,cAAe,KAAMtO,EAAM4Q,QAAQtC,oBACnO,sBAAKjQ,UAAU,4CAA4CoD,MAAO,CAACC,MAAO1B,EAAM2Q,QAAQN,UAAYrQ,EAAM4Q,QAAQP,SAAW,MAAQ,SAArI,uBAA0J,iCAAOrQ,EAAM2Q,QAAQN,SAAU,KAAMrQ,EAAM4Q,QAAQP,eAC7M,sBAAKhS,UAAU,4CAA4CoD,MAAO,CAACC,MAAO1B,EAAM2Q,QAAQnC,WAAaxO,EAAM4Q,QAAQpC,UAAY,MAAQ,SAAvI,wBAA6J,iCAAOxO,EAAM2Q,QAAQnC,UAAW,KAAMxO,EAAM4Q,QAAQpC,gBACjN,qBAAKnQ,UAAU,iDAElB,sBAAKA,UAAU,mCAAf,UACG,sBAAKA,UAAU,4CAAf,kBAAiE,+BAAO2B,EAAM4Q,QAAQpH,YACtF,sBAAKnL,UAAU,4CAAf,oBAAmE,+BAAO2B,EAAM4Q,QAAQnC,YACxF,sBAAKpQ,UAAU,4CAAf,yBAAwE,+BAAO2B,EAAM4Q,QAAQvC,iBAC7F,sBAAKhQ,UAAU,4CAAf,0BAAyE,+BAAO2B,EAAM4Q,QAAQxC,kBAC9F,sBAAK/P,UAAU,4CAAf,kCAA4E,+BAAO2B,EAAM4Q,QAAQrC,kBACjG,sBAAKlQ,UAAU,4CAAf,mCAA6E,+BAAO2B,EAAM4Q,QAAQtC,mBAClG,sBAAKjQ,UAAU,4CAAf,uBAAsE,+BAAO2B,EAAM4Q,QAAQP,cAC3F,sBAAKhS,UAAU,4CAAf,wBAAuE,+BAAO2B,EAAM4Q,QAAQpC,eAChG,qBAAKnQ,UAAU,iDAEf,qBAAKA,UAAU,iCAAf,SACI,wBAAQuC,QAhCS,WACzBX,EAAQC,KAAK,MA+BL,4BC8HDP,gBALS,SAACC,GACrB,MAAM,CACFkE,aAAclE,EAAMgE,SAASE,aAAa9G,QAGX,CAAC6T,gBpBhFT,SAAC7T,GAAD,OAAU,SAACC,EAASyB,GAC/CzB,EAAS,CAACgB,KAAM7B,IAChB,IAAIwB,EAAQc,IAAWC,eAAef,MAEtC,OADAV,IAAMC,SAASC,QAAQC,OAAvB,8BAA0DO,GACnDV,IAAMI,KAAK,qEAAqEN,GACtFO,MAAK,SAAAC,GAAG,OAAEP,EAAS,CAChBgB,KJ5EgC,gCI8EnCE,OAAM,SAAAc,GACHlB,QAAQC,IAAIiB,EAAIC,eoBuEgCT,mBAAzCkB,EA9JS,SAACK,GAAW,IAAD,EACJG,mBAAS,GADL,mBACxBqJ,EADwB,KACjBsH,EADiB,OAEJ3Q,mBAAS,GAFL,mBAExBsO,EAFwB,KAEjBsC,EAFiB,OAGI5Q,mBAAS,GAHb,mBAGxB6Q,EAHwB,KAGbC,EAHa,OAIM9Q,mBAAS,GAJf,mBAIxB+Q,EAJwB,KAIZC,EAJY,OAKMhR,mBAAS,GALf,mBAKxBiR,EALwB,KAKZC,EALY,OAMQlR,mBAAS,GANjB,mBAMxBmR,EANwB,KAMXC,EANW,OAOFpR,mBAAS,GAPP,mBAOxBqR,EAPwB,KAOhBC,EAPgB,OAQAtR,mBAAS,GART,mBAQxBuR,EARwB,KAQfC,EARe,OASFxR,mBAAS,GATP,mBASxByR,EATwB,aAUFzR,oBAAS,IAVP,mBAUxB0R,EAVwB,KAUhBC,EAVgB,OAWR3R,qBAXQ,mBAWxBnD,EAXwB,KAWnB+U,EAXmB,KAYzBC,EAAYrM,iBAAO,MAZM,EAaFxF,oBAAS,WAClC,YAAuDuC,IAApD1C,EAAM8D,aAAa9D,EAAM8D,aAAaqF,OAAO,GACrCnJ,EAAM8D,aAAa9D,EAAM8D,aAAaqF,OAAO,QAEpD,KAjBuB,mBAaxBwH,EAbwB,KAahBsB,EAbgB,QAoBG9R,mBAAS,IAAIkL,MApBhB,qCAqBKlL,mBAAS,IAAIkL,OArBlB,qBAqBxBoE,GArBwB,MAqBZC,GArBY,MAwD/B,OADAwC,0BAAe,KAAKC,MAEhB,qBAAK9T,UAAU,kBAAf,SACKwT,EAAU,cAAC,GAAD,CAAwBjB,QAAS5T,EAAM2T,QAASA,IAC3D,qCACA,qBAAKtS,UAAU,wBAAf,2BACA,sBAAKA,UAAU,6BAAf,eACaqE,IAAZiO,GAAyB,sBAAKtS,UAAU,uDAAf,UACtB,qBAAKA,UAAU,6DAAf,4BAEA,qBAAKA,UAAU,6DAAf,SACI,qBAAKA,UAAU,mEAAf,SACKsS,EAAQ1E,SAGjB,sBAAK5N,UAAU,iEAAf,UACA,sBAAKA,UAAU,0EAAf,UACI,qBAAKA,UAAU,+EAAf,kBACA,sBAAKA,UAAU,iFAAf,UAAiGsS,EAAQnH,OAAzG,YAEA,sBAAKnL,UAAU,0EAAf,UACA,qBAAKA,UAAU,+EAAf,oBACA,sBAAKA,UAAU,iFAAf,UAAiGsS,EAAQlC,OAAzG,YAEA,sBAAKpQ,UAAU,0EAAf,UACA,qBAAKA,UAAU,+EAAf,0BACA,sBAAKA,UAAU,iFAAf,UAAiGsS,EAAQvC,aAAzG,WAEA,sBAAK/P,UAAU,0EAAf,UACA,qBAAKA,UAAU,+EAAf,yBACA,sBAAKA,UAAU,iFAAf,UAAiGsS,EAAQtC,YAAzG,YAEA,sBAAKhQ,UAAU,0EAAf,UACA,qBAAKA,UAAU,+EAAf,mCACA,sBAAKA,UAAU,iFAAf,UAAiGsS,EAAQrC,cAAzG,YAEA,sBAAKjQ,UAAU,0EAAf,UACA,qBAAKA,UAAU,+EAAf,kCACA,sBAAKA,UAAU,iFAAf,UAAiGsS,EAAQpC,aAAzG,YAEA,sBAAKlQ,UAAU,0EAAf,UACA,qBAAKA,UAAU,+EAAf,uBACA,sBAAKA,UAAU,iFAAf,UAAiGsS,EAAQnC,UAAzG,YAEA,sBAAKnQ,UAAU,0EAAf,UACA,qBAAKA,UAAU,+EAAf,sBACA,sBAAKA,UAAU,iFAAf,UAAiGsS,EAAQN,SAAzG,kBAIR,sBAAKhS,UAAU,uDAAf,UACA,qBAAKA,UAAU,6DAAf,6BACI,qBAAKA,UAAU,6DAAf,SACI,qBAAKA,UAAU,mEAAf,SACA,cAAC,KAAD,CAAYqH,IAAKsM,EAAWxF,OAAO,KAAKC,WAAW,aAAaC,SAAU+C,GAAYrO,SAAU,SAAA6K,GAAI,OAAIyD,GAAczD,UAE1H,sBAAK5N,UAAU,iEAAf,UACA,sBAAKA,UAAU,0EAAf,UACI,qBAAKA,UAAU,+EAAf,kBACA,qBAAKA,UAAU,iFAAf,SAAgG,uBAAO+C,SAAU,SAACV,GAAKoQ,EAAUlH,SAASlJ,EAAEW,OAAOC,SAAUrD,KAAK,SAASyL,IAAI,IAAIC,IAAI,MAAMF,YAAY,yBAE7M,sBAAKpL,UAAU,0EAAf,UACI,qBAAKA,UAAU,+EAAf,oBACA,qBAAKA,UAAU,iFAAf,SAAgG,uBAAO+C,SAAU,SAACV,GAAKqQ,EAAUnH,SAASlJ,EAAEW,OAAOC,SAAUrD,KAAK,SAASyL,IAAI,IAAIC,IAAI,MAAMF,YAAY,sBAE7M,sBAAKpL,UAAU,0EAAf,UACI,qBAAKA,UAAU,+EAAf,0BACA,qBAAKA,UAAU,iFAAf,SAAgG,uBAAO+C,SAAU,SAACV,GAAKyQ,EAAevH,SAASlJ,EAAEW,OAAOC,SAAUrD,KAAK,SAASyL,IAAI,IAAIC,IAAI,MAAKF,YAAY,sBAEjN,sBAAKpL,UAAU,0EAAf,UACI,qBAAKA,UAAU,+EAAf,yBACA,qBAAKA,UAAU,iFAAf,SAAgG,uBAAO+C,SAAU,SAACV,GAAKuQ,EAAcrH,SAASlJ,EAAEW,OAAOC,SAAUrD,KAAK,SAASyL,IAAI,IAAIC,IAAI,MAAKF,YAAY,qBAEhN,sBAAKpL,UAAU,0EAAf,UACI,qBAAKA,UAAU,+EAAf,mCACA,qBAAKA,UAAU,iFAAf,SAAgG,uBAAO+C,SAAU,SAACV,GAAK6Q,EAAgB3H,SAASlJ,EAAEW,OAAOC,SAAUrD,KAAK,SAASyL,IAAI,IAAIC,IAAI,MAAKF,YAAY,+BAElN,sBAAKpL,UAAU,0EAAf,UACI,qBAAKA,UAAU,+EAAf,kCACA,qBAAKA,UAAU,iFAAf,SAAgG,uBAAO+C,SAAU,SAACV,GAAK2Q,EAAezH,SAASlJ,EAAEW,OAAOC,SAAUrD,KAAK,SAASyL,IAAI,IAAIC,IAAI,MAAMF,YAAY,8BAElN,sBAAKpL,UAAU,0EAAf,UACI,qBAAKA,UAAU,+EAAf,uBACA,qBAAKA,UAAU,iFAAf,SAAgG,uBAAO+C,SAAU,SAACV,GAAKiR,EAAY/H,SAASlJ,EAAEW,OAAOC,SAAUrD,KAAK,SAASyL,IAAI,IAAIC,IAAI,MAAKF,YAAY,mBAE9M,sBAAKpL,UAAU,0EAAf,UACI,qBAAKA,UAAU,+EAAf,sBACA,qBAAKA,UAAU,iFAAf,SAAgG,uBAAO+C,SAAU,SAACV,GAAK+Q,EAAW7H,SAASlJ,EAAEW,OAAOC,SAAUrD,KAAK,SAASyL,IAAI,IAAIC,IAAI,MAAMF,YAAY,kBAE9M,qBAAKpL,UAAU,0EAAf,SACI,qBAAKA,UAAU,iFAAf,SAAgG,wBAAQuC,QApH1F,WAAM,4CAChC,sBAAA7B,EAAA,sEACUiB,EAAM6Q,gBAAgB7T,GADhC,uBAEUgD,EAAMvB,kBAFhB,4CADgC,sBAKhC,IAAIoN,EAAYmG,EAAUxJ,QAAQsD,MAAMxK,MAAMyK,MAAM,KAEhD/O,EACJ,CACI,KAHU6O,EAAU,GAAK,IAAMA,EAAU,GAAK,IAAOA,EAAU,GAI/D,OAASrC,EACT,OAASiF,EACT,YAAcuC,EACd,aAAeE,EACf,cAAgBI,EAChB,aAAeF,EACf,SAAWI,EACX,UAAYE,EACZ,QAAUE,GAGdK,EAAWjS,EAAM8D,aAAa9D,EAAM8D,aAAaqF,OAAO,IArBvB,WAAD,wBAsBhCiJ,GACAL,EAAQ/U,GACR8U,GAAW,IA4FiG,oD,SCyGrGnS,I,OAAAA,aAVS,SAACC,GACrB,MAAM,CACF+D,UAAW/D,EAAMgE,SAASD,UAAU3G,KACpC6G,gBAAiBjE,EAAMgE,SAASC,gBAChCC,aAAclE,EAAMgE,SAASE,aAAa9G,KAC1C+G,MAAOnE,EAAMgE,SAASG,MAAM/G,KAC5B+M,UAAWnK,EAAMgE,SAASmG,UAAU/M,KACpCqV,aAAczS,EAAMgE,SAASyO,gBAGE,CAACvT,eAAawT,gBrB9JtB,SAACtV,GAAD,OAAU,SAACC,EAASyB,GAC/C,IAAId,EAAQc,IAAWC,eAAef,MAClC2U,EAAW,CAAC,KAAQvV,GAExB,OADAE,IAAMC,SAASC,QAAQC,OAAvB,8BAA0DO,GACnDV,IAAMI,KAAK,8DAA8DiV,GAC/EpU,OAAM,SAAAc,GACHD,MAAM,0CqBwJuDG,eAAaN,gBAAnEc,EAxPQ,SAACK,GACpB,IAAMC,EAAUiE,cAChBgO,0BAAe,KAAKC,MAFU,MAGIhS,mBAAS,IAAIkL,MAHjB,mBAGvBkE,EAHuB,KAGZC,EAHY,OAImBrP,oBAAS,GAJ5B,mBAIvBqS,EAJuB,KAILC,EAJK,OAKKtS,mBAAS,MALd,mBAKvBuS,EALuB,KAKXC,EALW,OAMOxS,mBAAS,CAACoB,GAAI,GAAIzD,KAAK,KAN9B,mBAMvB6K,EANuB,KAMXiK,EANW,OAOCzS,mBAAS,CAACoB,GAAI,GAAIzD,KAAK,KAPxB,mBAOvB4K,EAPuB,KAOdmK,EAPc,OAQH1S,mBAAS,GARN,mBAQvByH,EARuB,KAQhBC,EARgB,OASO1H,mBAAS,GAThB,mBASvB2S,EATuB,KASXC,EATW,OAUP5S,mBAAS,IAVF,mBAUvB8J,EAVuB,KAUlB+I,EAVkB,OAWH7S,mBAAS,GAXN,mBAWvBqJ,EAXuB,KAWhBsH,EAXgB,OAYe3Q,mBAAS,GAZxB,mBAYvB8S,EAZuB,KAYPC,EAZO,OAayB/S,mBAAS,GAblC,mBAavBgT,EAbuB,KAaFC,EAbE,QAcajT,mBAAS,GAdtB,qBAcvBkT,GAduB,MAcRC,GAdQ,SAeuBnT,mBAAS,GAfhC,qBAevBoT,GAfuB,MAeHC,GAfG,SAgBmBrT,mBAAS,IAhB5B,qBAgBvBsT,GAhBuB,MAgBLC,GAhBK,SAiBLvT,mBAAS,IAjBJ,qBAiBvBwT,GAjBuB,MAiBjBC,GAjBiB,SAkBOzT,mBAAS,IAlBhB,qBAkBvB0T,GAlBuB,MAkBXC,GAlBW,MAmBxBC,GAAmBpO,iBAAO,MAC1BqO,GAAuBrO,iBAAO,MAC9B6F,GAAgB7F,iBAAO,MACvBsO,GAAmBtO,iBAAO,MAC1BuO,GAA2B,WAC7BjU,EAAQC,KAAK,eA0CXiU,GAAoB,uCAAG,sBAAApV,EAAA,sEACnBiB,EAAMsS,gBAAgB2B,GAAiBzL,QAAQlH,OAD5B,uBAEnBtB,EAAMnB,eAFa,2CAAH,qDAKpBuV,GAAsB,SAAC1T,EAAE2T,GACV,OAAd3B,IACCA,EAAUjR,MAAMiC,WAAa,WAEjCiP,EAAajS,EAAEW,QACftD,QAAQC,IAAIwU,GACa,GAArBA,GACJK,EAAY,CAACtR,GAAG8S,EAAQ9S,KACxBsR,EAAY,CAAC/U,KAAKuW,EAAQvW,OAC1B4C,EAAEW,OAAOI,MAAMiC,WAAa,YAExBkP,EAAe,CAACrR,GAAG8S,EAAQ9S,KAC3BqR,EAAe,CAAC9U,KAAKuW,EAAQvW,OAC7B4C,EAAEW,OAAOI,MAAMiC,WAAa,YAgFpC,OACI,sBAAKrF,UAAU,iBAAf,UACI,qBAAKA,UAAU,uBAAf,8BACA,sBAAKA,UAAU,6BAAf,UACI,sBAAKA,UAAU,oCAAf,UACI,sBAAKA,UAAU,+CAAf,UACI,qBAAKA,UAAU,8DAA8DoD,MAAO,CAACC,MAAO8Q,EAAoB,QAAU,WAAa5R,QArEvH,WAChCiS,EAAY,CAACtR,GAAG,GAAGzD,KAAK,KACxB8U,EAAe,CAACrR,GAAG,GAAGzD,KAAK,KAC3B2U,GAAqB,IAkEL,4BACA,qBAAKpU,UAAU,0DAA0DoD,MAAO,CAACC,MAAO8Q,EAAoB,UAAY,SAAW5R,QAjEnH,WAChCiS,EAAY,CAACtR,GAAG,GAAGzD,KAAK,KACxB8U,EAAe,CAACrR,GAAG,GAAGzD,KAAK,KAC3B2U,GAAqB,IA8DL,oCAEJ,sBAAKpU,UAAU,iDAAiDoD,MAAO,CAAC8F,QAASiL,EAAoB,OAAS,QAA9G,UACI,qBAAKnU,UAAU,uDAAf,kEACA,+BACI,uBAAOqH,IAAKuO,GAAkBxK,YAAY,yCAE9C,qBAAKpL,UAAU,wDAAf,SACI,wBAAQuC,QAASuT,GAAjB,wBAIR,qBAAK9V,UAAU,0CAAf,qCACA,qBAAKA,UAAU,+CAAf,SACKmU,EAAoBxS,EAAMqS,aAAaxJ,KAAI,SAACwL,GAAD,OAAW,qBAAKhW,UAAU,yDAAwDuC,QAAS,SAACF,GAAD,OAAK0T,GAAoB1T,EAAE2T,IAA3G,SAAsHA,EAAQvW,UAAekC,EAAM+J,UAAUlB,KAAI,SAACwL,GAAD,OAAW,qBAAKhW,UAAU,yDAAwDuC,QAAS,SAACF,GAAD,OAAK0T,GAAoB1T,EAAE2T,IAA3G,SAAsHA,EAAQvW,YAErW,sBAAKO,UAAU,kDAAf,UACI,sBAAKA,UAAU,0DAAf,4DAA8G,+BAAM,uBAAOoL,YAAa7B,EAAQtG,MAAOsG,EAAQxG,SAAU,SAACV,GAAD,OAAKmH,EAAU+B,SAASlJ,EAAEW,OAAOC,gBAC1M,sBAAKjD,UAAU,gEAAf,wEAAwH,+BAAM,uBAAOoL,YAAaqJ,EAAa1R,SAAU,SAACV,GAAD,OAAKqS,EAAenJ,SAASlJ,EAAEW,OAAOC,gBAC/M,sBAAKjD,UAAU,wDAAf,0CAAoG,+BAAM,uBAAOoL,YAAaQ,EAAM7I,SAAU,SAACV,GAAD,OAAKsS,EAAQpJ,SAASlJ,EAAEW,OAAOC,gBAC7K,sBAAKjD,UAAU,0DAAf,2DAAwG,+BAAM,uBAAOoL,YAAaD,EAAQpI,SAAU,SAACV,GAAD,OAAKoQ,EAAUlH,SAASlJ,EAAEW,OAAOC,gBACrL,sBAAKjD,UAAU,mEAAf,sCAA2G,+BAAM,uBAAOoL,YAAawJ,EAAiB7R,SAAU,SAACV,GAAD,OAAKwS,EAAmBtJ,SAASlJ,EAAEW,OAAOC,gBAC1M,sBAAKjD,UAAU,6EAAf,gDAA+H,+BAAM,uBAAOoL,YAAa0J,EAAsB/R,SAAU,SAACV,GAAD,OAAK0S,EAAwBxJ,SAASlJ,EAAEW,OAAOC,gBACxO,sBAAKjD,UAAU,kEAAf,sCAA0G,+BAAM,uBAAOoL,YAAa4J,GAAgBjS,SAAU,SAACV,GAAD,OAAK4S,GAAkB1J,SAASlJ,EAAEW,OAAOC,gBACvM,sBAAKjD,UAAU,4EAAf,gDAA8H,+BAAM,uBAAOoL,YAAa8J,GAAqBnS,SAAU,SAACV,GAAD,OAAK8S,GAAuB5J,SAASlJ,EAAEW,OAAOC,sBAG7O,sBAAKjD,UAAU,qCAAf,UACI,sBAAKA,UAAU,4CAA4CuC,QAhHjD,SAACF,GACvB,GAAkB,OAAdgS,EAAmB,CA/CvBoB,IAAe,SAAAQ,GAAS,6BAAQA,GAAR,CAAmB,CACvC5L,SAAW,CAACA,YACZC,YAAa,CAACA,eACdf,OAAQ,CAACA,UACTkL,YAAa,CAACA,eACd7I,KAAM,CAACA,QACPT,OAAQ,CAACA,UACTyJ,gBAAgB,CAACA,mBACjBE,qBAAqB,CAACA,wBACtBE,eAAe,CAACA,mBAChBE,oBAAoB,CAACA,8BAuCzB,IAAI,IAAIgB,EAAE,EAAEA,EAAE3M,EAAO2M,IACjBb,IAAqB,SAAAc,GAAQ,6BAAQA,GAAR,CAAkB1B,OAhEnDc,IAAS,SAAAU,GAAS,6BAAQA,GAAR,CAAmB,CACjC5L,SAAW,CAACA,YACZC,YAAa,CAACA,eACdf,OAAQ,CAACA,UACTkL,YAAa,CAACA,eACd7I,KAAM,CAACA,QACPT,OAAQ,CAACA,UACTyJ,gBAAgB,CAACA,mBACjBE,qBAAqB,CAACA,wBACtBE,eAAe,CAACA,mBAChBE,oBAAoB,CAACA,8BAyDzBb,EAAUjR,MAAMiC,WAAa,UAC7BiP,EAAa,MAvCb9K,EAAU,QA0CN7I,MAAM,2DAqGE,qBAA+F,qCAAO,cAAC,IAAD,CAAiB8B,KAAME,YAC7H,qBAAK3C,UAAU,oDAAoDuC,QApFtD,WAAM,4CAC/B,WAAyB5D,GAAzB,SAAA+B,EAAA,sEACUiB,EAAMlB,aAAa9B,GAD7B,uBAEUgD,EAAMb,eAFhB,uBAGU+U,KAHV,4CAD+B,sBAM/B,GAAuC,KAAnCH,GAAiBvL,QAAQlH,MACzBtC,MAAM,yCACL,CACyC,KAAvCgV,GAAqBxL,QAAQlH,QAC5B0S,GAAqBxL,QAAQlH,MAAQyS,GAAiBvL,QAAQlH,OAYlE,IAVA,IAAIuK,EAAYL,GAAchD,QAAQsD,MAAMxK,MAAMyK,MAAM,KACpDC,EAAUH,EAAU,GAAK,IAAMA,EAAU,GAAK,IAAOA,EAAU,GAC/D4I,EAAQ,CACR3W,KAAMiW,GAAiBvL,QAAQlH,MAC/B+K,YAAa2H,GAAqBxL,QAAQlH,MAC1C2K,KAAMD,EACNpI,SAAU,IAEV8Q,EAAa,GACbC,EAAS,aAAOlB,IACZc,EAAE,EAAEA,EAAEV,GAAY1K,OAAOoL,IAAI,CACjC,IAAIK,EAAU,CAAChM,KAAM,IACwB,KAA1CiL,GAAYU,GAAG7L,SAASA,SAAS5K,KAChC8W,EAAO,SAAe,CAAC,KAASf,GAAYU,GAAG7L,SAASA,SAAS5K,MAEjE8W,EAAO,YAAkB,CAAC,KAASf,GAAYU,GAAG5L,YAAYA,YAAY7K,KAAK,KAAO,GAE1F8W,EAAO,6BAAiCf,GAAYU,GAAGpB,qBAAqBA,qBAC5EyB,EAAO,4BAAgCf,GAAYU,GAAGhB,oBAAoBA,oBAC1EqB,EAAO,OAAaf,GAAYU,GAAG/K,OAAOA,OAC1CoL,EAAO,OAAaf,GAAYU,GAAG3M,OAAOA,OAC1CgN,EAAO,KAAWf,GAAYU,GAAGtK,KAAKA,KAEtC,IADA,IAAI4K,EAAkB,GACdC,EAAE,EAAGA,EAAEjB,GAAYU,GAAG3M,OAAOA,OAAOkN,IAAI,CAC5C,IAAIC,EAAOJ,EAAUK,QACrBH,EAAgB3U,KAAK6U,GACrBH,EAAO,KAAWC,EAEtBJ,EAAK,SAAavU,KAAK0U,GACvBF,EAAWxU,KAAK0U,GAEpB7W,QAAQC,IAAIyW,GA3CgB,SAAD,2BA4C3BrC,CAAUqC,KAwCF,mCAGJ,sBAAKpW,UAAU,oCAAf,UACI,qBAAKA,UAAU,0CAAf,SAAyD,+BAAM,uBAAOqH,IAAKqO,GAAkBtK,YAAY,uBACzG,qBAAKpL,UAAU,yCAAf,SAAwD,+BACxD,cAAC,KAAD,CAAYqH,IAAK8F,GAAegB,OAAO,KAAKC,WAAW,aAAaC,SAAU6C,EAAWnO,SAAU,SAAA6K,GAAI,OAAIuD,EAAavD,UAExH,qBAAK5N,UAAU,gDAAf,SAA+D,+BAAM,uBAAOqH,IAAKsO,GAAsBvK,YAAY,aACnH,sBAAKpL,UAAU,8CAAf,UACI,qBAAKA,UAAU,oDAAf,4BAGA,qBAAKA,UAAU,uDAAf,SACI,wBAAOkD,GAAG,gBAAV,UACI,+BACI,gDACA,mDAGHoS,GAAMxK,OAAS,EAAIwK,GAAM9K,KAAI,SAACC,EAAKvH,GAChC,OACA,+BACqC,KAAhCuH,EAAKJ,SAASA,SAAS5K,KAAa,6BAAKgL,EAAKH,YAAYA,YAAY7K,OAAa,6BAAKgL,EAAKJ,SAASA,SAAS5K,OAChH,6BAAK,+BAAM,uBAAQ2L,YAAagK,GAAkBlS,GAAKH,SAAU,SAACV,GAAD,OAjHjE,SAACA,EAAE2T,GACnC,IAAIU,EAAI,aAAOtB,IACfsB,EAAKV,EAAQ9S,IAAMb,EAAEW,OAAOC,MAC5BoS,GAAqBqB,GA8GiFE,CAA4BvU,EAAE,CAACa,oBAG5G,4C,UCzKlB5B,gBAVU,SAACC,GACxB,MAAM,CACFhC,MAAQgC,EAAMjB,eAAef,MAC7BiG,gBAAiBjE,EAAMgE,SAASC,gBAChC8G,mBAAoB/K,EAAMgE,SAAS+G,mBACnCC,YAAahL,EAAMgE,SAASgH,YAC5BC,gBAAiBjL,EAAMgE,SAASiH,mBAIC,CAACpM,kBAAgBU,eAAaC,WAASP,eAAaqW,ezBjC7D,kBAAM,SAAAjY,GAChCA,EAAS,CACLgB,KAAMrC,OyB+BC+D,EAjDU,SAACK,GAoB1B,OAnBE4C,qBAAU,WACRC,SAASC,MAAQ,cACE,cAAhB9C,EAAMpC,MACPoC,EAAMkV,iBACClV,EAAMpC,OACboC,EAAMvB,kBACNuB,EAAMb,eACNa,EAAMZ,WACNY,EAAMnB,gBAENmB,EAAMC,QAAQC,KAAK,YAErB,IAEF0C,qBAAU,WACY,OAAhB5C,EAAMpC,OACRoC,EAAMC,QAAQC,KAAK,YAErB,CAACF,EAAMpC,QAEP,qBAAKS,UAAU,mBAAf,SACG2B,EAAM6D,iBAAmB7D,EAAM4K,aAAe5K,EAAM2K,oBAAsB3K,EAAM6K,gBAAmB,qCACpG,cAAC,GAAD,IACA,cAAC,GAAD,IACA,cAAC,IAAD,CAAOsK,OAAK,EAACpS,KAAK,IAAIC,UAAWoS,KACjC,cAAC,IAAD,CAAOrS,KAAK,YAAYC,UAAWqS,KACnC,cAAC,IAAD,CAAOtS,KAAK,YAAYC,UAAW6J,KACnC,cAAC,IAAD,CAAO9J,KAAK,mBAAmBC,UAAWsS,KAC1C,cAAC,IAAD,CAAOvS,KAAK,uBAAuBC,UAAWuS,KAC9C,cAAC,IAAD,CAAOxS,KAAK,kBAAkBC,UAAWwS,KACzC,cAAC,IAAD,CAAOzS,KAAK,sBAAsBC,UAAWyS,KAC7C,cAAC,IAAD,CAAO1S,KAAK,YAAYC,UAAW0S,KACnC,cAAC,IAAD,CAAOP,OAAK,EAACpS,KAAK,SAASC,UAAWL,KACtC,cAAC,IAAD,CAAOwS,OAAK,EAACpS,KAAK,YAAYC,UAAWE,OAEvC,cAAC,cAAD,SC3COyS,GAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBtY,MAAK,YAAkD,IAA/CuY,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,+CCJRO,GAAe,CACjBrS,aAAc,GACdH,UAAW,GACXI,MAAM,GACNqS,iBAAiB,GACjBC,kBAAkB,EAClBxS,iBAAiB,EACjByS,qBAAqB,EACrB3L,oBAAoB,EACpB4L,cAAc,EACd3L,aAAY,EACZ4L,kBAAkB,EAClB3L,iBAAgB,EAChB4L,YAAY,EACZpE,aAAa,GACbvM,QAAS,GACTC,QAAS,GACTC,MAAO,ICnBX,IAAMmQ,GAAe,CACjBvY,MAAO,KACPE,KAAM,KACN4Y,gBAAiB,KACjB7W,MAAO,GACP8B,eAAgB,GAChB7B,aAAa,EACb6W,oBAAqB,GACrB7Q,QAAS,GACTC,QAAS,GACTC,MAAO,ICRI4Q,kCAAgB,CAC3BhT,SFmBW,WAAiD,IAA3BhE,EAA0B,uDAApBuW,GAAaU,EAAO,uCAC3D,OAAOA,EAAO5Y,MACV,KAAKpC,EACD,oCACO+D,GADP,IAEI0W,qBAAoB,IAE5B,KAAKna,EACD,oCACOyD,GADP,IAEIkE,aAAa+S,EAAO3Y,QACpBoY,qBAAoB,EACpB3L,oBAAmB,IAE3B,KAAKpO,EACD,oCACOqD,GADP,IAEI4W,kBAAiB,IAErB,KAAKha,EACD,oCACOoD,GADP,IAEImK,UAAW8M,EAAO3Y,QAClB2M,iBAAiB,IAE7B,KAAK9O,EACD,oCACO6D,GADP,IAEIyW,kBAAiB,IAGzB,KAAKra,EACD,oCACO4D,GADP,IAEI+D,UAAUkT,EAAO3Y,QACjBmY,kBAAiB,EACjBxS,iBAAgB,IAExB,KAAK5H,EACD,oCACO2D,GADP,IAEI2W,cAAa,IAErB,KAAKra,EACD,oCACO0D,GADP,IAEImE,MAAM8S,EAAO3Y,QACbqY,cAAa,EACb3L,aAAY,IAGpB,KAAK9O,EAIL,KAAKM,EACD,uBACOwD,GAEX,KAAKjE,EACD,oCACOiE,GADP,IAEIkE,aAAc,GACdH,UAAW,GACXI,MAAM,GACNF,iBAAiB,EACjB+G,aAAa,EACbD,oBAAoB,IAE5B,KAAK/N,EACD,oCACOgD,GADP,IAEIyS,aAAawE,EAAO3Y,UAE5B,KAAKrB,EACD,uBACO+C,GAGX,KAAK9C,EACD,oCACO8C,GADP,IAEIkG,QAAS+Q,EAAOC,OAChB/Q,QAAS8Q,EAAOE,OAChB/Q,MAAO6Q,EAAOG,OAGtB,QACI,OAAOpX,IE1GfjB,eDQW,WAAgD,IAA3BiB,EAA0B,uDAApBuW,GAAaU,EAAO,uCAC1D,OAAOA,EAAO5Y,MACV,KAAKxC,EACD,oCACOmE,GADP,IAEIhC,MAAMiZ,EAAO3Y,QACb4B,aAAa,EACbD,MAAO,KAEf,KAAKxD,EACD,oCACOuD,GADP,IAEIC,MAAMgX,EAAO3Y,UAErB,KAAKxC,EACD,oCACOkE,GADP,IAEIhC,MAAMiZ,EAAO3Y,QAAQN,MACrBE,KAAK+Y,EAAO3Y,QAAQ2D,SACpB/B,aAAa,EACb6B,eAAgB,KAExB,KAAKrF,EACD,oCACOsD,GADP,IAEI+B,eAAekV,EAAO3Y,UAE9B,KAAKtC,EACD,oCACOgE,GADP,IAEIhC,MAAO,GACPkC,aAAa,IAErB,KAAKnD,EACD,oCACOiD,GADP,IAEIqX,WAAW,IAEnB,KAAKva,EAED,OADAqB,QAAQC,IAAI6Y,EAAO3Y,QAAQJ,MAC3B,6BACO8B,GADP,IAEIsX,UAAU,EACVR,iBAAiB,EACjB9Y,MAAOiZ,EAAO3Y,QAAQN,MACtBE,KAAM+Y,EAAO3Y,QAAQ2D,SACrBhC,MAAO,KAEf,KAAKpD,EAGD,OAFAiB,aAAauG,WAAW,SACxBvG,aAAauG,WAAW,QACxB,6BACOrE,GADP,IAEIhC,MAAM,KACNE,KAAM,KACN4Y,iBAAgB,EAChBO,WAAW,IAInB,QACI,OAAOrX,MEpEbuX,GAAa,CAACC,MAELC,GADDC,uBAAYC,GAFL,GAE8BC,+BAAoBC,mBAAe,WAAf,EAAmBN,M,cCG1FjL,IAASwL,OAEP,cAAC,IAAD,CAAUL,MAAOA,GAAjB,SACA,cAAC,KAAD,UACA,eAAC,IAAD,WACE,cAAC,IAAD,CAAOlC,OAAK,EAACpS,KAAK,WAAWC,UAAWL,KACxC,cAAC,IAAD,CAAOwS,OAAK,EAACpS,KAAK,cAAcC,UAAWL,KAC3C,cAAC,IAAD,CAAOK,UAAW2U,YAIpB9U,SAAS8J,eAAe,SAG1BgJ,O","file":"static/js/main.b293016e.chunk.js","sourcesContent":["export const FETCH_POSTS = 'FETCH_POSTS';\r\nexport const NEW_POST = 'NEW_POST';\r\nexport const POST_LOGIN = 'POST_LOGIN';\r\nexport const POST_LOGIN_SUCCESS = 'POST_LOGIN_SUCCESS';\r\nexport const POST_REGISTER = 'POST_REGISTER';\r\nexport const POST_LOGOUT = 'POST_LOGOUT';\r\nexport const POST_LOGOUT_AUTH = 'POST_LOGOUT_AUTH';\r\nexport const GET_MEASUREMENTS = 'GET_MEASUREMENTS';\r\nexport const POST_TRAINING = 'POST_TRAINING';\r\nexport const GET_TRAININGS = 'GET_TRAININGS';\r\nexport const GET_TRAININGS_FAILURE = 'GET_TRAININGS_FAILURE';\r\nexport const GET_TRAININGS_SUCCESS = 'GET_TRAININGS_SUCCESS';\r\nexport const GET_GOALS = 'GET_GOALS';\r\nexport const GET_GOALS_SUCCESS = 'GET_GOALS_SUCCESS';\r\nexport const GET_MEASUREMENTS_SUCCESS = 'GET_MEASUREMENTS__SUCCESS';\r\nexport const POST_MEASUREMENT = 'POST_MEASUREMENT';\r\nexport const POST_MEASUREMENT_SUCCESS = 'POST_MEASUREMENT_SUCCESS';\r\nexport const LOGIN_ERROR = 'LOGIN_ERROR';\r\nexport const REGISTER_ERROR = 'REGISTER_ERROR';\r\nexport const GET_EXERCISES = 'GET_EXERCISES';\r\nexport const GET_EXERCISES_SUCCESS = 'GET_EXERCISES_SUCCESS';\r\nexport const AUTH_ERROR = \"AUTH_ERROR\";\r\nexport const USER_LOADED = \"USER_LOADED\";\r\nexport const USER_LOADING = \"USER_LOADING\";\r\nexport const GET_TIME = \"GET_TIME\";\r\nexport const GET_TIME_SUCCESS = \"GET_TIME_SUCCESS\";\r\nexport const GET_TIME_RESET = \"GET_TIME_RESET\";\r\nexport const GET_OWN_EXERCISES_SUCCESS = \"GET_OWN_EXERCISES_SUCCESS\";\r\nexport const DELETE_MEASUREMENT_SUCCESS = \"DELETE_MEASUREMENT_SUCCESS\";\r\nexport const END_TRAINING_SUCCESS = \"END_TRAINING_SUCCESS\";\r\nexport const POST_TIME = \"POST_TIME\";\r\n\r\n\r\n","import {POST_LOGIN,POST_LOGOUT,POST_LOGOUT_AUTH,LOGIN_ERROR, POST_REGISTER,REGISTER_ERROR,USER_LOADING,USER_LOADED,AUTH_ERROR} from './types';\r\nimport axios from 'axios';\r\n\r\nexport const postLogin =(data)=>dispatch => {\r\n        delete axios.defaults.headers.common[\"Authorization\"];\r\n        axios.post('https://true-effects.herokuapp.com/api/login/',data)\r\n        .then(res=>{\r\n            window.localStorage.setItem('token',res.data.token)\r\n            window.localStorage.getItem('name',res.data.name)\r\n            console.log(localStorage.getItem('token'))\r\n            \r\n        })\r\n        .then(res=>dispatch({\r\n            type: POST_LOGIN,\r\n            payload:res,\r\n            \r\n        }))\r\n        .catch(res=> dispatch({\r\n            type: LOGIN_ERROR,\r\n            payload: \"Dane logowania są niepoprawne\",\r\n        }))\r\n    \r\n}\r\nexport const postRegister = (data) => dispatch =>{\r\n    delete axios.defaults.headers.common[\"Authorization\"];\r\n    axios.post('https://true-effects.herokuapp.com/api/register/',data)\r\n    .then(res=>dispatch({\r\n        type: POST_REGISTER,\r\n        payload: res.data\r\n    }))\r\n    .catch(err=> dispatch(\r\n        {\r\n        type: REGISTER_ERROR,\r\n        payload: err.response.data,\r\n    }))}\r\nexport const postLogoutAuth = () => dispatch =>{\r\n    dispatch({\r\n        type: POST_LOGOUT_AUTH\r\n    })\r\n}\r\nexport const loadUser = (data) => (dispatch,getState) => {\r\n    dispatch({type: USER_LOADING});\r\n    delete axios.defaults.headers.common[\"Authorization\"];\r\n    axios.post('https://true-effects.herokuapp.com/api/login/',data)\r\n    .then(res=>{\r\n        dispatch({\r\n            type: USER_LOADED,\r\n            payload: res.data\r\n        })\r\n    }).catch(err=>{\r\n        dispatch({\r\n            type: LOGIN_ERROR,\r\n            payload : \"Błąd logowania popraw dane\"\r\n        })\r\n    })\r\n}\r\nexport const postLogout = ()=> (dispatch,getState) =>{\r\n    let token = getState().authentication.token\r\n    axios.defaults.headers.common['Authorization'] = `Token ${token}`\r\n    axios.get('https://true-effects.herokuapp.com/api/logout/')\r\n    .then(res=>dispatch({\r\n        type: AUTH_ERROR\r\n    }))\r\n    .then(res=>dispatch({\r\n        type: POST_LOGOUT,\r\n    }))\r\n    .then(res=>{\r\n        window.localStorage.removeItem('token')\r\n        window.localStorage.removeItem('name')\r\n    })\r\n}\r\n","export default __webpack_public_path__ + \"static/media/logo.5ab95c0c.png\";","import React from 'react';\r\nimport '../sass/authenticatelogo.scss';\r\nimport logo from '../images/logo.png' ;\r\nconst AuthenticateLogo = () => {\r\n    return (\r\n        <div className=\"authenticatelogo\">\r\n            <div className=\"authenticatelogo__block\">\r\n                <div className=\"authenticatelogo__block__circle1\">\r\n                    <div className=\"authenticatelogo__block__circle2\"></div>\r\n                    <div className=\"authenticatelogo__block__circle3\"></div>\r\n                    <div className=\"authenticatelogo__block__circle4\">\r\n                        <div className=\"authenticatelogo__block__circle4-logo\">\r\n                            <img src={logo} alt=\"logo\"  />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            \r\n        </div>\r\n    );\r\n};\r\n\r\nexport default AuthenticateLogo;","import {POST_LOGOUT,GET_TIME,GET_TIME_SUCCESS,AUTH_ERROR,GET_MEASUREMENTS_SUCCESS,GET_MEASUREMENTS,POST_TRAINING,GET_TRAININGS,\r\n     GET_TRAININGS_SUCCESS,GET_GOALS,GET_GOALS_SUCCESS,POST_MEASUREMENT,\r\n     POST_MEASUREMENT_SUCCESS, GET_EXERCISES,DELETE_MEASUREMENT_SUCCESS,\r\n     GET_EXERCISES_SUCCESS,GET_OWN_EXERCISES_SUCCESS,END_TRAINING_SUCCESS,POST_TIME} from './types';\r\nimport axios from 'axios';\r\n\r\nexport const getTime = (time)=>(dispatch) =>{\r\n    dispatch({type: GET_TIME})\r\n    dispatch({\r\n        type: GET_TIME_SUCCESS,\r\n        payload: time\r\n    })\r\n}\r\nexport const getMeasurements =()=>(dispatch,getState) => {\r\n    dispatch({type: GET_MEASUREMENTS})\r\n    let token = getState().authentication.token\r\n    axios.defaults.headers.common['Authorization'] = `Token ${token}`\r\n    return axios.get('https://true-effects.herokuapp.com/api/display_personal_dimensions/')\r\n    .then(res=> dispatch({\r\n        type: GET_MEASUREMENTS_SUCCESS,\r\n        payload: res,\r\n    }));\r\n}\r\nexport const getExercises = () =>(dispatch,getState)=>{\r\n    let token = getState().authentication.token\r\n    dispatch({type: GET_EXERCISES})\r\n    axios.defaults.headers.common['Authorization'] = `Token ${token}`\r\n    axios.get('https://true-effects.herokuapp.com/api/display_own_exercise/')\r\n    .then(res=>dispatch({\r\n        type: GET_OWN_EXERCISES_SUCCESS,\r\n        payload: res.data\r\n    }))\r\n    .then(\r\n    axios.get('https://true-effects.herokuapp.com/api/display_exercises/')\r\n    .then(res=> dispatch({\r\n        type: GET_EXERCISES_SUCCESS,\r\n        payload: res,\r\n    })));\r\n}\r\nexport const postTraining = (data) => async(dispatch,getState) => {\r\n    let token = window.localStorage.getItem('token')\r\n    if (token === null){\r\n        token = getState().authentication.token\r\n    }\r\n    axios.defaults.headers.common['Authorization'] = `Token ${token}`\r\n    return await axios.post('https://true-effects.herokuapp.com/api/create_training/',data)\r\n    .then(res=>{\r\n        alert(\"Trening został dodany\")\r\n    })\r\n    .catch(err=>{\r\n        console.log(err.response)\r\n        alert(\"Nieudało się dodać treningu popraw błędy\")\r\n    })\r\n}\r\nexport const getTrainings = () => (dispatch,getState) =>{\r\n    dispatch({type: GET_TRAININGS})\r\n    let token = getState().authentication.token\r\n    axios.defaults.headers.common['Authorization'] = `Token ${token}`\r\n    return axios.get('https://true-effects.herokuapp.com/api/display_training/')\r\n    .then(res => dispatch({\r\n        type: GET_TRAININGS_SUCCESS,\r\n        payload: res,\r\n    }));\r\n}\r\nexport const getGoals = () => (dispatch,getState) =>{\r\n    dispatch({type: GET_GOALS})\r\n    let token = getState().authentication.token\r\n    axios.defaults.headers.common['Authorization'] = `Token ${token}`\r\n    return axios.get('https://true-effects.herokuapp.com/api/display_description_goals/')\r\n    .then(res => dispatch({\r\n        type: GET_GOALS_SUCCESS,\r\n        payload: res,\r\n    }));\r\n}\r\nexport const postGoals = (data) => (dispatch,getState) => {\r\n    let token = getState().authentication.token\r\n    axios.defaults.headers.common['Authorization'] = `Token ${token}`\r\n    return axios.post('https://true-effects.herokuapp.com/api/create_description_goals/',data)\r\n    .then(res=>{\r\n        alert(\"Dodano cel\")\r\n    })\r\n    .catch(err=>{\r\n        console.log(err.response)\r\n    })\r\n    \r\n}\r\nexport const postMeasurement = (data) => (dispatch,getState) =>{\r\n    dispatch({type: POST_MEASUREMENT})\r\n    let token = getState().authentication.token\r\n    axios.defaults.headers.common['Authorization'] = `Token ${token}`\r\n    return axios.post('https://true-effects.herokuapp.com/api/create_personal_dimensions/',data)\r\n    .then(res=>dispatch({\r\n        type: POST_MEASUREMENT_SUCCESS,\r\n    }))\r\n    .catch(err=>{\r\n        console.log(err.response)\r\n    })\r\n\r\n}\r\n\r\nexport const postOwnExercise = (data) => (dispatch,getState) =>{\r\n    let token = getState().authentication.token\r\n    let dictdata = {\"name\": data}\r\n    axios.defaults.headers.common['Authorization'] = `Token ${token}`\r\n    return axios.post('https://true-effects.herokuapp.com/api/create_own_exercise/',dictdata)\r\n    .catch(err=>{\r\n        alert(\"Wystąpił błąd\")\r\n    })\r\n}\r\nexport const deleteTraining = pk =>(dispatch,getState)=>{\r\n    let token = getState().authentication.token\r\n    axios.defaults.headers.common['Authorization'] = `Token ${token}`\r\n    return axios.delete(`https://true-effects.herokuapp.com/api/delete_training/${pk}`)\r\n    .then(res => {\r\n        alert(\"Trening został usunięty\")\r\n    })\r\n    .catch(\"Wystąpił problem z usunięciem treningu\")\r\n\r\n}\r\nexport const deleteMeasurement = pk =>(dispatch,getState)=>{\r\n    let token = getState().authentication.token\r\n    axios.defaults.headers.common['Authorization'] = `Token ${token}`\r\n    return axios.delete(`https://true-effects.herokuapp.com/api/delete_measurement/${pk}`)\r\n    .then(res=>dispatch({\r\n        type: DELETE_MEASUREMENT_SUCCESS,\r\n    }))\r\n    .then(res=>{\r\n        alert(\"Trening został usunięty\")\r\n    })\r\n    .catch(\"Wystąpił problem z usunięciem treningu\")\r\n}\r\n\r\nexport const deleteGoals = pk =>(dispatch,getState)=>{\r\n    let token = getState().authentication.token\r\n    axios.defaults.headers.common['Authorization'] = `Token ${token}`\r\n    return axios.delete(`https://true-effects.herokuapp.com/api/delete_goals/${pk}`)\r\n    .then(res => {\r\n        alert(\"Trening został usunięty\")\r\n    })\r\n}\r\nexport const updateDateTraining = (pk,data) =>(dispatch,getState) =>{\r\n    let token = getState().authentication.token\r\n    axios.defaults.headers.common['Authorization'] = `Token ${token}`\r\n    console.log(data)\r\n    return axios.post(`https://true-effects.herokuapp.com/api/update_training_date/${pk}`,data)\r\n    .then(res => {\r\n        alert(\"Data treningu została zaktualizowana\")\r\n    })\r\n    .catch(err => {\r\n        alert(\"Wystąpił błąd. Spróbuj później\")\r\n    })\r\n}\r\nexport const endTraining = (pk,data)=>(dispatch,getState) =>{\r\n    let token = getState().authentication.token\r\n    axios.defaults.headers.common['Authorization'] = `Token ${token}`\r\n    return axios.post(`https://true-effects.herokuapp.com/api/update_training_after_end/${pk}`,data)\r\n    .then(res=>dispatch({\r\n        type: END_TRAINING_SUCCESS,\r\n    }))\r\n    .then(res => {\r\n        alert(\"Trenining został zakończony\")\r\n    })\r\n}\r\n\r\nexport const postTime = (sec,min,hour) => (dispatch) => {\r\n    dispatch({\r\n        type: POST_TIME,\r\n        second: sec,\r\n        minute: min,\r\n        hour: hour\r\n    })\r\n}","import React,{useState} from 'react';\r\nimport '../sass/login.scss';\r\nimport {connect} from 'react-redux';\r\nimport {postLogin,loadUser} from '../redux/actions/authenticationActions';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faArrowLeft,faArrowRight } from '@fortawesome/fontawesome-free-solid';\r\nimport AuthenticateLogo from './AuthenticateLogo';\r\nimport {getMeasurements,postTraining,getTrainings,getGoals,getExercises} from '../redux/actions/trainingActions';\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      '& .MuiTextField-root': {\r\n        width: '60ch',\r\n        '& .MuiInputBase-input':{\r\n            fontWeight: '700'\r\n        }\r\n      },\r\n    },\r\n  }));\r\n\r\nconst Login = (props) => {\r\n    if(props.token !== null ){\r\n        props.history.push('/')\r\n    }\r\n    const handleMoveToRegister = () => {\r\n        props.history.push('/register')\r\n    }\r\n    const handleMovetoBack = () => {\r\n        props.history.goBack()\r\n    }\r\n    const [login,setLogin] = useState(\"\")\r\n    const [password,setPassword] = useState(\"\")\r\n    const classes = useStyles();\r\n    const  handleLogin = async(e)=>{\r\n        e.preventDefault();\r\n        let data= {\r\n            \"username\": login,\r\n            \"password\": password\r\n        }\r\n        await props.loadUser(data)\r\n    }\r\n    return (\r\n        \r\n        <div className=\"login\">\r\n            <AuthenticateLogo />\r\n            <div className=\"login__secondcontainer\">    \r\n            <div className=\"login__secondcontainer__top\">\r\n                <div className=\"login__secondcontainer__top__back\" onClick={handleMovetoBack}>\r\n                    <div className=\"login__secondcontainer__top__back-icon\"><FontAwesomeIcon icon={faArrowLeft} /></div>\r\n                    <div className=\"login__secondcontainer__top__back-title\">Cofnij</div>\r\n                </div>\r\n                <div className=\"login__secondcontainer__top__forward\" onClick={handleMoveToRegister}>\r\n                    <div className=\"login__secondcontainer__top__forward-title\">Zarejestruj się</div>\r\n                    <div className=\"login__secondcontainer__top__forward-icon\"><FontAwesomeIcon icon={faArrowRight} /></div>\r\n                </div>\r\n                </div>\r\n                <div className=\"login__secondcontainer__form\">\r\n                    <form className={classes.root} noValidate autoComplete=\"off\">\r\n                    <div className=\"login__secondcontainer__form__title\">Zaloguj się</div>\r\n                    <div className=\"login__secondcontainer__form__secondtitle\">Zaloguj się aby kontynuować</div>\r\n                    <div className=\"login__secondcontainer__form__username-input\">\r\n                    <TextField onChange={(e)=>setLogin(e.target.value)} id=\"standard-password-input\" label=\"Nazwa użytkownika\" type=\"text\" autoComplete=\"current-password\"/>\r\n                    </div>\r\n                    <div className=\"login__secondcontainer__form__username-password\">\r\n                    <TextField onChange={(e)=>setPassword(e.target.value)} id=\"standard-password-input\" label=\"Hasło\" type=\"password\" autoComplete=\"current-password\"/>\r\n                    </div>\r\n                    {props.error !== '' && <p style={{color:'red'}}>{props.error}</p>}\r\n                    <div className=\"login__secondcontainer__form__button\">\r\n                        <button className=\"login__secondcontainer__form__button-login\" onClick={handleLogin}>Zaloguj się</button>\r\n                        <p className=\"login__secondcontainer__form__button-forget\">Zapomniałem hasła</p>\r\n                    </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n            \r\n        </div>\r\n    );\r\n};\r\nconst mapStateToProps = (state) => {\r\n    return{\r\n        error: state.authentication.error,\r\n        token: state.authentication.token,\r\n        tokenloaded: state.authentication.tokenloaded\r\n    }\r\n}\r\nexport default connect(mapStateToProps,{postLogin,getMeasurements,postTraining,getTrainings,getGoals,getExercises,loadUser})(Login); \r\n","import React,{useState} from 'react';\r\nimport '../sass/register.scss';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faArrowLeft,faArrowRight } from '@fortawesome/fontawesome-free-solid';\r\nimport AuthenticateLogo from './AuthenticateLogo';\r\nimport {postRegister} from '../redux/actions/authenticationActions';\r\nimport {connect} from 'react-redux';\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      '& .MuiTextField-root': {\r\n        width: '60ch',\r\n        '& .MuiInputBase-input':{\r\n            fontWeight: '700'\r\n        }\r\n      },\r\n    },\r\n  }));\r\nconst Register = (props) => {\r\n    if(props.token !== null){\r\n        props.history.push('/')\r\n    }\r\n    const [username,setUsername] = useState('')\r\n    const [email,setEmail] = useState('')\r\n    const [password,setPassword] = useState('')\r\n    const [password2,setPassword2] = useState('')\r\n    const [usernameerror,setUsernameError] = useState(false)\r\n    const [emailerror,setEmailError] = useState(false)\r\n    const [passworderror,setPasswordError] = useState(false)\r\n    function validateEmail(email) {\r\n        const re = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n        return re.test(String(email).toLowerCase());\r\n    }\r\n    \r\n    const handleMoveToLogin = () => {\r\n        props.history.push('/login')\r\n    }\r\n    const handleMovetoBack = () => {\r\n        props.history.goBack()\r\n    }\r\n    const handleRegister = async(e) => {\r\n        e.preventDefault()\r\n        if(validateEmail(email) !== false){\r\n            let data = {\r\n                \"username\": username,\r\n                \"email\": email,\r\n                \"password\":password,\r\n                \"password2\":password2\r\n            }\r\n            await props.postRegister(data)\r\n            // props.history.push('/')\r\n        }else{\r\n            setEmailError(true)\r\n        }\r\n        \r\n    }\r\n    const classes = useStyles();\r\n    return (\r\n        <div className=\"register\">\r\n            <AuthenticateLogo />\r\n            <div className=\"register__secondcontainer\">\r\n                <div className=\"register__secondcontainer__top\">\r\n                <div className=\"register__secondcontainer__top__back\" onClick={handleMovetoBack}>\r\n                    <div className=\"register__secondcontainer__top__back-icon\"><FontAwesomeIcon icon={faArrowLeft} /></div>\r\n                    <div className=\"register__secondcontainer__top__back-title\">Cofnij</div>\r\n                </div>\r\n                <div className=\"register__secondcontainer__top__forward\" onClick={handleMoveToLogin}>\r\n                    <div className=\"register__secondcontainer__top__forward-title\">Zaloguj się</div>\r\n                    <div className=\"register__secondcontainer__top__forward-icon\"><FontAwesomeIcon icon={faArrowRight} /></div>\r\n                </div>\r\n                </div>\r\n                <div className=\"register__secondcontainer__form\">\r\n                    <form className={classes.root} noValidate autoComplete=\"off\">\r\n                    <div className=\"register__secondcontainer__form__title\">Zarejestruj się</div>\r\n                    <div className=\"register__secondcontainer__form__secondtitle\">Zarejestruj się aby kontynuować</div>\r\n                    <div className=\"register__secondcontainer__form__allinputs\">\r\n                    <div className=\"register__secondcontainer__form__username-input\">\r\n                    <TextField id=\"standard-password-input\"  onChange={(e)=>setUsername(e.target.value)}  label=\"Nazwa użytkownika\" type=\"text\" autoComplete=\"current-password\"/>\r\n                    </div>\r\n                    {props.error_register.username !== undefined && <p style={{color:'red'}}>{props.error_register.username}</p>}\r\n                    <div className=\"register__secondcontainer__form__username-email\">\r\n                    <TextField id=\"standard-password-input\"  onChange={(e)=>setEmail(e.target.value)}  label=\"Email\" type=\"email\" autoComplete=\"current-password\"/>\r\n                    </div>\r\n                    {emailerror && <p style={{color: 'red'}}>Nieprawidłowy email</p>}\r\n                    <div className=\"register__secondcontainer__form__username-password\">\r\n                    <TextField id=\"standard-password-input\" onChange={(e)=>setPassword(e.target.value)}  label=\"Hasło\" type=\"password\" autoComplete=\"current-password\"/>\r\n                    </div>\r\n                    {props.error_register.password !== undefined && <p style={{color:'red'}}>{props.error_register.password}</p>}\r\n                    <div className=\"register__secondcontainer__form__username-password\">\r\n                    <TextField id=\"standard-password-input\" onChange={(e)=>setPassword2(e.target.value)} label=\"Powtórz hasło\" type=\"password\" autoComplete=\"current-password\"/>\r\n                    </div>\r\n                    {props.error_register.password2 !== undefined && <p style={{color:'red'}}>{props.error_register.password2}</p>}\r\n                   \r\n                    </div>\r\n                    <div className=\"register__secondcontainer__form__button\">\r\n                        <button className=\"register__secondcontainer__form__button-register\" onClick={handleRegister}>Zarejestruj się</button>\r\n                        {/* <p className=\"register__secondcontainer__form__button-forget\">Zapomniałem hasła</p> */}\r\n                    </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n            \r\n        </div>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return{\r\n        error_register: state.authentication.error_register,\r\n        token: state.authentication.token\r\n    }\r\n}\r\nexport default connect(mapStateToProps,{postRegister})(Register); \r\n","import { BrowserRouter, Route,Redirect } from 'react-router-dom';\r\nimport React, {useEffect } from 'react';\r\nimport Login from './Login';\r\nimport Register from './Register';\r\nimport '../sass/defaultcontainer.scss';\r\n\r\nconst LoginContainer = () => {\r\n  useEffect(()=>{\r\n    document.title = \"TrueEffects\"\r\n  },[])\r\n  return(\r\n    <div className=\"containerlogin\">\r\n      {/* <Route exact path=\"/\" render={() => <Redirect to=\"/login\" />} /> */}\r\n      <Route path=\"/login\" component={Login} />\r\n      <Route path=\"/register\" component={Register} />\r\n    </div>\r\n)}\r\nexport default LoginContainer","import React from 'react';\r\nimport '../sass/navbar.scss';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faDumbbell } from '@fortawesome/fontawesome-free-solid';\r\nimport {connect} from 'react-redux';\r\nimport {postLogout} from '../redux/actions/authenticationActions';\r\nimport { useHistory } from \"react-router-dom\";\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      flexGrow: 1,\r\n    },\r\n    menuButton: {\r\n      marginRight: theme.spacing(2),\r\n    },\r\n    title: {\r\n      flexGrow: 1,\r\n    },\r\n    bar: {\r\n      paddingLeft: 64,\r\n      paddingRight: 100,\r\n      background: '#db3d44',\r\n    },\r\n  }));\r\nconst Navbar = (props) => {\r\n  const history = useHistory()\r\n    const handleLogout = async() =>{\r\n      await props.postLogout()\r\n    }\r\n      const classes = useStyles();\r\n      return (\r\n      <div className={classes.root}>\r\n            <AppBar className={classes.bar}position=\"static\">\r\n              <Toolbar>\r\n                <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\">\r\n                </IconButton>\r\n                <Typography variant=\"h6\" className={classes.title}>\r\n                  <FontAwesomeIcon icon={faDumbbell} />TrueEffects\r\n                </Typography>\r\n                {props.token !== null ?<> <p>Witaj {props.name}<Button onClick={handleLogout} color=\"inherit\">Wyloguj się</Button></p></>:<><Button color=\"inherit\">Zaloguj się</Button></>}\r\n              </Toolbar>\r\n            </AppBar>\r\n          </div>\r\n    );\r\n};\r\nconst mapStateToProps = (state) => {\r\n  return{\r\n      trainings: state.training.trainings.data,\r\n      loadedtrainings: state.training.loadedtrainings,\r\n      measurements: state.training.measurements.data,\r\n      goals: state.training.goals.data,\r\n      name: state.authentication.name,\r\n      token: state.authentication.token\r\n  }\r\n}\r\nexport default connect(mapStateToProps,{postLogout})(Navbar); \r\n","import React from 'react';\r\nimport '../sass/navbar.scss';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport SideNav, {NavItem, NavIcon, NavText } from '@trendmicro/react-sidenav';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faHome,faClipboardList,faWeight,faGavel,faClock } from '@fortawesome/fontawesome-free-solid';\r\n// import { makeStyles } from '@material-ui/core/styles';\r\nconst Navbar2 = (props) => {\r\n    const history = useHistory()\r\n    const handleMovetoHome = () =>{\r\n        history.push(\"/\");\r\n    }\r\n    const handleMovetoScheduler = () =>{\r\n        history.push(\"/schedule\");\r\n    }\r\n    const handleMovetoCreator = () =>{\r\n        history.push(\"/createtraining\");\r\n    }\r\n    const handleMovetoMeasurements = () =>{\r\n        history.push(\"/addmeasurements\");\r\n    }\r\n    const handleMovetoAllMeasurements = () =>{\r\n        history.push(\"/displaymeasurements\");\r\n    }\r\n    const handleMovetoAddGoals = () =>{\r\n        history.push(\"/addgoals\");\r\n    }\r\n    return (\r\n        <SideNav>\r\n                <SideNav.Toggle />\r\n                <SideNav.Nav defaultSelected=\"home\">\r\n                    <NavItem onClick={handleMovetoHome} eventKey=\"home\">\r\n                        <NavIcon >\r\n                          <FontAwesomeIcon icon={faHome} />\r\n                        </NavIcon>\r\n                        <NavText>\r\n                            Strona Domowa\r\n                        </NavText>\r\n                    </NavItem>\r\n                    <NavItem onClick={handleMovetoScheduler} eventKey=\"clipboard\">\r\n                        <NavIcon >\r\n                          <FontAwesomeIcon icon={faClipboardList} />\r\n                        </NavIcon>\r\n                        <NavText>\r\n                            Kalendarz treningów\r\n                        </NavText>\r\n                    </NavItem>\r\n                    <NavItem onClick={handleMovetoCreator} eventKey=\"gavel\">\r\n                        <NavIcon>\r\n                          <FontAwesomeIcon icon={faGavel} />\r\n                        </NavIcon>\r\n                        <NavText>\r\n                            Kreator trening\r\n                        </NavText>\r\n                    </NavItem>\r\n                    <NavItem  onClick={handleMovetoMeasurements} eventKey=\"weight\">\r\n                        <NavIcon>\r\n                         <FontAwesomeIcon icon={faWeight} />\r\n                        </NavIcon>\r\n                        <NavText>\r\n                            Dodaj pomiary\r\n                        </NavText>\r\n                    </NavItem>\r\n                    <NavItem onClick={handleMovetoAllMeasurements} eventKey=\"weightall\">\r\n                        <NavIcon>\r\n                          <FontAwesomeIcon icon={faWeight} />\r\n                        </NavIcon>\r\n                        <NavText>\r\n                            Wyświetl wszystkie pomiary\r\n                        </NavText>\r\n                    </NavItem>\r\n                    <NavItem onClick={handleMovetoAddGoals} eventKey=\"goal\">\r\n                        <NavIcon>\r\n                          <FontAwesomeIcon icon={faClock} />\r\n                        </NavIcon>\r\n                        <NavText>\r\n                            Dodaj Cel do zrealizowania\r\n                        </NavText>\r\n                    </NavItem>\r\n                </SideNav.Nav>\r\n            </SideNav>\r\n    );\r\n};\r\n\r\nexport default Navbar2;","import React,{forwardRef,useImperativeHandle,useRef}from 'react';\r\nimport { useStopwatch } from 'react-timer-hook';\r\nconst MyStopwatch = forwardRef((props, ref) => {\r\n  const reference = useRef()\r\n  const {\r\n    seconds,\r\n    minutes,\r\n    hours,\r\n    start,\r\n    pause,\r\n    reset,\r\n  } = useStopwatch({ autoStart: false });\r\n  const handleStart = () =>{\r\n      start()\r\n  }\r\n  useImperativeHandle(ref, () => ({\r\n    getAlert() {\r\n      alert(`Zakonczono trenining w czasie ${hours<10 ? 0: \"\"}${hours}:${minutes<10 ? 0: \"\"}${minutes}:${seconds<10 ? 0: \"\"}${seconds}`);\r\n    },\r\n    handleStop(){\r\n      pause()\r\n  },\r\n    async posttrain (){\r\n      console.log(props.id)\r\n      let string = \"\"\r\n      if (hours<10){\r\n        string += \"0\" + hours\r\n        string += \":\"\r\n      }\r\n      else{\r\n        string += hours\r\n        string += \":\"\r\n      }\r\n      if (minutes<10){\r\n        string += \"0\" + minutes\r\n        string += \":\"\r\n      }\r\n      else{\r\n        string += minutes\r\n        string += \":\"\r\n      }\r\n      if (seconds<10){\r\n        string += \"0\" + seconds\r\n        \r\n      }\r\n      else{\r\n        string += seconds\r\n        \r\n      }\r\n      props.training.time = string\r\n      await props.send(props.id,props.training)\r\n      await props.get()\r\n    }\r\n    \r\n  }));\r\n\r\n\r\n  \r\n  return (\r\n    <div style={{textAlign: 'center'}}>\r\n      <div style={{fontSize: '100px'}}>\r\n        <span >{hours<10 && 0}{hours}</span>:<span ref={props.refminutes}>{minutes<10 && 0}{minutes}</span>:<span ref={props.refseconds}>{seconds<10 && 0}{seconds}</span>\r\n      </div>\r\n      <div className=\"stopwatchbuttons\">\r\n        <button ref={ref} id=\"start\" onClick={handleStart}>Start</button>\r\n        <button id=\"pause\" onClick={pause}>Pause</button>\r\n        <button id=\"reset\"onClick={reset}>Reset</button>\r\n      </div>\r\n    </div>\r\n  );\r\n})\r\nexport default MyStopwatch; \r\n","import React,{useState,useRef,createRef} from 'react';\r\nimport MyStopwatch from './MyStopwatch';\r\nimport '../sass/training.scss';\r\nimport logo from '../images/logo.png';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faArrowLeft,faArrowRight } from '@fortawesome/fontawesome-free-solid';\r\nimport { endTraining,getTrainings } from '../redux/actions/trainingActions';\r\nimport {connect} from 'react-redux';\r\nimport { useHistory } from \"react-router-dom\";\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    '&:hover': {\r\n      backgroundColor: 'transparent',\r\n    },\r\n  },\r\n  icon: {\r\n    borderRadius: 3,\r\n    width: 16,\r\n    height: 16,\r\n    boxShadow: 'inset 0 0 0 1px rgba(16,22,26,.2), inset 0 -1px 0 rgba(16,22,26,.1)',\r\n    backgroundColor: '#f5f8fa',\r\n    backgroundImage: 'linear-gradient(180deg,hsla(0,0%,100%,.8),hsla(0,0%,100%,0))',\r\n    '$root.Mui-focusVisible &': {\r\n      outline: '2px auto rgba(19,124,189,.6)',\r\n      outlineOffset: 2,\r\n    },\r\n    'input:hover ~ &': {\r\n      backgroundColor: '#ebf1f5',\r\n    },\r\n    'input:disabled ~ &': {\r\n      boxShadow: 'none',\r\n      background: 'rgba(206,217,224,.5)',\r\n    },\r\n  },\r\n  checkedIcon: {\r\n    backgroundColor: '#137cbd',\r\n    backgroundImage: 'linear-gradient(180deg,hsla(0,0%,100%,.1),hsla(0,0%,100%,0))',\r\n    '&:before': {\r\n      display: 'block',\r\n      width: 16,\r\n      height: 16,\r\n      backgroundImage:\r\n        \"url(\\\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 16 16'%3E%3Cpath\" +\r\n        \" fill-rule='evenodd' clip-rule='evenodd' d='M12 5c-.28 0-.53.11-.71.29L7 9.59l-2.29-2.3a1.003 \" +\r\n        \"1.003 0 00-1.42 1.42l3 3c.18.18.43.29.71.29s.53-.11.71-.29l5-5A1.003 1.003 0 0012 5z' fill='%23fff'/%3E%3C/svg%3E\\\")\",\r\n      content: '\"\"',\r\n    },\r\n    'input:hover ~ &': {\r\n      backgroundColor: '#106ba3',\r\n    },\r\n  },\r\n});\r\nconst Training = (props) => {\r\n    const history = useHistory()\r\n    const {training} = props.location\r\n    const [series, setSeries] = useState(0);\r\n    const [singleSeries,setSingleSeries] = useState(0)\r\n    const [endtraining,setEndTraining] = useState(false)\r\n    const [input,setInput] = useState('')\r\n    const [seconds,setSeconds] = useState('')\r\n    const [minutes,setMinutes] = useState('')\r\n    const [hours,setHours] = useState('')\r\n    const inputRef = useRef();\r\n    const buttonRef = useRef();\r\n    const endbuttonRef = useRef();\r\n    const childRef = useRef();\r\n    const goNext = () =>{\r\n\r\n      // const getdata = (x,y,z) =>{\r\n      //   setSeconds(x)\r\n      //   setMinutes(y)\r\n      //   setHours(z)\r\n\r\n      // }\r\n\r\n      if (inputRef.current.value !== \"\"){\r\n        training.training[`${series}`].reps[`${singleSeries}`]= parseInt(inputRef.current.value)\r\n      }\r\n      let value = parseInt(inputRef.current.value)\r\n      let placeholder = parseInt(inputRef.current.placeholder)\r\n      if(Number.isInteger(value)){\r\n        inputRef.current.value = ''\r\n      if(singleSeries+1 < training.training[series].reps.length){\r\n      setSingleSeries(singleSeries+1)\r\n      }else{\r\n      if(series+1>=training.training.length){\r\n        setEndTraining(true)\r\n      }\r\n      else{\r\n      setSeries(series+1)\r\n      setSingleSeries(0)\r\n      }\r\n    }}\r\n    else if(Number.isInteger(placeholder)){\r\n      inputRef.current.value = ''\r\n      if(singleSeries+1 < training.training[series].reps.length){\r\n      setSingleSeries(singleSeries+1)\r\n    }else{\r\n      if(series+1>=training.training.length){\r\n        setEndTraining(true)\r\n      }else{\r\n      setSeries(series+1)\r\n      setSingleSeries(0)\r\n      }\r\n    }}\r\n    else{\r\n      alert(\"Niepoprawne dane\");\r\n    }\r\n  }\r\n  const handlemovetoschedulepage = () =>{\r\n    history.push('/schedule/')\r\n}\r\n  const handleInput = () => {\r\n    setInput(inputRef.current.value)\r\n  }\r\n\r\n  const handleEndTraining = async()=>{\r\n    await childRef.current.handleStop()\r\n    await childRef.current.getAlert()\r\n    // await props.endTraining(props.location.training.id,props.location.training)\r\n    await childRef.current.posttrain()\r\n    // await props.getTrainings()\r\n    await handlemovetoschedulepage()\r\n  }\r\n    return (\r\n        <div className=\"training\">\r\n            <div className=\"training__top\">\r\n                <div className=\"training__top__previousexercise\">\r\n                    <div style={{visibility: typeof training.training[series-1] !== \"undefined\" ? 'visible' : 'hidden' }} className=\"training__top__previousexercise-title\"><FontAwesomeIcon icon={faArrowLeft} /> Poprzednie ćwiczenie</div>\r\n                    <div style={{visibility: typeof training.training[series-1] !== \"undefined\" ? 'visible' : 'hidden' }} className=\"training__top__previousexercise-name\">{typeof training.training[series-1] !== \"undefined\" && training.training[series-1].exercise.name}</div>\r\n                </div>\r\n                {typeof training.training[series+1] !== \"undefined\" && <div className=\"training__top__nextexercise\">\r\n                    <div style={{visibility: typeof training.training[series+1] !== \"undefined\" ? 'visible' : 'hidden' }} className=\"training__top__nextexercise-title\">Następne ćwiczenie <FontAwesomeIcon icon={faArrowRight} /></div>\r\n                    <div style={{visibility: typeof training.training[series+1] !== \"undefined\" ? 'visible' : 'hidden' }} className=\"training__top__nextexercise-name\">{typeof training.training[series+1] !== \"undefined\" &&  training.training[series+1].exercise !== null ? training.training[series+1].exercise.name !== null: training.training[series+1].ownexercise.name}</div>\r\n                </div>}\r\n            </div>\r\n            <div className=\"training__middle\">\r\n                <div className=\"training__middle-title\">Aktualne Ćwiczenie</div>\r\n                <div className=\"training__middle-exercise\">{training.training[series].exercise !== null ? training.training[series].exercise.name : training.training[series].ownexercise.name}</div>\r\n                <div className=\"training__middle__logotime\">\r\n                    <div className=\"training__middle__logotime-logo\">\r\n                      <img src={logo} alt=\"logo\"  />\r\n                    </div>\r\n                    <div className=\"training__middle__logotime-time\" >\r\n                    <MyStopwatch ref={childRef} send={props.endTraining} get={props.getTrainings} id={props.location.training.id} training={props.location.training} />\r\n                  </div>\r\n                </div>\r\n                <div className=\"training__middle__series\">\r\n                    <div className=\"training__middle__series__checkboxes\" style={{visibility: endtraining ? 'hidden' : 'visible' }}>\r\n                    {training.training[`${series}`].reps.map(function (item,index) {\r\n                      if(index < singleSeries+1){\r\n                        return (\r\n                          <Checkbox checked={true} />\r\n                        )\r\n                        }else{\r\n                        return(\r\n                          <Checkbox disabled checked={false}/>\r\n                        )}}\r\n                )}\r\n                      </div>\r\n                    <div className=\"training__middle__series-title\" style={{visibility: endtraining ? 'hidden' : 'visible' }}>Seria {singleSeries+1}/{training.training[`${series}`].reps.length}</div>\r\n                </div>\r\n            </div>\r\n            <div className=\"training__bottom\">\r\n                <div className=\"training__bottom__leftbutton\">\r\n                    <button id=\"endtraining\" ref={endbuttonRef} onClick={handleEndTraining}>Zakończ trening X</button>\r\n                </div>\r\n                <div className=\"training__bottom__phase\" style={{visibility: endtraining ? 'hidden' : 'visible' }}>\r\n                    <div className=\"training__bottom__phase-title\">Fazy(w sekundach)</div>\r\n                    <div className=\"training__bottom__phase__allphases\">\r\n                        <div className=\"training__bottom__phase__allphases-phase\">{training.training[`${series}`].concentric_phase}</div>\r\n                        <div className=\"training__bottom__phase__allphases-/\">/</div>\r\n                        <div className=\"training__bottom__phase__allphases-phase\">{training.training[`${series}`].pause_after_concentric_phase}</div>\r\n                        <div className=\"training__bottom__phase__allphases-/\">/</div>\r\n                        <div className=\"training__bottom__phase__allphases-phase\">{training.training[`${series}`].eccentric_phase}</div>\r\n                        <div className=\"training__bottom__phase__allphases-/\">/</div>\r\n                        <div className=\"training__bottom__phase__allphases-phase\">{training.training[`${series}`].pause_after_eccentric_phase}</div>\r\n                    </div>\r\n                    <div className=\"training__bottom__weight-title\">Ciężar dodatkowy</div>\r\n                    <div className=\"training__bottom__weight-title2\">\r\n                        {training.training[`${series}`].weight}kg\r\n                    </div>\r\n                    <div className=\"training__bottom__phase-title2\">Ile powtórzeń wykonałeś w serii</div>\r\n                    <div className=\"training__bottom__phase__reps\">\r\n                        <div className=\"training__bottom__phase__reps-actualreps\"><input ref={inputRef} placeholder={training.training[`${series}`].reps[`${singleSeries}`]} onChange={handleInput} id=\"actualreps\" min=\"0\" max=\"10000\" /></div>\r\n                        <div className=\"training__bottom__phase__reps-/\">/</div>\r\n                        <div className=\"training__bottom__phase__reps-assumedreps\">{training.training[`${series}`].reps[`${singleSeries}`]}</div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"training__bottom__rightbutton\">\r\n                    <button ref={buttonRef} style={{visibility: endtraining ? 'hidden' : 'visible' }} onClick={goNext} id=\"nextexercise\">Przejdź dalej</button>\r\n                </div>\r\n            </div>\r\n            \r\n        </div>\r\n    );\r\n};\r\n\r\nexport default connect(null,{getTrainings,endTraining})(Training); \r\n","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nconst ModalDisplayTrainingItem = (props) => {\r\n    return (\r\n        <>\r\n            <tr>\r\n                <td>{props.training.exercise !== null ? props.training.exercise.name : props.training.ownexercise.name }</td>\r\n                <td>{props.training.reps.length}</td>\r\n                <td>\r\n                {props.training.reps.map((point, index) => {\r\n                    if (index === props.training.reps.length-1) {\r\n                    return (\r\n                    <span>{point}</span>\r\n                    )}else{\r\n                        console.log(index)\r\n                        console.log(props.training.reps.length)\r\n                    return (<span>{point}/</span>)\r\n      }\r\n    }\r\n   )}\r\n                </td>\r\n                <td>{props.training.rest}</td>\r\n                <td>{props.training.weight} kg</td>\r\n                <td>{props.training.concentric_phase}/{props.training.pause_after_concentric_phase}/{props.training.eccentric_phase}/{props.training.pause_after_eccentric_phase}</td>\r\n            </tr>\r\n        </>\r\n    );\r\n};\r\nconst mapStateToProps = (state) => {\r\n    return{\r\n        trainings: state.training.trainings.data,\r\n        loadedtrainings: state.training.loadedtrainings,\r\n        measurements: state.training.measurements.data,\r\n        goals: state.training.goals.data,\r\n        exercises: state.training.exercises.data\r\n    }\r\n}\r\nexport default connect(mapStateToProps)(ModalDisplayTrainingItem); \r\n","import React,{useState,useRef} from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport {faTimes} from '@fortawesome/fontawesome-free-solid';\r\nimport ModalDisplayTrainingItem from './modaldisplaytraining/ModalDisplayTrainingItem';\r\nimport {connect} from 'react-redux';\r\nimport '../sass/modaldisplaytraining.scss';\r\nimport DatePicker from \"react-datepicker\";\r\nimport {deleteTraining,getTrainings,updateDateTraining} from '../redux/actions/trainingActions';\r\nconst MODAL_STYLES = {\r\n    position: 'fixed',\r\n    top: '50%',\r\n    left: '50%',\r\n    transform: 'translate(-50%,-50%)',\r\n    backgroundColor: '#457B9D',\r\n    padding: '50px',\r\n    zIndex: 10\r\n}\r\nconst OVERLAY_STYLES = {\r\n    position:'fixed',\r\n    top:0,\r\n    left:0,\r\n    right:0,\r\n    bottom:0,\r\n    backgroundColor: 'rgba(0,0,0,.7)',\r\n    zIndex:10,\r\n    color: 'rgba(0,0,0)',\r\n}\r\n\r\nconst ModalDisplayTraining = props => {\r\n    const [newday,setNewDay] = useState(false)\r\n    const [summary,setSummary] = useState(false)\r\n    const [selectDate,setSelectDate] = useState(new Date())\r\n    const training_date = useRef(null);\r\n    const handleMovetoTraining = () =>{\r\n        props.allprops.history.push({pathname:'/training',training:props.alldata});\r\n    }\r\n    \r\n    const handleDeleteTraining = async() => {\r\n        await props.deleteTraining(props.alldata.id)\r\n        await props.getTrainings()\r\n        await props.back()\r\n    }\r\n    const handleAddtoDate = async() => {\r\n        console.log(\"addToDate\")\r\n        let splitdate = training_date.current.input.value.split(\"/\")\r\n        let fullday = splitdate[2] + \"-\" + splitdate[1] + \"-\" +  splitdate[0]\r\n        let date = {'date': fullday}\r\n        await props.updateDateTraining(props.alldata.id,date)\r\n        await props.getTrainings()\r\n    }\r\n    \r\n    return ReactDOM.createPortal(\r\n        <div className=\"modaldisplaytraining\" style={OVERLAY_STYLES}>\r\n            <div className=\"modaldisplaytraining__data\" style={MODAL_STYLES}>\r\n            <div className=\"modaldisplaytraining__data-close\" ><span><FontAwesomeIcon onClick={()=>props.back()} icon={faTimes}/></span></div>\r\n            <div className=\"modaldisplaytraining__data-title\">{props.title}</div>\r\n            <div className=\"modaldisplaytraining__data__datetime\">\r\n                <div className=\"modaldisplaytraining__data__datetime-time\">Czas trwania treningu : {props.time}</div>\r\n                <div className=\"modaldisplaytraining__data__datetime-date\">{props.date}</div>\r\n            </div>\r\n            <div className=\"modaldisplaytraining__data-completed\"></div>\r\n            <div className=\"modaldisplaytraining__data-description\">{props.description}</div>\r\n            \r\n            <div className=\"modaldisplaytraining__data__buttons\">\r\n            {/* <div className=\"modaldisplaytraining__data__buttons-button\">\r\n                <button onClick={handleSummaryTraining}>Podsumowanie treningu</button>\r\n            </div> */}\r\n            \r\n            <div className=\"modaldisplaytraining__data__buttons-button\">\r\n                <button onClick={handleDeleteTraining}>Usuń trening</button>\r\n            </div>\r\n            <div className=\"modaldisplaytraining__data__buttons-button\">\r\n                <button onClick={handleMovetoTraining}>Powtórz trening</button>\r\n            </div>\r\n            <div className=\"modaldisplaytraining__data__buttons-button\" onClick={()=>setNewDay(!newday)} >\r\n                <button>{newday ? \"Schowaj formularz \" : \"Dodaj trening do innego dnia\"}</button>\r\n            </div>\r\n            </div>\r\n            <div className=\"modaldisplaytraining__data__input\" style={{display: newday ? 'flex' : 'none' }}>\r\n                <span>\r\n                    <DatePicker ref={training_date} locale='pl' dateFormat='dd/MM/yyyy' selected={selectDate} onChange={date => setSelectDate(date)} />\r\n                </span>\r\n                <div className=\"modaldisplaytraining__data__input-button\">\r\n                    <button onClick={handleAddtoDate}>Dodaj trening do podanego dnia</button>\r\n                </div>\r\n            </div>\r\n            <div className=\"modaldisplaytraining__data__elements\">\r\n                <table id=\"training\">\r\n                <tr>\r\n                    <th>Nazwa Ćwiczenia</th>\r\n                    <th>Liczba Serii</th>\r\n                    <th>Liczba Powtórzeń</th>\r\n                    <th>Przerwa między seriami</th>\r\n                    <th>Ciężar</th>\r\n                    <th>Fazy</th>\r\n                </tr>\r\n                    {props.training.map((training)=> <ModalDisplayTrainingItem training={training} />)}\r\n                </table>\r\n            </div>\r\n        </div>\r\n        </div>,\r\n        document.getElementById('root')\r\n    );\r\n};\r\nconst mapStateToProps = (state) => {\r\n    return{\r\n        token : state.authentication.token,\r\n        loadedtrainings: state.training.loadedtrainings,\r\n        loadedmeasurements: state.training.loadedmeasurements,\r\n        loadedgoals: state.training.loadedgoals,\r\n        loadedexercises: state.training.loadedexercises\r\n    }\r\n  }\r\n\r\nconst mapDispatchToProps = () =>dispatch => {\r\n    return {\r\n      deleteTraining: (x) =>dispatch(deleteTraining(x)),\r\n      getTrainings: () =>dispatch(getTrainings()),\r\n      updateDateTraining: (x,y) =>dispatch(updateDateTraining(x,y))\r\n    };\r\n  };\r\nexport default connect(mapStateToProps,mapDispatchToProps)(ModalDisplayTraining);\r\n","import React from 'react';\r\nimport Scheduler from 'react-scheduler-calendar';\r\nimport {Calendar , momentLocalizer  } from 'react-big-calendar' \r\nimport 'react-big-calendar/lib/css/react-big-calendar.css';\r\nimport moment from 'moment';\r\n\r\nimport {connect} from 'react-redux';\r\nimport {getMeasurements,postTraining,getTrainings,getGoals} from '../redux/actions/trainingActions';\r\nimport ModalDisplayTraining from './ModalDisplayTraining';\r\nimport 'moment/locale/pl';\r\nrequire('moment/locale/pl.js')\r\n\r\nexport class Schedule extends React.Component {\r\n    state = {\r\n      modalopen:false,\r\n      training:null,\r\n      test:false,\r\n      date: null,\r\n      time: null,\r\n      description: '',\r\n      title: ''\r\n    }\r\n    // handleSelect = () =>{\r\n    //   console.log(\"select\")\r\n    // }\r\n    handleSelectEvent = (e) =>{\r\n      this.setState({\r\n        modalopen:true,\r\n        training:e.data,\r\n        test: !this.state.test,\r\n        date : e.date,\r\n        time: e.time,\r\n        description: e.description,\r\n        title: e.title,\r\n        alldata: e.all\r\n      })\r\n    }\r\n    handleBacktoSchedule = () => {\r\n      this.setState({\r\n        modalopen:false\r\n      })\r\n    }\r\n    \r\n    render() {\r\n      const {modalopen,training} = this.state\r\n      let events = []\r\n      this.props.trainings.map((e)=>{\r\n        events.push({\r\n          'title': e.name,\r\n          'start': Date.parse(e.date),\r\n          'end': Date.parse(e.date),\r\n          'data': e.training,\r\n          'date': e.date,\r\n          'time': e.time,\r\n          'description': e.description,\r\n          'all': e\r\n        })\r\n        })\r\n        const localizer = momentLocalizer(moment)\r\n      return(\r\n        <>\r\n      <div className=\"schedule\">\r\n        <Calendar culture='pl-PL' views={['month']} selectable={true} \r\n        //onSelectSlot={(slot) => {console.log(\"slot select: \", slot);\r\n          events={events} onSelectEvent={this.handleSelectEvent} localizer={localizer} style={{ height: 500,width: '95%' }}/>\r\n        {modalopen && <ModalDisplayTraining back ={this.handleBacktoSchedule} allprops={this.props} open={this.state.modalopen} training={this.state.training} date={this.state.date} time={this.state.time} description={this.state.description} title={this.state.title} alldata={this.state.alldata}/>}\r\n\r\n      </div>\r\n      \r\n      </>\r\n      )\r\n    }\r\n  }\r\nconst mapStateToProps = (state) => {\r\n    return{\r\n\r\n        trainings: state.training.trainings.data,\r\n        loadedtrainings: state.training.loadedtrainings,\r\n    }\r\n}\r\nexport default connect(mapStateToProps,{getMeasurements,getTrainings,getGoals})(Schedule);     \r\n","import React from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nconst HomepageTrainingItem = (props) => {\r\n    const movetoTraining =(training)=>{\r\n        props.allprops.history.push({pathname: '/training',training:training});\r\n    }\r\n    return (    \r\n        <div className=\"homepage__lasttrainingscontainer__container__element\">\r\n        <div className=\"homepage__lasttrainingscontainer__container__element__top\">\r\n            <div className=\"homepage__lasttrainingscontainer__container__element__top-title\">{props.training.name}</div>\r\n            <div className=\"homepage__lasttrainingscontainer__container__element__top-databutton\">\r\n            <div className=\"homepage__lasttrainingscontainer__container__element__top-data\">{props.training.date}</div>\r\n            <div className=\"homepage__lasttrainingscontainer__container__element__top-button\"><button onClick={()=>movetoTraining(props.training)}>Powtórz trening</button></div>\r\n        </div>\r\n        </div>\r\n        <div className=\"homepage__lasttrainingscontainer__container__element__bottom\">\r\n            {props.training.name}\r\n        </div>\r\n        </div>      \r\n    );\r\n};\r\nexport default HomepageTrainingItem;","import React from 'react';\r\nimport { useHistory } from \"react-router-dom\";\r\nconst HomepageMeasurementItem = (props) => {\r\n    console.log(props)\r\n    const history = useHistory()\r\n    \r\n    const addNewMeasurement = () => {\r\n        history.push('./addmeasurements')\r\n        \r\n    }\r\n    return (\r\n        <>      {props.measurement.length>0 ? <>\r\n                <div className=\"homepage__measurementcontainer-data\">Pomiary na dzień {props.measurement[props.measurement.length-1].date}</div>\r\n                <div className=\"homepage__measurementcontainer-add\"><button onClick={addNewMeasurement}>+ Dodaj nowe pomiary</button></div>\r\n                <div className=\"homepage__measurementcontainer__container\">\r\n                    <div className=\"homepage__measurementcontainer__container__element\">\r\n                        <div className=\"homepage__measurementcontainer__container__element-name\">Prawy biceps</div>\r\n                        <div className=\"homepage__measurementcontainer__container__element-result\">{props.measurement[props.measurement.length-1].right_biceps}  cm</div>\r\n                    </div>\r\n                    <div className=\"homepage__measurementcontainer__container__element\">\r\n                        <div className=\"homepage__measurementcontainer__container__element-name\">Lewy biceps</div>\r\n                        <div className=\"homepage__measurementcontainer__container__element-result\">{props.measurement[props.measurement.length-1].left_biceps} cm</div>\r\n                    </div>\r\n                    <div className=\"homepage__measurementcontainer__container__element\">\r\n                        <div className=\"homepage__measurementcontainer__container__element-name\">Prawe przedramię</div>\r\n                        <div className=\"homepage__measurementcontainer__container__element-result\">{props.measurement[props.measurement.length-1].right_forearm} cm</div>\r\n                    </div>\r\n                    <div className=\"homepage__measurementcontainer__container__element\">\r\n                        <div className=\"homepage__measurementcontainer__container__element-name\">Lewe przedramię</div>\r\n                        <div className=\"homepage__measurementcontainer__container__element-result\">{props.measurement[props.measurement.length-1].left_forearm}  cm</div>\r\n                    </div>\r\n                    <div className=\"homepage__measurementcontainer__container__element\">\r\n                        <div className=\"homepage__measurementcontainer__container__element-name\">Udo prawej nogi</div>\r\n                        <div className=\"homepage__measurementcontainer__container__element-result\">{props.measurement[props.measurement.length-1].right_leg} cm</div>\r\n                    </div>\r\n                    <div className=\"homepage__measurementcontainer__container__element\">\r\n                        <div className=\"homepage__measurementcontainer__container__element-name\">Udo lewej nogi</div>\r\n                        <div className=\"homepage__measurementcontainer__container__element-result\">{props.measurement[props.measurement.length-1].right_leg} cm</div>\r\n                    </div>\r\n                    <div className=\"homepage__measurementcontainer__container__element\">\r\n                        <div className=\"homepage__measurementcontainer__container__element-name\">Waga</div>\r\n                        <div className=\"homepage__measurementcontainer__container__element-result\">{props.measurement[props.measurement.length-1].weight}kg</div>\r\n                    </div>\r\n                    <div className=\"homepage__measurementcontainer__container__element\">\r\n                        <div className=\"homepage__measurementcontainer__container__element-name\">Wzrost</div>\r\n                        <div className=\"homepage__measurementcontainer__container__element-result\">{props.measurement[props.measurement.length-1].growth} cm</div>\r\n                    </div>\r\n                    {/* <div className=\"homepage__measurementcontainer__container__element\">\r\n                        <div className=\"homepage__measurementcontainer__container__element-name\">Tkanka Tłuszczowa</div>\r\n                        <div className=\"homepage__measurementcontainer__container__element-result\">{props.measurement[props.measurement.length-1].bodyfat} %</div>\r\n                \r\n                </div> */}\r\n                </div> </>: <div className=\"homepage__measurementcontainer__title\">\r\n                    <div className=\"homepage__measurementcontainer-title\">Twoje ostatnie pomiary</div>\r\n                    <div className=\"homepage__measurementcontainer-add\"><button onClick={addNewMeasurement}>+ Dodaj nowe pomiary</button></div>\r\n                    <p>Nie masz aktualnie żadnych pomiarów.</p>\r\n                    </div>\r\n                    }\r\n            </>\r\n    );\r\n};\r\n\r\nexport default HomepageMeasurementItem;","import React from 'react';\r\nimport Moment from 'react-moment';\r\nimport 'moment/locale/pl';\r\nimport moment from 'moment';\r\nimport {connect} from 'react-redux';\r\nimport {deleteGoals,getGoals} from '../../redux/actions/trainingActions'\r\nmoment().locale('pl')\r\nconst HomepageGoalItem = (props) => {\r\n    const handleDelete = async() =>{\r\n        await props.deleteGoals(props.goal.id)\r\n        await props.getGoals()\r\n    }\r\n    let firstdate = props.goal\r\n    let currentTime = new Date();\r\n    let dd = currentTime.getDate();\r\n    let mm = currentTime.getMonth()+1;\r\n    let yyyy = currentTime.getFullYear();\r\n    \r\n    if(dd<10) \r\n{\r\n    dd=`0${dd}`;\r\n} \r\nif(mm<10) \r\n{\r\n    mm=`0${mm}`;\r\n} \r\nlet today = `${yyyy}-${mm}-${dd}`;\r\n    let start = new Date(firstdate)\r\n    return (\r\n        <div className=\"homepage__goalscontainer__elements__element\">\r\n        <div className=\"homepage__goalscontainer__elements__element-name\">{props.goal.description}<button onClick={handleDelete}>Usuń cel</button></div>\r\n        <div className=\"homepage__goalscontainer__elements__element__time\">\r\n            <div className=\"homepage__goalscontainer__elements__element__time-description\">Pozostały czas upłynie</div>\r\n            <div className=\"homepage__goalscontainer__elements__element__time-number\">\r\n                <Moment locale='pl' fromNow>{props.goal.date}</Moment>\r\n                </div>\r\n            <div className=\"homepage__goalscontainer__elements__element__time-data\">{props.goal.date}</div>\r\n        </div>\r\n    </div>\r\n    );\r\n};\r\nconst mapDispatchToProps = () =>dispatch => {\r\n    return {\r\n      deleteGoals: (x) =>dispatch(deleteGoals(x)),\r\n      getGoals: ()=> dispatch(getGoals())\r\n    };\r\n  };\r\nexport default connect(null,mapDispatchToProps)(HomepageGoalItem);","import React,{useEffect} from 'react';\r\nimport '../sass/homepage.scss';\r\nimport {connect} from 'react-redux';\r\nimport {postLogin} from '../redux/actions/authenticationActions';\r\nimport {getMeasurements,postTraining,getTrainings,getGoals} from '../redux/actions/trainingActions';\r\nimport HomepageTrainingItem from './homepagecomponents/HomepageTrainingItem';\r\nimport HomepageMeasurementItem from './homepagecomponents/HomepageMeasurementItem';\r\nimport HomepageGoalItem from './homepagecomponents/HomepageGoalItem';\r\nimport { useHistory } from \"react-router-dom\";\r\nconst Homepage = (props) => {\r\n    const history = useHistory()\r\n    const addNewGoals = () => {\r\n        history.push('./addgoals')\r\n    }\r\n    \r\n    const addNewTraining = () => {\r\n        history.push('./createtraining')\r\n    }\r\n    \r\n    return (\r\n        <div className=\"homepage\">\r\n            <div className=\"homepage__title\">\r\n                Strona Domowa\r\n            </div>\r\n            <div className=\"homepage__container\">\r\n            <div className=\"homepage__firstcontainer\">\r\n            <div className=\"homepage__goalscontainer\">\r\n                <div className=\"homepage__goalscontainer-title\">Twoje cele do zrealizowania</div>\r\n                <div className=\"homepage__goalscontainer-add\"><button onClick={addNewGoals}>+ Dodaj nowe cele</button></div>\r\n                <div className=\"homepage__goalscontainer__elements\">\r\n                {props.goals.length>0 ? props.goals.map((goal)=><HomepageGoalItem goal={goal}/>): <p>Nie masz aktualnie żadnych celów do zrealizowania</p>}\r\n                </div>\r\n            </div>\r\n            <div className=\"homepage__measurementcontainer\">\r\n            <HomepageMeasurementItem measurement={props.measurements}/>\r\n            </div>\r\n            </div>\r\n            <div className=\"homepage__lasttrainingscontainer\">\r\n                <div className=\"homepage__lasttrainingscontainer-title\">Ostatnie wykonane treningi</div>\r\n                <div className=\"homepage__lasttrainingscontainer-add\"><button onClick={addNewTraining}>+ Dodaj nowy trening</button></div>\r\n                <div className=\"homepage__lasttrainingscontainer__container\">\r\n                    {props.trainings.length>0 ? props.trainings.map((training)=> <HomepageTrainingItem allprops={props} training={training}/>): <p>Nie wykonałeś jeszcze żadnych treningów</p>}\r\n                </div>\r\n            </div>\r\n            </div>\r\n        </div>\r\n        \r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return{\r\n        trainings: state.training.trainings.data,\r\n        loadedtrainings: state.training.loadedtrainings,\r\n        measurements: state.training.measurements.data,\r\n        goals: state.training.goals.data\r\n    }\r\n}\r\nexport default connect(mapStateToProps,{postLogin,getMeasurements,getTrainings,getGoals})(Homepage);     ","import React,{useState,useRef} from 'react';\r\nimport DatePicker,{registerLocale} from \"react-datepicker\";\r\nimport {postGoals,getGoals} from '../redux/actions/trainingActions';\r\nimport {connect} from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport '../sass/addgoals.scss';\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nconst AddGoals = (props) => {\r\n    const history = useHistory()\r\n    const [startDate, setStartDate] = useState(\"\");\r\n    const [actualDate, setActualDate] = useState(\"\");\r\n    const inputdescription = useRef(\"\");\r\n    const handleDate = (date) =>{\r\n        let day = date.getDay()\r\n        let month = date.getMonth()\r\n        let year = date.getFullYear()\r\n        let fulldate = year + \"-\" + month + \"-\" + day\r\n        setActualDate(fulldate)\r\n        setStartDate(date)\r\n    }\r\n    const handleSendGoals = async() =>{\r\n        let data = {\r\n            \"date\": actualDate,\r\n            \"description\": inputdescription.current.value\r\n        }\r\n        await props.postGoals(data)\r\n        await props.getGoals()\r\n        history.push(\"/\")\r\n        \r\n    }\r\n    return (\r\n        <div className=\"addgoals\">\r\n            <div className=\"addgoals-title\">Dodaj Cel do zrealizowania</div>\r\n            <div className=\"addgoals__container\">\r\n                <div className=\"addgoals__container__data-input\">\r\n                    <DatePicker locale='pl' placeholderText={\"Wybierz date\"} dateFormat='dd/MM/yyyy' selected={startDate} onChange={date => handleDate(date)} />\r\n                </div>\r\n                <div className=\"addgoals__container__description\">\r\n                    <input id=\"description\" ref={inputdescription} placeholder=\"Podaj cel do zrealizowania\"/>\r\n                </div>\r\n                <div className=\"addgoals__container__button\">\r\n                    <button onClick={handleSendGoals}>Zaakceptuj nowy cel</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default connect(null,{postGoals,getGoals})(AddGoals);  ","import React from 'react';\r\nimport {connect} from 'react-redux'\r\nimport {deleteMeasurement,getMeasurements} from '../redux/actions/trainingActions';\r\nconst DisplayMeasurementsItem = (props) => {\r\n    \r\n    const handleDeleteMeasurement = async() => {\r\n        await props.deleteMeasurement(props.measurement.id)\r\n        await props.getMeasurements()\r\n    }\r\n    return (\r\n        <div className=\"displaymeasurements__containers__container\">\r\n                    <div className=\"displaymeasurements__containers__container__elements\">\r\n                        <div className=\"displaymeasurements__containers__container__elements-date\">Data : {props.measurement.date}</div>\r\n                        <div className=\"displaymeasurements__containers__container__elements__element-delete\"><button onClick = {handleDeleteMeasurement}>Usuń pomiar</button></div>\r\n                        <div className=\"displaymeasurements__containers__container__elements__element\">\r\n                            \r\n                            <div className=\"displaymeasurements__containers__container__elements__element-name\">Waga</div>\r\n                            <div className=\"displaymeasurements__containers__container__elements__element-result\">{props.measurement.weight} kg</div>\r\n                        </div>\r\n                        <div className=\"displaymeasurements__containers__container__elements__element\">\r\n                            <div className=\"displaymeasurements__containers__container__elements__element-name\">Wzrost</div>\r\n                            <div className=\"displaymeasurements__containers__container__elements__element-result\">{props.measurement.growth} cm</div>\r\n                        </div>\r\n                        <div className=\"displaymeasurements__containers__container__elements__element\">\r\n                            <div className=\"displaymeasurements__containers__container__elements__element-name\">Prawy biceps</div>\r\n                            <div className=\"displaymeasurements__containers__container__elements__element-result\">{props.measurement.right_biceps} cm</div>\r\n                        </div>\r\n                        <div className=\"displaymeasurements__containers__container__elements__element\">\r\n                            <div className=\"displaymeasurements__containers__container__elements__element-name\">Lewy biceps</div>\r\n                            <div className=\"displaymeasurements__containers__container__elements__element-result\">{props.measurement.left_biceps} cm</div>\r\n                        </div>\r\n                        <div className=\"displaymeasurements__containers__container__elements__element\">\r\n                            <div className=\"displaymeasurements__containers__container__elements__element-name\">Prawe przedramię</div>\r\n                            <div className=\"displaymeasurements__containers__container__elements__element-result\">{props.measurement.right_forearm} cm</div>\r\n                        </div>\r\n                        <div className=\"displaymeasurements__containers__container__elements__element\">\r\n                            <div className=\"displaymeasurements__containers__container__elements__element-name\">Lewe przedramię</div>\r\n                            <div className=\"displaymeasurements__containers__container__elements__element-result\">{props.measurement.left_forearm} cm</div>\r\n                        </div>\r\n                        <div className=\"displaymeasurements__containers__container__elements__element\">\r\n                            <div className=\"displaymeasurements__containers__container__elements__element-name\">Prawe udo</div>\r\n                            <div className=\"displaymeasurements__containers__container__elements__element-result\">{props.measurement.right_leg} cm</div>\r\n                        </div>\r\n                        <div className=\"displaymeasurements__containers__container__elements__element\">\r\n                            <div className=\"displaymeasurements__containers__container__elements__element-name\">Lewe udo</div>\r\n                            <div className=\"displaymeasurements__containers__container__elements__element-result\">{props.measurement.left_leg} cm</div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n    );\r\n};\r\nconst mapDispatchToProps = () =>dispatch => {\r\n    return {\r\n      deleteMeasurement: (x) =>dispatch(deleteMeasurement(x)),\r\n      getMeasurements: () =>dispatch(getMeasurements()),\r\n    };\r\n  };\r\nexport default connect(null,mapDispatchToProps)(DisplayMeasurementsItem);","import React,{useState,useEffect} from 'react';\r\nimport '../sass/displaymeasurements.scss';\r\nimport {connect} from 'react-redux';\r\nimport DisplayMeasurementsItem from './DisplayMeasurementsItem';\r\nconst DisplayMeasurements = (props) => { \r\n    const [measurements,setMeasurements] = useState(props.measurements)\r\n    useEffect(()=>{\r\n        setMeasurements(()=>{\r\n            let meas\r\n            if(props.measurements.length>8){\r\n                meas = props.measurements.slice(8)\r\n                meas.slice(0).reverse()\r\n                return meas  \r\n            }else{\r\n                meas = props.measurements.slice(0).reverse()}\r\n                return meas\r\n            })\r\n    },[])\r\n    useEffect(()=>{\r\n        setMeasurements(()=>{\r\n            let meas\r\n            if(props.measurements.length>8){\r\n                meas = props.measurements.slice(8)\r\n                meas.slice(0).reverse()\r\n                return meas  \r\n            }else{\r\n                meas = props.measurements.slice(0).reverse()}\r\n                return meas\r\n            })\r\n    },[props.measurements])\r\n    return (\r\n        <div className=\"displaymeasurements\">\r\n            <div className=\"displaymeasurements-title\">Twoje ostatnie 9 pomiarów</div>\r\n            <div className=\"displaymeasurements__containers\">\r\n                {measurements.map((measurement)=><DisplayMeasurementsItem measurement={measurement}/>)}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return{\r\n        trainings: state.training.trainings.data,\r\n        loadedtrainings: state.training.loadedtrainings,\r\n        measurements: state.training.measurements.data,\r\n        goals: state.training.goals.data\r\n    }\r\n}\r\nexport default connect(mapStateToProps)(DisplayMeasurements); \r\n","import React from 'react';\r\nimport logo from '../images/logo.png' ;\r\nconst Logo = () => {\r\n    return (\r\n        <div className=\"logo\">\r\n            <div className=\"logo__block\">\r\n                <div className=\"logo__block__circle1\">\r\n                    <div className=\"logo__block__circle2\"></div>\r\n                    <div className=\"logo__block__circle3\"></div>\r\n                    <div className=\"logo__block__circle4\">\r\n                        <div className=\"logo__block__circle4-logo\">\r\n                            <img src={logo} alt=\"logo\"  />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Logo;","import React from 'react';\r\nimport Logo from './Logo';\r\nimport '../sass/addmeasurementssummary.scss';\r\nimport {connect} from 'react-redux';\r\nimport {getMeasurements} from '../redux/actions/trainingActions';\r\nimport { useHistory } from \"react-router-dom\";\r\nconst AddMeasurementsSummary = (props) => {\r\n    const history = useHistory()\r\n    const handlemovetohomepage = () =>{\r\n        history.push('/')\r\n    }\r\n    return (\r\n        <div className=\"addmeasurementssummary\">\r\n            <Logo />\r\n            <div className=\"addmeasurementssummary-title\">Właśnie zaaktualizowałeś swoje pomiary</div>\r\n            <div className=\"addmeasurementssummary-secondtitle\">Zmiany:</div>\r\n            {props.olddata !== undefined ?\r\n            <div className=\"addmeasurementssummary__elements\">\r\n                <div className=\"addmeasurementssummary__elements__element\" style={{color: props.olddata.weight >= props.newdata.weight ? 'red' : 'green' }}>Waga <span>{props.olddata.weight}{'=>'}{props.newdata.weight}</span></div>\r\n                <div className=\"addmeasurementssummary__elements__element\" style={{color: props.olddata.growth >= props.newdata.growth ? 'red' : 'green' }}>Wzrost <span>{props.olddata.growth}{'=>'}{props.newdata.growth}</span></div>\r\n                <div className=\"addmeasurementssummary__elements__element\" style={{color: props.olddata.left_biceps >= props.newdata.left_biceps ? 'red' : 'green' }}>Lewy biceps <span>{props.olddata.left_biceps}{'=>'}{props.newdata.left_biceps}</span></div>\r\n                <div className=\"addmeasurementssummary__elements__element\" style={{color: props.olddata.right_biceps >= props.newdata.right_biceps ? 'red' : 'green' }}>Prawy biceps <span>{props.olddata.right_biceps}{'=>'}{props.newdata.right_biceps}</span></div>\r\n                <div className=\"addmeasurementssummary__elements__element\" style={{color: props.olddata.left_forearm >= props.newdata.left_forearm ? 'red' : 'green' }}>Lewe przedramię <span>{props.olddata.left_forearm}{'=>'}{props.newdata.left_forearm}</span></div>\r\n                <div className=\"addmeasurementssummary__elements__element\" style={{color: props.olddata.right_forearm >= props.newdata.right_forearm ? 'red' : 'green' }}>Prawe przedramię <span>{props.olddata.right_forearm}{'=>'}{props.newdata.right_forearm}</span></div>\r\n                <div className=\"addmeasurementssummary__elements__element\" style={{color: props.olddata.left_leg >= props.newdata.left_leg ? 'red' : 'green' }}>Lewa noga <span>{props.olddata.left_leg}{'=>'}{props.newdata.left_leg}</span></div>\r\n                <div className=\"addmeasurementssummary__elements__element\" style={{color: props.olddata.right_leg >= props.newdata.right_leg ? 'red' : 'green' }}>Prawa noga <span>{props.olddata.right_leg}{'=>'}{props.newdata.right_leg}</span></div>\r\n                <div className=\"addmeasurementssummary__elements__element\"></div>\r\n            </div>\r\n            :<div className=\"addmeasurementssummary__elements\">\r\n                <div className=\"addmeasurementssummary__elements__element\" >Waga <span>{props.newdata.weight}</span></div>\r\n                <div className=\"addmeasurementssummary__elements__element\" >Wzrost <span>{props.newdata.growth}</span></div>\r\n                <div className=\"addmeasurementssummary__elements__element\" >Lewy biceps <span>{props.newdata.left_biceps}</span></div>\r\n                <div className=\"addmeasurementssummary__elements__element\" >Prawy biceps <span>{props.newdata.right_biceps}</span></div>\r\n                <div className=\"addmeasurementssummary__elements__element\" >Lewe przedramię <span>{props.newdata.left_forearm}</span></div>\r\n                <div className=\"addmeasurementssummary__elements__element\" >Prawe przedramię <span>{props.newdata.right_forearm}</span></div>\r\n                <div className=\"addmeasurementssummary__elements__element\" >Lewa noga <span>{props.newdata.left_leg}</span></div>\r\n                <div className=\"addmeasurementssummary__elements__element\" >Prawa noga <span>{props.newdata.right_leg}</span></div>\r\n            <div className=\"addmeasurementssummary__elements__element\"></div>\r\n        </div>}\r\n            <div className=\"addmeasurementssummary__button\">\r\n                <button onClick={handlemovetohomepage}>Dalej</button>\r\n            </div>\r\n            \r\n\r\n        </div>\r\n    );\r\n};\r\nconst mapStateToProps = (state) => {\r\n    return{\r\n        \r\n        measurements: state.training.measurements.data,\r\n        \r\n    }\r\n}\r\nexport default connect(mapStateToProps,{getMeasurements})(AddMeasurementsSummary);","import React,{useState,useRef} from 'react';\r\nimport '../sass/addmeasurements.scss';\r\nimport DatePicker,{registerLocale} from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport pl from \"date-fns/locale/pl\";\r\nimport {connect} from 'react-redux';\r\nimport {postMeasurement,getMeasurements} from '../redux/actions/trainingActions';\r\nimport AddMeasurementsSummary from './AddMeasurementsSummary';\r\nconst AddMeasurements = (props) => {\r\n    const [weight,setWeight] = useState(0)\r\n    const [growth,setGrowth] = useState(0)\r\n    const [leftbiceps,setLeftBiceps] = useState(0)\r\n    const [rightbiceps,setRightBiceps] = useState(0)\r\n    const [leftforearm,setLeftForearm] = useState(0)\r\n    const [rightforearm,setRightForearm] = useState(0)\r\n    const [leftleg,setLeftLeg] = useState(0)\r\n    const [rightleg,setRightLeg] = useState(0)\r\n    const [bodyfat,setBodyFat] = useState(0)\r\n    const [summary,setSummary] = useState(false)\r\n    const [data,setData] = useState()\r\n    const inputdate = useRef(null)\r\n    const [olddata,setOldData] = useState(()=>{\r\n        if(props.measurements[props.measurements.length-1] !== undefined){\r\n            return props.measurements[props.measurements.length-1]\r\n        }else{\r\n            return undefined\r\n        }\r\n    })\r\n    const [startDate, setStartDate] = useState(new Date());\r\n    const [actualDate, setActualDate] = useState(new Date())\r\n    const handleDate = () =>{\r\n        let date = new Date(inputdate.current.input.value)\r\n        let splitdate = inputdate.current.input.value.split(\"/\")\r\n        let fullday = splitdate[2] + \"-\" + splitdate[1] + \"-\" +  splitdate[0]\r\n        setActualDate(fullday)\r\n        \r\n    }\r\n    const handlePostMeasurement = () => {\r\n        async function fetchData(){\r\n            await props.postMeasurement(data)\r\n            await props.getMeasurements()\r\n        }\r\n        let splitdate = inputdate.current.input.value.split(\"/\")\r\n        let fullday = splitdate[2] + \"-\" + splitdate[1] + \"-\" +  splitdate[0]\r\n        let data = \r\n        {\r\n            \"date\":fullday,\r\n            \"weight\":weight,\r\n            \"growth\":growth,\r\n            \"left_biceps\":leftbiceps,\r\n            \"right_biceps\":rightbiceps,\r\n            \"right_forearm\":rightforearm,\r\n            \"left_forearm\":leftforearm,\r\n            \"left_leg\":leftleg,\r\n            \"right_leg\":rightleg,\r\n            \"bodyfat\":bodyfat,\r\n\r\n        }\r\n        setOldData(props.measurements[props.measurements.length-1])\r\n        fetchData()\r\n        setData(data)\r\n        setSummary(true)\r\n    }\r\n    registerLocale('pl',pl)\r\n    return (\r\n        <div className=\"addmeasurements\">\r\n            {summary ? <AddMeasurementsSummary newdata={data} olddata={olddata}/> :\r\n            <>\r\n            <div className=\"addmeasurements-title\">Dodaj pomiary</div>\r\n            <div className=\"addmeasurements__container\">\r\n            {olddata !== undefined && <div className=\"addmeasurements__container__oldmeasurementscontainer\">\r\n                <div className=\"addmeasurements__container__oldmeasurementscontainer-title\">Ostatni pomiar</div>\r\n\r\n                <div className=\"addmeasurements__container__oldmeasurementscontainer__data\">\r\n                    <div className=\"addmeasurements__container__oldmeasurementscontainer__data-input\">\r\n                        {olddata.date}\r\n                    </div>\r\n                    </div>\r\n                <div className=\"addmeasurements__container__oldmeasurementscontainer__elements\">\r\n                <div className=\"addmeasurements__container__oldmeasurementscontainer__elements__element\">\r\n                    <div className=\"addmeasurements__container__oldmeasurementscontainer__elements__element-name\">Waga</div>\r\n                    <div className=\"addmeasurements__container__oldmeasurementscontainer__elements__element-result\">{olddata.weight} kg</div>\r\n                    </div>\r\n                    <div className=\"addmeasurements__container__oldmeasurementscontainer__elements__element\">\r\n                    <div className=\"addmeasurements__container__oldmeasurementscontainer__elements__element-name\">Wzrost</div>\r\n                    <div className=\"addmeasurements__container__oldmeasurementscontainer__elements__element-result\">{olddata.growth} cm</div>\r\n                    </div>\r\n                    <div className=\"addmeasurements__container__oldmeasurementscontainer__elements__element\">\r\n                    <div className=\"addmeasurements__container__oldmeasurementscontainer__elements__element-name\">Prawy biceps</div>\r\n                    <div className=\"addmeasurements__container__oldmeasurementscontainer__elements__element-result\">{olddata.right_biceps}cm</div>\r\n                    </div>\r\n                    <div className=\"addmeasurements__container__oldmeasurementscontainer__elements__element\">\r\n                    <div className=\"addmeasurements__container__oldmeasurementscontainer__elements__element-name\">Lewy biceps</div>\r\n                    <div className=\"addmeasurements__container__oldmeasurementscontainer__elements__element-result\">{olddata.left_biceps} cm</div>\r\n                    </div>\r\n                    <div className=\"addmeasurements__container__oldmeasurementscontainer__elements__element\">\r\n                    <div className=\"addmeasurements__container__oldmeasurementscontainer__elements__element-name\">Prawe przedramię</div>\r\n                    <div className=\"addmeasurements__container__oldmeasurementscontainer__elements__element-result\">{olddata.right_forearm} cm</div>\r\n                    </div>\r\n                    <div className=\"addmeasurements__container__oldmeasurementscontainer__elements__element\">\r\n                    <div className=\"addmeasurements__container__oldmeasurementscontainer__elements__element-name\">Lewe przedramię</div>\r\n                    <div className=\"addmeasurements__container__oldmeasurementscontainer__elements__element-result\">{olddata.left_forearm} cm</div>\r\n                    </div>\r\n                    <div className=\"addmeasurements__container__oldmeasurementscontainer__elements__element\">\r\n                    <div className=\"addmeasurements__container__oldmeasurementscontainer__elements__element-name\">Prawe udo</div>\r\n                    <div className=\"addmeasurements__container__oldmeasurementscontainer__elements__element-result\">{olddata.right_leg} cm</div>\r\n                    </div>\r\n                    <div className=\"addmeasurements__container__oldmeasurementscontainer__elements__element\">\r\n                    <div className=\"addmeasurements__container__oldmeasurementscontainer__elements__element-name\">Lewe udo</div>\r\n                    <div className=\"addmeasurements__container__oldmeasurementscontainer__elements__element-result\">{olddata.left_leg} cm</div>\r\n                    </div>\r\n                </div>\r\n            </div>}\r\n            <div className=\"addmeasurements__container__newmeasurementscontainer\">\r\n            <div className=\"addmeasurements__container__newmeasurementscontainer-title\">Aktualny pomiar</div>\r\n                <div className=\"addmeasurements__container__newmeasurementscontainer__data\">\r\n                    <div className=\"addmeasurements__container__newmeasurementscontainer__data-input\">\r\n                    <DatePicker ref={inputdate} locale='pl' dateFormat='dd/MM/yyyy' selected={actualDate} onChange={date => setActualDate(date)} /></div>\r\n                    </div>\r\n                <div className=\"addmeasurements__container__newmeasurementscontainer__elements\">\r\n                <div className=\"addmeasurements__container__newmeasurementscontainer__elements__element\">\r\n                    <div className=\"addmeasurements__container__newmeasurementscontainer__elements__element-name\">Waga</div>\r\n                    <div className=\"addmeasurements__container__newmeasurementscontainer__elements__element-result\"><input onChange={(e)=>{setWeight(parseInt(e.target.value))}} type=\"number\" min=\"0\" max=\"100\" placeholder=\"Dodaj wagę\"/></div>\r\n                </div>\r\n                <div className=\"addmeasurements__container__newmeasurementscontainer__elements__element\">\r\n                    <div className=\"addmeasurements__container__newmeasurementscontainer__elements__element-name\">Wzrost</div>\r\n                    <div className=\"addmeasurements__container__newmeasurementscontainer__elements__element-result\"><input onChange={(e)=>{setGrowth(parseInt(e.target.value))}} type=\"number\" min=\"0\" max=\"300\" placeholder=\"Dodaj wzrost\"/></div>\r\n                </div>\r\n                <div className=\"addmeasurements__container__newmeasurementscontainer__elements__element\">\r\n                    <div className=\"addmeasurements__container__newmeasurementscontainer__elements__element-name\">Prawy biceps</div>\r\n                    <div className=\"addmeasurements__container__newmeasurementscontainer__elements__element-result\"><input onChange={(e)=>{setRightBiceps(parseInt(e.target.value))}} type=\"number\" min=\"0\" max=\"100\"placeholder=\"Prawy biceps\"/></div>\r\n                    </div>\r\n                <div className=\"addmeasurements__container__newmeasurementscontainer__elements__element\">\r\n                    <div className=\"addmeasurements__container__newmeasurementscontainer__elements__element-name\">Lewy biceps</div>\r\n                    <div className=\"addmeasurements__container__newmeasurementscontainer__elements__element-result\"><input onChange={(e)=>{setLeftBiceps(parseInt(e.target.value))}} type=\"number\" min=\"0\" max=\"100\"placeholder=\"Lewy biceps\"/></div>\r\n                </div>\r\n                <div className=\"addmeasurements__container__newmeasurementscontainer__elements__element\">\r\n                    <div className=\"addmeasurements__container__newmeasurementscontainer__elements__element-name\">Prawe przedramię</div>\r\n                    <div className=\"addmeasurements__container__newmeasurementscontainer__elements__element-result\"><input onChange={(e)=>{setRightForearm(parseInt(e.target.value))}} type=\"number\" min=\"0\" max=\"100\"placeholder=\"Prawe przedramię\"/></div>\r\n                </div>\r\n                <div className=\"addmeasurements__container__newmeasurementscontainer__elements__element\">\r\n                    <div className=\"addmeasurements__container__newmeasurementscontainer__elements__element-name\">Lewe przedramię</div>\r\n                    <div className=\"addmeasurements__container__newmeasurementscontainer__elements__element-result\"><input onChange={(e)=>{setLeftForearm(parseInt(e.target.value))}} type=\"number\" min=\"0\" max=\"100\" placeholder=\"Lewe przedramię\"/></div>\r\n                </div>\r\n                <div className=\"addmeasurements__container__newmeasurementscontainer__elements__element\">\r\n                    <div className=\"addmeasurements__container__newmeasurementscontainer__elements__element-name\">Prawe udo</div>\r\n                    <div className=\"addmeasurements__container__newmeasurementscontainer__elements__element-result\"><input onChange={(e)=>{setRightLeg(parseInt(e.target.value))}} type=\"number\" min=\"0\" max=\"100\"placeholder=\"Prawe udo\"/></div>\r\n                </div>\r\n                <div className=\"addmeasurements__container__newmeasurementscontainer__elements__element\">\r\n                    <div className=\"addmeasurements__container__newmeasurementscontainer__elements__element-name\">Lewe udo</div>\r\n                    <div className=\"addmeasurements__container__newmeasurementscontainer__elements__element-result\"><input onChange={(e)=>{setLeftLeg(parseInt(e.target.value))}} type=\"number\" min=\"0\" max=\"100\" placeholder=\"Lewe udo\"/></div>\r\n                </div>\r\n                <div className=\"addmeasurements__container__newmeasurementscontainer__elements__element\">\r\n                    <div className=\"addmeasurements__container__newmeasurementscontainer__elements__element-button\"><button onClick={handlePostMeasurement}>Zaakceptuj zmiany</button></div>\r\n                </div>\r\n                </div>\r\n                </div>\r\n            </div></>}\r\n</div>\r\n    );\r\n};\r\nconst mapStateToProps = (state) => {\r\n    return{\r\n        measurements: state.training.measurements.data\r\n    }\r\n}\r\nexport default connect(mapStateToProps,{postMeasurement,getMeasurements})(AddMeasurements);  \r\n","import React,{useState,useRef} from 'react';\r\nimport '../sass/createtraining.scss';\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\r\nimport {faArrowRight} from '@fortawesome/fontawesome-free-solid';\r\nimport DatePicker,{registerLocale} from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport {connect} from 'react-redux';\r\nimport pl from \"date-fns/locale/pl\";\r\nimport { postTraining,postOwnExercise,getTrainings,getExercises } from '../redux/actions/trainingActions';\r\nimport { useHistory } from \"react-router-dom\";\r\nconst CreateTraining = (props) => {\r\n    const history = useHistory()\r\n    registerLocale('pl',pl)\r\n    const [startDate, setStartDate] = useState(new Date())\r\n    const [ownexerciseActive,setOwnExerciseActive] = useState(false)\r\n    const [activediv , setActivediv] = useState(null)\r\n    const [ownexercise,setOwnExercise] = useState({id: '', name:''})\r\n    const [exercise,setExercise] = useState({id: '', name:''})\r\n    const [series,setSeries] = useState(1)\r\n    const [assumedreps,setAssumedReps] = useState(1)\r\n    const [rest,setRest] = useState(60)\r\n    const [weight,setWeight] = useState(0)\r\n    const [concentricphase,setConcentricPhase] = useState(0)\r\n    const [pauseconcentricphase,setPauseConcentricPhase] = useState(0)\r\n    const [eccentricphase,setEccentricPhase] = useState(0)\r\n    const [pauseeccentricphase,setPauseEccentricPhase] = useState(0)\r\n    const [itemsplaceholders,setItemsPlaceHolders] = useState([])\r\n    const [items,setItems] = useState([])\r\n    const [seriesitems,setSeriesItems] = useState([])\r\n    const name_of_training = useRef(null);\r\n    const training_description = useRef(null);\r\n    const training_date = useRef(null);\r\n    const inputOwnExercise = useRef(null);\r\n    const handlemovetoschedulepage = () =>{\r\n        history.push('/schedule/')\r\n    }\r\n    const addElementtoItems = () =>{\r\n        setItems(prevItems => [...prevItems, {\r\n            exercise : {exercise},\r\n            ownexercise: {ownexercise},\r\n            series: {series},\r\n            assumedreps: {assumedreps},\r\n            rest: {rest},\r\n            weight: {weight},\r\n            concentricphase:{concentricphase},\r\n            pauseconcentricphase:{pauseconcentricphase},\r\n            eccentricphase:{eccentricphase},\r\n            pauseeccentricphase:{pauseeccentricphase}\r\n          }]);\r\n    }\r\n    const addElementstoMainItems = () => {\r\n        setSeriesItems(prevItems => [...prevItems, {\r\n            exercise : {exercise},\r\n            ownexercise: {ownexercise},\r\n            series: {series},\r\n            assumedreps: {assumedreps},\r\n            rest: {rest},\r\n            weight: {weight},\r\n            concentricphase:{concentricphase},\r\n            pauseconcentricphase:{pauseconcentricphase},\r\n            eccentricphase:{eccentricphase},\r\n            pauseeccentricphase:{pauseeccentricphase}\r\n          }]);\r\n    }\r\n    const clearState = () =>{\r\n        // Domyślne dane\r\n        setSeries(1)\r\n        // setAssumedReps(1)\r\n        // setRest(60)\r\n        // setWeight(0)\r\n        // setConcentricPhase(0)\r\n        // setPauseConcentricPhase(0)\r\n        // setEccentricPhase(0)\r\n        // setPauseEccentricPhase(0)\r\n    }\r\n\r\n    const handleNewOwnExercise = async() => {\r\n        await props.postOwnExercise(inputOwnExercise.current.value)\r\n        await props.getExercises()\r\n        \r\n    }\r\n    const handleClickExercise = (e,element) =>{\r\n        if(activediv !== null){\r\n            activediv.style.background = \"#457B9D\"\r\n        }\r\n        setActivediv(e.target)\r\n        console.log(ownexerciseActive)\r\n        if (ownexerciseActive == false){\r\n        setExercise({id:element.id})\r\n        setExercise({name:element.name})\r\n        e.target.style.background = '#db3d44'}\r\n        else{\r\n            setOwnExercise({id:element.id})\r\n            setOwnExercise({name:element.name})\r\n            e.target.style.background = '#db3d44'\r\n        }\r\n    }\r\n    const handleClickSelect = (e) =>{\r\n        if (activediv !== null){\r\n        addElementstoMainItems()\r\n        for(let i=0;i<series;i++){\r\n            setItemsPlaceHolders(oldArray => [...oldArray, assumedreps])\r\n            addElementtoItems()\r\n        }\r\n        activediv.style.background = \"#457B9D\"\r\n        setActivediv(null)\r\n        clearState()\r\n        }else{\r\n            alert(\"Aby kontynuować musisz wybrać ćwiczenie\")\r\n        }\r\n    }\r\n    const changeOwnexercisetoExercise = () => {\r\n        setExercise({id:'',name:''})\r\n        setOwnExercise({id:'',name:''})\r\n        setOwnExerciseActive(false)\r\n    }\r\n    const changeExercisetoOwnexercise = () => {\r\n        setExercise({id:'',name:''})\r\n        setOwnExercise({id:'',name:''})\r\n        setOwnExerciseActive(true)\r\n    }\r\n    const handleChangeinTrainingItems = (e,element) =>{\r\n        let temp = [...itemsplaceholders];\r\n        temp[element.id] = e.target.value\r\n        setItemsPlaceHolders(temp)\r\n    }\r\n    const handleAcceptTraining = () => {\r\n        async function fetchData(data){\r\n            await props.postTraining(data)\r\n            await props.getTrainings()\r\n            await handlemovetoschedulepage()\r\n        }\r\n        if (name_of_training.current.value === \"\"){\r\n            alert(\"Wprowadź nazwę treningu\")\r\n        }else{\r\n            if(training_description.current.value === \"\"){\r\n                training_description.current.value = name_of_training.current.value\r\n            }\r\n            let splitdate = training_date.current.input.value.split(\"/\")\r\n            let fullday = splitdate[2] + \"-\" + splitdate[1] + \"-\" +  splitdate[0]\r\n            let array = {\r\n                name: name_of_training.current.value,\r\n                description: training_description.current.value,\r\n                date: fullday,\r\n                training: []\r\n            }\r\n            let allobjects = []\r\n            let temparray = [...itemsplaceholders]\r\n            for(let i=0;i<seriesitems.length;i++){\r\n                let objects = {reps: []}\r\n                if(seriesitems[i].exercise.exercise.name !== \"\"){\r\n                    objects[\"exercise\"] = {\"name\" : seriesitems[i].exercise.exercise.name}\r\n                }else{\r\n                    objects[\"ownexercise\"] = {\"name\" : seriesitems[i].ownexercise.ownexercise.name,\"user\":1}\r\n                }\r\n                objects[\"pause_after_concentric_phase\"]=seriesitems[i].pauseconcentricphase.pauseconcentricphase\r\n                objects[\"pause_after_eccentric_phase\"]=seriesitems[i].pauseeccentricphase.pauseeccentricphase\r\n                objects[\"weight\"] = seriesitems[i].weight.weight\r\n                objects[\"series\"] = seriesitems[i].series.series\r\n                objects[\"rest\"] = seriesitems[i].rest.rest\r\n                let secondtemparray = []\r\n                for(let k=0; k<seriesitems[i].series.series;k++){\r\n                    let temp = temparray.shift();\r\n                    secondtemparray.push(temp)\r\n                    objects['reps'] = secondtemparray  \r\n                }\r\n                array[\"training\"].push(objects)\r\n                allobjects.push(objects)\r\n            }\r\n            console.log(array)\r\n            fetchData(array)\r\n        // props.postTraining(array)\r\n    }\r\n}\r\n    return (\r\n        <div className=\"createtraining\">\r\n            <div className=\"createtraining-title\">Kreator treningu</div>\r\n            <div className=\"createtraining__containers\">\r\n                <div className=\"createtraining__containers__first\">\r\n                    <div className=\"createtraining__containers__first__selectors\">\r\n                        <div className=\"createtraining__containers__first__selectors-globalexercise\" style={{color: ownexerciseActive ? 'white' : '#db3d44' }} onClick={changeOwnexercisetoExercise}>Ćwiczenia</div>\r\n                        <div className=\"createtraining__containers__first__selectors-myexercise\" style={{color: ownexerciseActive ? '#db3d44' : 'white' }} onClick={changeExercisetoOwnexercise}>Moje Ćwiczenia</div>\r\n                    </div>\r\n                    <div className=\"createtraining__containers__first__newexercise\" style={{display: ownexerciseActive ? 'flex' : 'none' }}>\r\n                        <div className=\"createtraining__containers__first__newexercise-title\">Wprowadź nazwę ćwiczenia lub wyszukaj</div>\r\n                        <span>\r\n                            <input ref={inputOwnExercise} placeholder=\"Wprowadź swoje ćwiczenie\" />\r\n                        </span>\r\n                        <div className=\"createtraining__containers__first__newexercise-button\">\r\n                            <button onClick={handleNewOwnExercise}>Dodaj</button>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className='createtraining__containers__first-input'>Wyszukaj ćwiczenie</div>\r\n                    <div className=\"createtraining__containers__first__exercises\">\r\n                        {ownexerciseActive ? props.ownexercises.map((element)=><div className=\"createtraining__containers__first__exercises__element \"onClick={(e)=>handleClickExercise(e,element)}>{element.name}</div>) : props.exercises.map((element)=><div className=\"createtraining__containers__first__exercises__element \"onClick={(e)=>handleClickExercise(e,element)}>{element.name}</div>)}\r\n                    </div>\r\n                    <div className=\"createtraining__containers__first__trainingdata\">\r\n                        <div className=\"createtraining__containers__first__trainingdata__series\">Podaj liczbę serii danego ćwiczenia *<span><input placeholder={series} value={series} onChange={(e)=>setSeries(parseInt(e.target.value))}/></span></div>\r\n                        <div className=\"createtraining__containers__first__trainingdata__singleseries\">Podaj liczbę powtórzeń danego ćwiczenia *<span><input placeholder={assumedreps} onChange={(e)=>setAssumedReps(parseInt(e.target.value))} /></span></div>\r\n                        <div className=\"createtraining__containers__first__trainingdata__rest\">Podaj czas odpoczynku w (s) *<span><input placeholder={rest} onChange={(e)=>setRest(parseInt(e.target.value))}/></span></div>\r\n                        <div className=\"createtraining__containers__first__trainingdata__weight\">Podaj ciężar w kg(domyślnie 0) <span><input placeholder={weight} onChange={(e)=>setWeight(parseInt(e.target.value))}/></span></div>\r\n                        <div className=\"createtraining__containers__first__trainingdata__concentricphase\">Czas fazy koncentrycznej <span><input placeholder={concentricphase} onChange={(e)=>setConcentricPhase(parseInt(e.target.value))}/></span></div>\r\n                        <div className=\"createtraining__containers__first__trainingdata__pauseafterconcentricphase\">Czas pauzy po fazie koncentrycznej <span><input placeholder={pauseconcentricphase} onChange={(e)=>setPauseConcentricPhase(parseInt(e.target.value))}/></span></div>\r\n                        <div className=\"createtraining__containers__first__trainingdata__eccentricphase\">Czas fazy ekscentrycznej <span><input placeholder={eccentricphase} onChange={(e)=>setEccentricPhase(parseInt(e.target.value))}/></span></div>\r\n                        <div className=\"createtraining__containers__first__trainingdata__pauseaftereccentricphase\">Czas pauzy po fazie ekscentrycznej <span><input placeholder={pauseeccentricphase} onChange={(e)=>setPauseEccentricPhase(parseInt(e.target.value))}/></span></div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"createtraining__containers__second\">\r\n                    <div className=\"createtraining__containers__second-select\" onClick={handleClickSelect}>Wybierz <span> <FontAwesomeIcon icon={faArrowRight} /></span></div>\r\n                    <div className=\"createtraining__containers__second-accepttraining\" onClick={handleAcceptTraining}>Zaakceptuj trening</div>\r\n\r\n                </div>\r\n                <div className=\"createtraining__containers__third\">\r\n                    <div className=\"createtraining__containers__third-title\"><span><input ref={name_of_training} placeholder=\"Nazwa treningu\"/></span></div>\r\n                    <div className=\"createtraining__containers__third-date\"><span>\r\n                    <DatePicker ref={training_date} locale='pl' dateFormat='dd/MM/yyyy' selected={startDate} onChange={date => setStartDate(date)} />\r\n                        </span></div>\r\n                    <div className=\"createtraining__containers__third-description\"><span><input ref={training_description} placeholder=\"Opis\"/></span></div>\r\n                    <div className=\"createtraining__containers__third__elements\">\r\n                        <div className=\"createtraining__containers__third__elements-title\">\r\n                            Ćwiczenia\r\n                        </div>\r\n                        <div className=\"createtraining__containers__third__elements__element\">\r\n                            <table id=\"exercisetable\">\r\n                                <tr>\r\n                                    <th>Ćwiczenie</th>\r\n                                    <th>Powtórzenia</th>\r\n                                    \r\n                                </tr>\r\n                                {items.length > 0 ? items.map((item,id)=>{\r\n                                    return(\r\n                                    <tr>\r\n                                        {item.exercise.exercise.name === \"\" ?<td>{item.ownexercise.ownexercise.name}</td> : <td>{item.exercise.exercise.name}</td> }\r\n                                        <td ><span><input  placeholder={itemsplaceholders[id]} onChange={(e)=>handleChangeinTrainingItems(e,{id})}/></span></td> \r\n                                    </tr>)\r\n                                })\r\n                                :<tr>\r\n                                    </tr>}\r\n                            </table>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\nconst mapStateToProps = (state) => {\r\n    return{\r\n        trainings: state.training.trainings.data,\r\n        loadedtrainings: state.training.loadedtrainings,\r\n        measurements: state.training.measurements.data,\r\n        goals: state.training.goals.data,\r\n        exercises: state.training.exercises.data,\r\n        ownexercises: state.training.ownexercises\r\n    }\r\n}\r\nexport default connect(mapStateToProps,{postTraining,postOwnExercise,getTrainings,getExercises})(CreateTraining); ","import {Route} from 'react-router-dom';\r\nimport React, {useEffect} from 'react';\r\nimport Navbar from './Navbar';\r\nimport Navbar2 from './Navbar2';\r\nimport Training from './Training';\r\nimport Schedule from './Schedule';\r\nimport Homepage from './Homepage';\r\nimport AddGoals from './AddGoals';\r\nimport LoginContainer from './LoginContainer';\r\nimport {connect} from 'react-redux';\r\nimport {getMeasurements,getTrainings,getGoals,getExercises} from '../redux/actions/trainingActions';\r\nimport {postLogoutAuth} from '../redux/actions/authenticationActions';\r\nimport DisplayMeasurements from './DisplayMeasurements'\r\nimport AddMeasurements from './AddMeasurements';\r\nimport CreateTraining from './CreateTraining';\r\nimport Register from './Register';\r\nimport '../sass/defaultcontainer.scss';\r\nimport { BoxLoading } from 'react-loadingg';\r\nimport AddMeasurementsSummary from './AddMeasurementsSummary';\r\nconst DefaultContainer = (props) => {\r\n  useEffect(()=>{\r\n    document.title = \"TrueEffects\"\r\n    if(props.token === \"undefined\"){\r\n      props.postLogoutAuth()\r\n    }else if(props.token){\r\n      props.getMeasurements();\r\n      props.getTrainings();\r\n      props.getGoals();\r\n      props.getExercises();\r\n    }else{\r\n      props.history.push('/login')\r\n    }\r\n  },[])\r\n  \r\n  useEffect(()=>{\r\n    if (props.token === null){\r\n      props.history.push('/login')\r\n    }\r\n  },[props.token])\r\nreturn(\r\n    <div className=\"containerdefault\">\r\n      {props.loadedtrainings && props.loadedgoals && props.loadedmeasurements && props.loadedexercises ?  <>\r\n      <Navbar />\r\n      <Navbar2 />\r\n      <Route exact path=\"/\" component={Homepage}/>\r\n      <Route path=\"/training\" component={Training}/>\r\n      <Route path=\"/schedule\" component={Schedule}/>\r\n      <Route path=\"/addmeasurements\" component={AddMeasurements}/>\r\n      <Route path=\"/displaymeasurements\" component={DisplayMeasurements}/>\r\n      <Route path=\"/createtraining\" component={CreateTraining}/>\r\n      <Route path=\"/measurementsummary\" component={AddMeasurementsSummary} />\r\n      <Route path=\"/addgoals\" component={AddGoals} />\r\n      <Route exact path=\"/login\" component={LoginContainer} />\r\n      <Route exact path=\"/register\" component={Register} />\r\n      </>\r\n      : <BoxLoading />}\r\n    </div>  \r\n )}\r\n const mapStateToProps = (state) => {\r\n  return{\r\n      token : state.authentication.token,\r\n      loadedtrainings: state.training.loadedtrainings,\r\n      loadedmeasurements: state.training.loadedmeasurements,\r\n      loadedgoals: state.training.loadedgoals,\r\n      loadedexercises: state.training.loadedexercises\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps,{getMeasurements,getTrainings,getGoals,getExercises,postLogoutAuth})(DefaultContainer);   ","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import {POST_LOGOUT,GET_MEASUREMENTS,GET_MEASUREMENTS_SUCCESS,POST_TRAINING,GET_TRAININGS,GET_TRAININGS_SUCCESS,\r\n    GET_GOALS,GET_GOALS_SUCCESS,POST_MEASUREMENT,GET_EXERCISES,GET_EXERCISES_SUCCESS,GET_OWN_EXERCISES_SUCCESS,END_TRAINING_SUCCESS,POST_TIME} from '../actions/types';\r\n\r\nconst initialState = {\r\n    measurements: [],\r\n    trainings: [],\r\n    goals:[],\r\n    defaultexercises:[],\r\n    loadingtrainings: false,\r\n    loadedtrainings: false,\r\n    loadingmeasurements: false,\r\n    loadedmeasurements: false,\r\n    loadinggoals: false,\r\n    loadedgoals:false,\r\n    loadingexercises: false,\r\n    loadedexercises:false,\r\n    loadedtime :false,\r\n    ownexercises:[],\r\n    seconds: '',\r\n    minutes: '',\r\n    hours: ''\r\n    \r\n};\r\nexport default function trainreducer(state=initialState,action){\r\n    switch(action.type){\r\n        case GET_MEASUREMENTS:\r\n            return{\r\n                ...state,\r\n                loadingmeasurements:true,\r\n            }\r\n        case GET_MEASUREMENTS_SUCCESS:\r\n            return{\r\n                ...state,\r\n                measurements:action.payload,\r\n                loadingmeasurements:false,\r\n                loadedmeasurements:true\r\n            }\r\n        case GET_EXERCISES:\r\n            return{\r\n                ...state,\r\n                loadingexercises:true,\r\n            }\r\n            case GET_EXERCISES_SUCCESS:\r\n                return{\r\n                    ...state,\r\n                    exercises: action.payload,\r\n                    loadedexercises: true,\r\n                }\r\n        case GET_TRAININGS:\r\n            return{\r\n                ...state,\r\n                loadingtrainings:true,\r\n            \r\n            }\r\n        case GET_TRAININGS_SUCCESS:\r\n            return{\r\n                ...state,\r\n                trainings:action.payload,\r\n                loadingtrainings:false,\r\n                loadedtrainings:true\r\n            }\r\n        case GET_GOALS:\r\n            return{\r\n                ...state,\r\n                loadinggoals:true\r\n            }\r\n        case GET_GOALS_SUCCESS:\r\n            return{\r\n                ...state,\r\n                goals:action.payload,\r\n                loadinggoals:false,\r\n                loadedgoals:true\r\n\r\n            }\r\n        case POST_TRAINING:\r\n            return{\r\n                ...state\r\n            }\r\n        case POST_MEASUREMENT:\r\n            return{\r\n                ...state\r\n            }\r\n        case POST_LOGOUT:\r\n            return{\r\n                ...state,\r\n                measurements: [],\r\n                trainings: [],\r\n                goals:[],\r\n                loadedtrainings: false,\r\n                loadedgoals: false,\r\n                loadedmeasurements: false\r\n            }\r\n        case GET_OWN_EXERCISES_SUCCESS:\r\n            return{\r\n                ...state,\r\n                ownexercises:action.payload\r\n            }\r\n        case END_TRAINING_SUCCESS:\r\n            return{\r\n                ...state,\r\n                \r\n            }\r\n        case POST_TIME:\r\n            return{\r\n                ...state,\r\n                seconds: action.second,\r\n                minutes: action.minute,\r\n                hours: action.hour,\r\n            }\r\n        \r\n        default: \r\n            return state;\r\n    }\r\n}","import {POST_LOGIN,USER_LOADED,AUTH_ERROR,LOGIN_ERROR,POST_REGISTER, REGISTER_ERROR,POST_LOGOUT_AUTH, USER_LOADING} from '../actions/types';\r\nconst initialState = {\r\n    token: null,\r\n    name: null,\r\n    isAuthenticated: null,\r\n    error: '',\r\n    error_register: [],\r\n    tokenloaded: false,\r\n    error_register_name: '',\r\n    seconds: '',\r\n    minutes: '',\r\n    hours: ''\r\n};\r\nexport default function authreducer(state=initialState,action){\r\n    switch(action.type){\r\n        case POST_LOGIN:\r\n            return{\r\n                ...state,\r\n                token:action.payload,\r\n                tokenloaded: true,\r\n                error: ''\r\n            }\r\n        case LOGIN_ERROR:\r\n            return{\r\n                ...state,\r\n                error:action.payload\r\n            }\r\n        case POST_REGISTER:\r\n            return{\r\n                ...state,\r\n                token:action.payload.token,\r\n                name:action.payload.username,\r\n                tokenloaded: true,\r\n                error_register: ''\r\n            }\r\n        case REGISTER_ERROR:\r\n            return{\r\n                ...state,\r\n                error_register:action.payload\r\n            }\r\n        case POST_LOGOUT_AUTH:\r\n            return{\r\n                ...state,\r\n                token: '',\r\n                tokenloaded: false\r\n            }\r\n        case USER_LOADING:\r\n            return{\r\n                ...state,\r\n                isLoading: true\r\n            }\r\n        case USER_LOADED:\r\n            console.log(action.payload.name)\r\n            return{\r\n                ...state,\r\n                isLoaded: true,\r\n                isAuthenticated: true,  \r\n                token: action.payload.token,\r\n                name: action.payload.username,\r\n                error: ''\r\n            }\r\n        case AUTH_ERROR:\r\n            localStorage.removeItem('token')\r\n            localStorage.removeItem('name')\r\n            return{\r\n                ...state,\r\n                token:null,\r\n                name: null,\r\n                isAuthenticated:false,\r\n                isLoading: false\r\n            }\r\n        \r\n\r\n        default: \r\n            return state;\r\n    }\r\n}","import {combineReducers} from 'redux';\r\nimport trainingReducer from './trainingReducer';\r\nimport authenticationReducer from './authenticationReducer';\r\nexport default combineReducers({\r\n    training:trainingReducer,\r\n    authentication:authenticationReducer,\r\n    \r\n})","import {createStore,applyMiddleware} from 'redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from './redux/reducers';\r\n\r\nconst initialState = {};\r\nconst middleware = [thunk];\r\nconst store = createStore(rootReducer,initialState,composeWithDevTools(applyMiddleware(...middleware),));\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport LoginContainer from './components/LoginContainer';\nimport DefaultContainer from './components/DefaultContainer';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter, Route,Switch } from 'react-router-dom';\nimport {Provider} from 'react-redux'\nimport store from './store';\nimport '@trendmicro/react-sidenav/dist/react-sidenav.css';\nimport './sass/index.scss';\nReactDOM.render(\n  \n  <Provider store={store}>\n  <BrowserRouter>\n  <Switch>\n    <Route exact path=\"/(login)\" component={LoginContainer}/>\n    <Route exact path=\"/(register)\" component={LoginContainer}/>\n    <Route component={DefaultContainer} />\n  </Switch>\n</BrowserRouter>\n</Provider>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}